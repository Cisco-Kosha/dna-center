{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "support@cisco.com"
    },
    "description": "Cisco DNA Center is a software-based network automation and assurance solution.",
    "termsOfService": "https://cisco.com",
    "title": "DNA Center API",
    "version": "1.0.6"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/api/system/v1/maglev/backup": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        },
        "tags": [
          "backups"
        ],
        "description": "list all backups",
        "operationId": "list_all_backups",
        "summary": "List all of your DNA center backups"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBackup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        },
        "tags": [
          "backups"
        ],
        "description": "Create DNAC backup",
        "operationId": "create_backup",
        "summary": "Create DNA center backup"
      }
    },
    "/api/system/v1/maglev/backup/history": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        },
        "tags": [
          "backups"
        ],
        "description": "list all backup history",
        "operationId": "list_all_backups_history",
        "summary": "List all of your DNA center backup history"
      }
    },
    "/api/system/v1/maglev/backup/progress": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        },
        "tags": [
          "backups"
        ],
        "description": "get DNAC backup progress",
        "operationId": "get_backup_progress",
        "summary": "Get DNA center backup progress"
      }
    },
    "/api/system/v1/maglev/backup/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Valid backup id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "There was an error when processing your request. Please adjust your request based on the endpoint requirements and try again."
          },
          "401": {
            "description": "The provided API token is invalid."
          },
          "403": {
            "description": "The action is denied for that account or a particular API token."
          },
          "422": {
            "description": "There was a validation error found when processing the request. Please adjust it based on the endpoint requirements and try again."
          }
        },
        "tags": [
          "backups"
        ],
        "description": "delete DNAC backup",
        "operationId": "delete_backup",
        "summary": "Delete DNA center backup"
      }
    },
    "/api/v1/onboarding/pnp-device/authorize": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "Content-Type",
            "required": false,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizeDeviceResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Cisco DNA Center System"
        ],
        "description": "Authorizes one of more devices. A device can only be authorized if Authorization is set in Device Settings.",
        "operationId": "authorizeDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeDeviceRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Authorize Device"
      }
    },
    "/dna/data/api/v1/event/event-series/audit-log/parent-records": {
      "get": {
        "parameters": [
          {
            "description": "InstanceID of the Audit Log.",
            "in": "query",
            "name": "instanceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification event name.",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event ID. ",
            "in": "query",
            "name": "eventId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event category. Supported values: INFO, WARN, ERROR, ALERT, TASK_PROGRESS, TASK_FAILURE, TASK_COMPLETE, COMMAND, QUERY, CONVERSATION",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event severity. Supported values: 1, 2, 3, 4, 5.",
            "in": "query",
            "name": "severity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event domain.",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event sub-domain.",
            "in": "query",
            "name": "subDomain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event source.",
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event userId.",
            "in": "query",
            "name": "userId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event correlationId.",
            "in": "query",
            "name": "context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event eventHierarchy. Example: \"US.CA.San Jose\" OR \"US.CA\" OR \"CA.San Jose\" - Delimiter for hierarchy separation is \".\".",
            "in": "query",
            "name": "eventHierarchy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's siteId.",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's deviceId.",
            "in": "query",
            "name": "deviceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Parameter to filter system generated audit-logs.",
            "in": "query",
            "name": "isSystemEvents",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "String full/partial search - (Provided input string is case insensitively matched for records).",
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Position of a particular Audit Log record in the data. ",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Number of Audit Log records to be returned per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Start Time in milliseconds since Epoch Eg. 1597950637211 (when provided endTime is mandatory)",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "End Time in milliseconds since Epoch Eg. 1597961437211 (when provided startTime is mandatory)",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Sort the Audit Logs by certain fields. Supported values are event notification header attributes.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order of the sorted Audit Log records. Default value is desc by timestamp. Supported values: asc, desc.",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAuditLogParentRecordsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Get Parent Audit Log Event instances from the Event-Hub ",
        "operationId": "getAuditLogParentRecords",
        "summary": "Get AuditLog Parent Records"
      }
    },
    "/dna/data/api/v1/event/event-series/audit-log/summary": {
      "get": {
        "parameters": [
          {
            "description": "Parent Audit Log record's instanceID.",
            "in": "query",
            "name": "parentInstanceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Parameter to filter parent only audit-logs.",
            "in": "query",
            "name": "isParentOnly",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "InstanceID of the Audit Log.",
            "in": "query",
            "name": "instanceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification event name.",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event ID. ",
            "in": "query",
            "name": "eventId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event category. Supported values: INFO, WARN, ERROR, ALERT, TASK_PROGRESS, TASK_FAILURE, TASK_COMPLETE, COMMAND, QUERY, CONVERSATION",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event severity. Supported values: 1, 2, 3, 4, 5.",
            "in": "query",
            "name": "severity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event domain.",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event sub-domain.",
            "in": "query",
            "name": "subDomain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event source.",
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event userId.",
            "in": "query",
            "name": "userId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event correlationId.",
            "in": "query",
            "name": "context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event eventHierarchy. Example: \"US.CA.San Jose\" OR \"US.CA\" OR \"CA.San Jose\" - Delimiter for hierarchy separation is \".\".",
            "in": "query",
            "name": "eventHierarchy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's siteId.",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's deviceId.",
            "in": "query",
            "name": "deviceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Parameter to filter system generated audit-logs.",
            "in": "query",
            "name": "isSystemEvents",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "String full/partial search - (Provided input string is case insensitively matched for records).",
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start Time in milliseconds since Epoch Eg. 1597950637211 (when provided endTime is mandatory)",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "End Time in milliseconds since Epoch Eg. 1597961437211 (when provided startTime is mandatory)",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAuditLogSummaryResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Get Audit Log Summary from the Event-Hub",
        "operationId": "getAuditLogSummary",
        "summary": "Get AuditLog Summary"
      }
    },
    "/dna/data/api/v1/event/event-series/audit-logs": {
      "get": {
        "parameters": [
          {
            "description": "Parent Audit Log record's instanceID.",
            "in": "query",
            "name": "parentInstanceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "InstanceID of the Audit Log.",
            "in": "query",
            "name": "instanceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification event name.",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event ID. ",
            "in": "query",
            "name": "eventId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event category. Supported values: INFO, WARN, ERROR, ALERT, TASK_PROGRESS, TASK_FAILURE, TASK_COMPLETE, COMMAND, QUERY, CONVERSATION",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event severity. Supported values: 1, 2, 3, 4, 5.",
            "in": "query",
            "name": "severity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event domain.",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event sub-domain.",
            "in": "query",
            "name": "subDomain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event source.",
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event userId.",
            "in": "query",
            "name": "userId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event correlationId.",
            "in": "query",
            "name": "context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's event eventHierarchy. Example: \"US.CA.San Jose\" OR \"US.CA\" OR \"CA.San Jose\" - Delimiter for hierarchy separation is \".\".",
            "in": "query",
            "name": "eventHierarchy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's siteId.",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Audit Log notification's deviceId.",
            "in": "query",
            "name": "deviceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Parameter to filter system generated audit-logs.",
            "in": "query",
            "name": "isSystemEvents",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "String full/partial search - (Provided input string is case insensitively matched for records).",
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Position of a particular Audit Log record in the data. ",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Number of Audit Log records to be returned per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Start Time in milliseconds since Epoch Eg. 1597950637211 (when provided endTime is mandatory)",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "End Time in milliseconds since Epoch Eg. 1597961437211 (when provided startTime is mandatory)",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Sort the Audit Logs by certain fields. Supported values are event notification header attributes.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order of the sorted Audit Log records. Default value is desc by timestamp. Supported values: asc, desc.",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAuditLogRecordsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Get Audit Log Event instances from the Event-Hub ",
        "operationId": "getAuditLogRecords",
        "summary": "Get AuditLog Records"
      }
    },
    "/dna/intent/api/v1/AssuranceGetSensorTestResults": {
      "get": {
        "parameters": [
          {
            "description": "Assurance site UUID",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "The epoch time in milliseconds",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The epoch time in milliseconds",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Obtain failure statistics group by \"area\", \"building\", or \"floor\"",
            "in": "query",
            "name": "testFailureBy",
            "required": false,
            "schema": {
              "default": "area",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorTestResultsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Intent API to get SENSOR test result summary",
        "operationId": "sensorTestResults",
        "summary": "Sensor Test Results"
      }
    },
    "/dna/intent/api/v1/AssuranceScheduleSensorTest": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditSensorTestTemplateResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sensors"
        ],
        "description": "Intent API to deploy, schedule, or edit and existing SENSOR test template",
        "operationId": "editSensorTestTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditSensorTestTemplateRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Edit sensor test template"
      }
    },
    "/dna/intent/api/v1/app-policy": {
      "get": {
        "parameters": [
          {
            "description": "policy scope name",
            "in": "query",
            "name": "policyScope",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationPolicyResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Get all existing application policies",
        "operationId": "getApplicationPolicy",
        "summary": "Get Application Policy"
      }
    },
    "/dna/intent/api/v1/app-policy-default": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationPolicyDefaultResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Get default application policy",
        "operationId": "getApplicationPolicyDefault",
        "summary": "Get Application Policy Default"
      }
    },
    "/dna/intent/api/v1/app-policy-intent": {
      "post": {
        "parameters": [
          {
            "description": "content-type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationPolicyIntentResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Create/Update/Delete application policy",
        "operationId": "applicationPolicyIntent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationPolicyIntentRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Application Policy Intent"
      }
    },
    "/dna/intent/api/v1/app-policy-queuing-profile": {
      "get": {
        "parameters": [
          {
            "description": "queuing profile name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationPolicyQueuingProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Get all or by name, existing application policy queuing profiles",
        "operationId": "getApplicationPolicyQueuingProfile",
        "summary": "Get Application Policy Queuing Profile"
      },
      "post": {
        "parameters": [
          {
            "description": "content-type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApplicationPolicyQueuingProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Create new custom application queuing profile",
        "operationId": "createApplicationPolicyQueuingProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationPolicyQueuingProfileRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Application Policy Queuing Profile"
      },
      "put": {
        "parameters": [
          {
            "description": "content-type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateApplicationPolicyQueuingProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Update existing custom application queuing profile",
        "operationId": "updateApplicationPolicyQueuingProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApplicationPolicyQueuingProfileRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Application Policy Queuing Profile"
      }
    },
    "/dna/intent/api/v1/app-policy-queuing-profile-count": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationPolicyQueuingProfileCountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Get the number of all existing  application policy queuing profile",
        "operationId": "getApplicationPolicyQueuingProfileCount",
        "summary": "Get Application Policy Queuing Profile Count"
      }
    },
    "/dna/intent/api/v1/application-health": {
      "get": {
        "parameters": [
          {
            "description": "Assurance site UUID value (Cannot be submitted together with deviceId and clientMac)",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Assurance device UUID value (Cannot be submitted together with siteId and clientMac)",
            "in": "query",
            "name": "deviceId",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Client device's MAC address (Cannot be submitted together with siteId and deviceId)",
            "in": "query",
            "name": "macAddress",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Starting epoch time in milliseconds of time window",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Ending epoch time in milliseconds of time window",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Application health category (POOR, FAIR, or GOOD.  Optionally use with siteId only)",
            "in": "query",
            "name": "applicationHealth",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "The offset of the first application in the returned data (optionally used with siteId only)",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The max number of application entries in returned data [1, 1000] (optionally used with siteId only)",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The name of the application to get information on",
            "in": "query",
            "name": "applicationName",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Applications"
        ],
        "description": "Intent API to get a list of applications for a specific site, a device, or a client device's MAC address. For a combination of a specific application with site and/or device the API gets list of issues/devices/endpoints.",
        "operationId": "applications",
        "summary": "Applications"
      }
    },
    "/dna/intent/api/v1/application-policy-application-set": {
      "delete": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteApplicationSetResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Delete existing application-set by it's id",
        "operationId": "deleteApplicationSet",
        "summary": "Delete Application Set"
      },
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 500,
              "type": "number"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationSetsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Get appllication-sets by offset/limit or by name",
        "operationId": "getApplicationSets",
        "summary": "Get Application Sets"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApplicationSetResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Create new custom application-set/s",
        "operationId": "createApplicationSet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationSetRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Application Set"
      }
    },
    "/dna/intent/api/v1/application-policy-application-set-count": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationSetsCountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Get the number of existing application-sets ",
        "operationId": "getApplicationSetsCount",
        "summary": "Get Application Sets Count"
      }
    },
    "/dna/intent/api/v1/applications": {
      "delete": {
        "parameters": [
          {
            "description": "Application's Id",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteApplicationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Delete existing application by its id",
        "operationId": "deleteApplication",
        "summary": "Delete Application"
      },
      "get": {
        "parameters": [
          {
            "description": "The offset of the first application to be returned",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "description": "The maximum number of applications to be returned",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 500,
              "type": "number"
            }
          },
          {
            "description": "Application's name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Get applications by offset/limit or by name",
        "operationId": "getApplications",
        "summary": "Get Applications"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApplicationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Create new Custom application",
        "operationId": "createApplication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Application"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditApplicationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Edit the attributes of an existing application",
        "operationId": "editApplication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditApplicationRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Edit Application"
      }
    },
    "/dna/intent/api/v1/applications-count": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationsCountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Get the number of all existing applications",
        "operationId": "getApplicationsCount",
        "summary": "Get Applications Count"
      }
    },
    "/dna/intent/api/v1/assign-device-to-site/{siteId}/device": {
      "post": {
        "parameters": [
          {
            "description": "Enable this parameter to execute the API and return a response synchronously",
            "in": "header",
            "name": "__runsync",
            "required": true,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Persist bapi sync response",
            "in": "header",
            "name": "__persistbapioutput",
            "required": true,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated",
            "in": "header",
            "name": "__runsynctimeout",
            "required": false,
            "schema": {
              "default": 55,
              "type": "number"
            }
          },
          {
            "description": "Site id to which site the device to assign",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignDevicesToSiteResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sites"
        ],
        "description": "Assigns unassigned devices to a site. This API does not move assigned devices to other sites.",
        "operationId": "assignDevicesToSite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignDevicesToSiteRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Assign Devices To Site"
      }
    },
    "/dna/intent/api/v1/authentication-policy-servers": {
      "get": {
        "parameters": [
          {
            "description": "Valid values are : true, false",
            "in": "query",
            "name": "isIseEnabled",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Valid values are: INPROGRESS, ACTIVE, DELETED, RBAC-FAILURE, FAILED",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Authentication and Policy Server Role (Example: primary, secondary)",
            "in": "query",
            "name": "role",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAuthenticationAndPolicyServersResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "System Settings"
        ],
        "description": "API to get Authentication and Policy Servers",
        "operationId": "getAuthenticationAndPolicyServers",
        "summary": "Get Authentication and Policy Servers"
      }
    },
    "/dna/intent/api/v1/buildings/{buildingId}/planned-access-points": {
      "get": {
        "parameters": [
          {
            "description": "Building Id",
            "in": "path",
            "name": "buildingId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "inlcude planned radio details",
            "in": "query",
            "name": "radios",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlannedAccessPointsForBuildingResponse"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "description": "requested building id is not found"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Provides a list of Planned Access Points for the Building it is requested for",
        "operationId": "getPlannedAccessPointsForBuilding",
        "summary": "Get Planned Access Points for Building"
      }
    },
    "/dna/intent/api/v1/business/nfv": {
      "post": {
        "parameters": [
          {
            "description": "Enable this parameter to execute the API and return a response synchronously",
            "in": "header",
            "name": "__runsync",
            "required": true,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated",
            "in": "header",
            "name": "__timeout",
            "required": false,
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "description": "Persist bapi sync response",
            "in": "header",
            "name": "__persistbapioutput",
            "required": true,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionNFVResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Site Design"
        ],
        "description": "Design and Provision single/multi NFV device with given site/area/building/floor .",
        "operationId": "provisionNFV",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvisionNFVRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Provision NFV"
      }
    },
    "/dna/intent/api/v1/business/sda/authentication-profile": {
      "delete": {
        "parameters": [
          {
            "description": "siteNameHierarchy",
            "in": "query",
            "name": "siteNameHierarchy",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDefaultAuthenticationProfileFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Delete default authentication profile in SDA Fabric",
        "operationId": "deleteDefaultAuthenticationProfileFromSDAFabric",
        "summary": "Delete default authentication profile from SDA Fabric"
      },
      "get": {
        "parameters": [
          {
            "description": "siteNameHierarchy",
            "in": "query",
            "name": "siteNameHierarchy",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "authenticateTemplateName",
            "in": "query",
            "name": "authenticateTemplateName",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultAuthenticationProfileFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get default authentication profile from SDA Fabric",
        "operationId": "getDefaultAuthenticationProfileFromSDAFabric",
        "summary": "Get default authentication profile from SDA Fabric"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddDefaultAuthenticationTemplateInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Add default authentication template in SDA Fabric",
        "operationId": "addDefaultAuthenticationTemplateInSDAFabric",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDefaultAuthenticationTemplateInSDAFabricRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add default authentication template in SDA Fabric"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDefaultAuthenticationProfileInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Update default authentication profile in SDA Fabric",
        "operationId": "updateDefaultAuthenticationProfileInSDAFabric",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDefaultAuthenticationProfileInSDAFabricRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update default authentication profile in SDA Fabric"
      }
    },
    "/dna/intent/api/v1/business/sda/border-device": {
      "delete": {
        "parameters": [
          {
            "description": "deviceManagementIpAddress",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBorderDeviceFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Delete border device from SDA Fabric",
        "operationId": "deleteBorderDeviceFromSDAFabric",
        "summary": "Delete border device from SDA Fabric"
      },
      "get": {
        "parameters": [
          {
            "description": "deviceManagementIpAddress",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBorderDeviceDetailFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get border device detail from SDA Fabric",
        "operationId": "getBorderDeviceDetailFromSDAFabric",
        "summary": "Get border device detail from SDA Fabric"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBorderDeviceInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Add border device in SDA Fabric",
        "operationId": "addBorderDeviceInSDAFabric",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBorderDeviceInSDAFabricRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add border device in SDA Fabric"
      }
    },
    "/dna/intent/api/v1/business/sda/control-plane-device": {
      "delete": {
        "parameters": [
          {
            "description": "deviceManagementIpAddress",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteControlPlaneDeviceInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Delete control plane device in SDA Fabric",
        "operationId": "deleteControlPlaneDeviceInSDAFabric",
        "summary": "Delete control plane device in SDA Fabric"
      },
      "get": {
        "parameters": [
          {
            "description": "deviceManagementIpAddress",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetControlPlaneDeviceFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get control plane device from SDA Fabric",
        "operationId": "getControlPlaneDeviceFromSDAFabric",
        "summary": "Get control plane device from SDA Fabric"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddControlPlaneDeviceInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Add control plane device in SDA Fabric",
        "operationId": "addControlPlaneDeviceInSDAFabric",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddControlPlaneDeviceInSDAFabricRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add control plane device in SDA Fabric"
      }
    },
    "/dna/intent/api/v1/business/sda/device": {
      "get": {
        "parameters": [
          {
            "description": "deviceManagementIpAddress",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceInfoFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get device info from SDA Fabric",
        "operationId": "getDeviceInfoFromSDAFabric",
        "summary": "Get device info from SDA Fabric"
      }
    },
    "/dna/intent/api/v1/business/sda/device/role": {
      "get": {
        "parameters": [
          {
            "description": "Device Management IP Address",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceRoleInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get device role in SDA Fabric",
        "operationId": "getDeviceRoleInSDAFabric",
        "summary": "Get device role in SDA Fabric"
      }
    },
    "/dna/intent/api/v1/business/sda/edge-device": {
      "delete": {
        "parameters": [
          {
            "description": "deviceManagementIpAddress",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteEdgeDeviceFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Delete edge device from SDA Fabric.",
        "operationId": "deleteEdgeDeviceFromSDAFabric",
        "summary": "Delete edge device from SDA Fabric"
      },
      "get": {
        "parameters": [
          {
            "description": "deviceManagementIpAddress",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEdgeDeviceFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get edge device from SDA Fabric",
        "operationId": "getEdgeDeviceFromSDAFabric",
        "summary": "Get edge device from SDA Fabric"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddEdgeDeviceInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Add edge device in SDA Fabric",
        "operationId": "addEdgeDeviceInSDAFabric",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEdgeDeviceInSDAFabricRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add edge device in SDA Fabric"
      }
    },
    "/dna/intent/api/v1/business/sda/fabric-site": {
      "delete": {
        "parameters": [
          {
            "description": "Site Name Hierarchy",
            "in": "query",
            "name": "siteNameHierarchy",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSiteFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Delete Site from SDA Fabric",
        "operationId": "deleteSiteFromSDAFabric",
        "summary": "Delete Site from SDA Fabric"
      },
      "get": {
        "parameters": [
          {
            "description": "Site Name Hierarchy",
            "in": "query",
            "name": "siteNameHierarchy",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSiteFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get Site info from SDA Fabric",
        "operationId": "getSiteFromSDAFabric",
        "summary": "Get Site from SDA Fabric"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddSiteInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Add Site in SDA Fabric",
        "operationId": "addSiteInSDAFabric",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSiteInSDAFabricRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add Site in SDA Fabric"
      }
    },
    "/dna/intent/api/v1/business/sda/hostonboarding/access-point": {
      "delete": {
        "parameters": [
          {
            "description": "deviceManagementIpAddress",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "interfaceName",
            "in": "query",
            "name": "interfaceName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePortAssignmentForAccessPointInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Delete Port assignment for access point in SDA Fabric",
        "operationId": "deletePortAssignmentForAccessPointInSDAFabric",
        "summary": "Delete Port assignment for access point in SDA Fabric"
      },
      "get": {
        "parameters": [
          {
            "description": "deviceManagementIpAddress",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "interfaceName",
            "in": "query",
            "name": "interfaceName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortAssignmentForAccessPointInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get Port assignment for access point in SDA Fabric",
        "operationId": "getPortAssignmentForAccessPointInSDAFabric",
        "summary": "Get Port assignment for access point in SDA Fabric"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPortAssignmentForAccessPointInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Add Port assignment for access point in SDA Fabric",
        "operationId": "addPortAssignmentForAccessPointInSDAFabric",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPortAssignmentForAccessPointInSDAFabricRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add Port assignment for access point in SDA Fabric"
      }
    },
    "/dna/intent/api/v1/business/sda/hostonboarding/user-device": {
      "delete": {
        "parameters": [
          {
            "description": "deviceManagementIpAddress",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "interfaceName",
            "in": "query",
            "name": "interfaceName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePortAssignmentForUserDeviceInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Delete Port assignment for user device in SDA Fabric.",
        "operationId": "deletePortAssignmentForUserDeviceInSDAFabric",
        "summary": "Delete Port assignment for user device in SDA Fabric"
      },
      "get": {
        "parameters": [
          {
            "description": "deviceManagementIpAddress",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "interfaceName",
            "in": "query",
            "name": "interfaceName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortAssignmentForUserDeviceInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get Port assignment for user device in SDA Fabric.",
        "operationId": "getPortAssignmentForUserDeviceInSDAFabric",
        "summary": "Get Port assignment for user device in SDA Fabric"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPortAssignmentForUserDeviceInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Add Port assignment for user device in SDA Fabric.",
        "operationId": "addPortAssignmentForUserDeviceInSDAFabric",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPortAssignmentForUserDeviceInSDAFabricRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add Port assignment for user device in SDA Fabric"
      }
    },
    "/dna/intent/api/v1/business/sda/multicast": {
      "delete": {
        "parameters": [
          {
            "description": "siteNameHierarchy",
            "in": "query",
            "name": "siteNameHierarchy",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteMulticastFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Delete multicast from SDA fabric",
        "operationId": "deleteMulticastFromSDAFabric",
        "summary": "Delete multicast from SDA fabric"
      },
      "get": {
        "parameters": [
          {
            "description": "fabric site name hierarchy",
            "in": "query",
            "name": "siteNameHierarchy",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMulticastDetailsFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get multicast details from SDA fabric",
        "operationId": "getMulticastDetailsFromSDAFabric",
        "summary": "Get multicast details from SDA fabric"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddMulticastInSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Add multicast in SDA fabric",
        "operationId": "addMulticastInSDAFabric",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMulticastInSDAFabricRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add multicast in SDA fabric"
      }
    },
    "/dna/intent/api/v1/business/sda/provision-device": {
      "delete": {
        "parameters": [
          {
            "description": "Valid IP address of the device currently provisioned in a fabric site",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProvisionedWiredDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Delete provisioned Wired Device",
        "operationId": "deleteProvisionedWiredDevice",
        "summary": "Delete provisioned Wired Device"
      },
      "get": {
        "parameters": [
          {
            "description": "deviceManagementIpAddress",
            "in": "query",
            "name": "deviceManagementIpAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProvisionedWiredDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get Provisioned Wired Device",
        "operationId": "getProvisionedWiredDevice",
        "summary": "Get Provisioned Wired Device"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionWiredDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Provision Wired Device",
        "operationId": "provisionWiredDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvisionWiredDeviceRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Provision Wired Device"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReProvisionWiredDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Re-Provision Wired Device",
        "operationId": "re-ProvisionWiredDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReProvisionWiredDeviceRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Re-Provision Wired Device"
      }
    },
    "/dna/intent/api/v1/business/sda/transit-peer-network": {
      "delete": {
        "parameters": [
          {
            "description": "Transit Peer Network Name",
            "in": "query",
            "name": "transitPeerNetworkName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTransitPeerNetworkResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Delete Transit Peer Network from SD-Access",
        "operationId": "deleteTransitPeerNetwork",
        "summary": "Delete Transit Peer Network"
      },
      "get": {
        "parameters": [
          {
            "description": "Transit or Peer Network Name",
            "in": "query",
            "name": "transitPeerNetworkName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransitPeerNetworkInfoResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get Transit Peer Network Info from SD-Access",
        "operationId": "getTransitPeerNetworkInfo",
        "summary": "Get Transit Peer Network Info"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTransitPeerNetworkResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Add Transit Peer Network in SD-Access",
        "operationId": "addTransitPeerNetwork",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTransitPeerNetworkRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add Transit Peer Network"
      }
    },
    "/dna/intent/api/v1/business/sda/virtual-network": {
      "delete": {
        "parameters": [
          {
            "description": "virtualNetworkName",
            "in": "query",
            "name": "virtualNetworkName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "siteNameHierarchy",
            "in": "query",
            "name": "siteNameHierarchy",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteVNFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Delete virtual network (VN) from SDA Fabric\t",
        "operationId": "deleteVNFromSDAFabric",
        "summary": "Delete VN from SDA Fabric"
      },
      "get": {
        "parameters": [
          {
            "description": "virtualNetworkName",
            "in": "query",
            "name": "virtualNetworkName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "siteNameHierarchy",
            "in": "query",
            "name": "siteNameHierarchy",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVNFromSDAFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get virtual network (VN) from SDA Fabric",
        "operationId": "getVNFromSDAFabric",
        "summary": "Get VN from SDA Fabric"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVNInFabricResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Add virtual network (VN) in SDA Fabric\t",
        "operationId": "addVNInFabric",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddVNInFabricRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add VN in fabric"
      }
    },
    "/dna/intent/api/v1/business/sda/virtual-network/summary": {
      "get": {
        "parameters": [
          {
            "description": "Complete fabric siteNameHierarchy Path",
            "in": "query",
            "name": "siteNameHierarchy",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVirtualNetworkSummaryResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get Virtual Network Summary",
        "operationId": "getVirtualNetworkSummary",
        "summary": "Get Virtual Network Summary"
      }
    },
    "/dna/intent/api/v1/business/sda/virtualnetwork/ippool": {
      "delete": {
        "parameters": [
          {
            "description": "siteNameHierarchy",
            "in": "query",
            "name": "siteNameHierarchy",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "virtualNetworkName",
            "in": "query",
            "name": "virtualNetworkName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "ipPoolName",
            "in": "query",
            "name": "ipPoolName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteIPPoolFromSDAVirtualNetworkResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Delete IP Pool from SDA Virtual Network",
        "operationId": "deleteIPPoolFromSDAVirtualNetwork",
        "summary": "Delete IP Pool from SDA Virtual Network"
      },
      "get": {
        "parameters": [
          {
            "description": "siteNameHierarchy",
            "in": "query",
            "name": "siteNameHierarchy",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "virtualNetworkName",
            "in": "query",
            "name": "virtualNetworkName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "ipPoolName",
            "in": "query",
            "name": "ipPoolName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIPPoolFromSDAVirtualNetworkResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get IP Pool from SDA Virtual Network",
        "operationId": "getIPPoolFromSDAVirtualNetwork",
        "summary": "Get IP Pool from SDA Virtual Network"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddIPPoolInSDAVirtualNetworkResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Add IP Pool in SDA Virtual Network",
        "operationId": "addIPPoolInSDAVirtualNetwork",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddIPPoolInSDAVirtualNetworkRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add IP Pool in SDA Virtual Network"
      }
    },
    "/dna/intent/api/v1/business/sda/wireless-controller": {
      "post": {
        "parameters": [
          {
            "description": "Enable this parameter to execute the API and return a response asynchronously.",
            "in": "header",
            "name": "__persistbapioutput",
            "required": false,
            "schema": {
              "default": "true",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Fabric Wireless"
        ],
        "description": "Add WLC to Fabric Domain",
        "operationId": "addWLCToFabricDomain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWLCToFabricDomainRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add WLC to Fabric Domain"
      }
    },
    "/dna/intent/api/v1/business/ssid": {
      "post": {
        "parameters": [
          {
            "description": "Enable this parameter to execute the API and return a response asynchronously.",
            "in": "header",
            "name": "__persistbapioutput",
            "required": true,
            "schema": {
              "default": "true",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAndProvisionSSIDResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Creates SSID, updates the SSID to the corresponding site profiles and provision it to the devices matching the given sites",
        "operationId": "createAndProvisionSSID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAndProvisionSSIDRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create and Provision SSID"
      }
    },
    "/dna/intent/api/v1/business/ssid/{ssidName}/{managedAPLocations}": {
      "delete": {
        "parameters": [
          {
            "description": "Enable this parameter to execute the API and return a response asynchronously.",
            "in": "header",
            "name": "__persistbapioutput",
            "required": true,
            "schema": {
              "default": "true",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "ssidName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "managedAPLocations",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSSIDAndProvisionItToDevicesResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Removes SSID or WLAN from the network profile, reprovision the device(s) and deletes the SSID or WLAN from DNA Center",
        "operationId": "deleteSSIDAndProvisionItToDevices",
        "summary": "Delete SSID and provision it to devices"
      }
    },
    "/dna/intent/api/v1/certificate": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "multipart/form-data",
              "type": "string"
            }
          },
          {
            "description": "Private Key Passsword",
            "in": "query",
            "name": "pkPassword",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "listOfUsers",
            "in": "query",
            "name": "listOfUsers",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "This method is used to upload a certificate",
        "operationId": "importCertificate",
        "summary": "importCertificate"
      }
    },
    "/dna/intent/api/v1/certificate-p12": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "multipart/form-data",
              "type": "string"
            }
          },
          {
            "description": "P12 Passsword",
            "in": "query",
            "name": "p12Password",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Private Key Passsword",
            "in": "query",
            "name": "pkPassword",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "listOfUsers",
            "in": "query",
            "name": "listOfUsers",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "This method is used to upload a PKCS#12 file",
        "operationId": "importCertificateP12",
        "summary": "importCertificateP12"
      }
    },
    "/dna/intent/api/v1/client-detail": {
      "get": {
        "parameters": [
          {
            "description": "Epoch time(in milliseconds) when the Client health data is required",
            "in": "query",
            "name": "timestamp",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "MAC Address of the client",
            "in": "query",
            "name": "macAddress",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetClientDetailResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Clients"
        ],
        "description": "Returns detailed Client information retrieved by Mac Address for any given point of time. ",
        "operationId": "getClientDetail",
        "summary": "Get Client Detail"
      }
    },
    "/dna/intent/api/v1/client-enrichment-details": {
      "get": {
        "parameters": [
          {
            "description": "Client enrichment details can be fetched based on either User ID or Client MAC address. This parameter value must either be network_user_id/mac_address",
            "in": "header",
            "name": "entity_type",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Contains the actual value for the entity type that has been defined",
            "in": "header",
            "name": "entity_value",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "The category of the DNA event based on which the underlying issues need to be fetched",
            "in": "header",
            "name": "issueCategory",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetClientEnrichmentDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Clients"
        ],
        "description": "Enriches a given network End User context (a network user-id or end user’s device Mac Address) with details about the user, the devices that the user is connected to and the assurance issues that the user is impacted by",
        "operationId": "getClientEnrichmentDetails",
        "summary": "Get Client Enrichment Details"
      }
    },
    "/dna/intent/api/v1/client-health": {
      "get": {
        "parameters": [
          {
            "description": "Epoch time(in milliseconds) when the Client health data is required",
            "in": "query",
            "name": "timestamp",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOverallClientHealthResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Clients"
        ],
        "description": "Returns Overall Client Health information by Client type (Wired and Wireless) for any given point of time",
        "operationId": "getOverallClientHealth",
        "summary": "Get Overall Client Health"
      }
    },
    "/dna/intent/api/v1/client-proximity": {
      "get": {
        "parameters": [
          {
            "description": "Wireless client username for which proximity information is required",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Number of days to track proximity until current date. Defaults and maximum up to 14 days.",
            "in": "query",
            "name": "number_days",
            "required": false,
            "schema": {
              "default": 14,
              "type": "number"
            }
          },
          {
            "description": "Time interval (in minutes) to measure proximity. Defaults to 15 minutes with a minimum 5 minutes.",
            "in": "query",
            "name": "time_resolution",
            "required": false,
            "schema": {
              "default": 15,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientProximityResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Clients"
        ],
        "description": "This intent API will provide client proximity information for a specific wireless user. Proximity is defined as presence on the same floor at the same time as the specified wireless user. The Proximity workflow requires the subscription to the following event (via the Event Notification workflow) prior to making this API call: NETWORK-CLIENTS-3-506 - Client Proximity Report.",
        "operationId": "clientProximity",
        "summary": "Client Proximity"
      }
    },
    "/dna/intent/api/v1/compliance": {
      "get": {
        "parameters": [
          {
            "description": "Compliance status can be have value among 'COMPLIANT','NON_COMPLIANT','IN_PROGRESS', 'ERROR'",
            "in": "query",
            "name": "complianceStatus",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Comma separated deviceUuids",
            "in": "query",
            "name": "deviceUuid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "offset/starting row",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Number of records to be retrieved",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetComplianceStatusResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognises the authentication credentials, but the client is not authorised to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fullfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fullfill the request."
          }
        },
        "tags": [
          "Compliance"
        ],
        "description": "Return compliance status of device(s).",
        "operationId": "getComplianceStatus",
        "summary": "Get Compliance Status "
      }
    },
    "/dna/intent/api/v1/compliance/": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunComplianceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fullfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fullfill the request."
          }
        },
        "tags": [
          "Compliance"
        ],
        "description": "Run compliance check for device(s).",
        "operationId": "runCompliance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTREQUEST"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Run Compliance"
      }
    },
    "/dna/intent/api/v1/compliance/count": {
      "get": {
        "parameters": [
          {
            "description": "Compliance status can have value among 'COMPLIANT', 'NON_COMPLIANT', 'IN_PROGRESS', 'NOT_AVAILABLE', 'NOT_APPLICABLE', 'ERROR'",
            "in": "query",
            "name": "complianceStatus",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetComplianceStatusCountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Compliance"
        ],
        "description": "Return Compliance Status Count",
        "operationId": "getComplianceStatusCount",
        "summary": "Get Compliance Status Count"
      }
    },
    "/dna/intent/api/v1/compliance/detail": {
      "get": {
        "parameters": [
          {
            "description": "complianceType can have any value among 'NETWORK_PROFILE', 'IMAGE', 'APPLICATION_VISIBILITY', 'FABRIC', 'PSIRT', 'RUNNING_CONFIG', 'WORKFLOW'",
            "in": "query",
            "name": "complianceType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Compliance status can have value among 'COMPLIANT', 'NON_COMPLIANT', 'IN_PROGRESS', 'NOT_AVAILABLE', 'NOT_APPLICABLE', 'ERROR'",
            "in": "query",
            "name": "complianceStatus",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Comma separated deviceUuids",
            "in": "query",
            "name": "deviceUuid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "offset/starting row",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of records to be retrieved",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetComplianceDetailResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Compliance"
        ],
        "description": "Return Compliance Detail ",
        "operationId": "getComplianceDetail",
        "summary": "Get Compliance Detail "
      }
    },
    "/dna/intent/api/v1/compliance/detail/count": {
      "get": {
        "parameters": [
          {
            "description": "complianceType can have any value among 'NETWORK_PROFILE', 'IMAGE', 'APPLICATION_VISIBILITY', 'FABRIC', 'PSIRT', 'RUNNING_CONFIG', 'WORKFLOW'.",
            "in": "query",
            "name": "complianceType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Compliance status can have value among 'COMPLIANT', 'NON_COMPLIANT', 'IN_PROGRESS', 'NOT_AVAILABLE', 'NOT_APPLICABLE', 'ERROR'",
            "in": "query",
            "name": "complianceStatus",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetComplianceDetailCountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request"
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Compliance"
        ],
        "description": "Return  Compliance Count Detail",
        "operationId": "getComplianceDetailCount",
        "summary": "Get Compliance Detail Count"
      }
    },
    "/dna/intent/api/v1/compliance/{deviceUuid}": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "deviceUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceComplianceStatusResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognises the authentication credentials, but the client is not authorised to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fullfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fullfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Compliance"
        ],
        "description": "Return compliance status of a device.",
        "operationId": "deviceComplianceStatus",
        "summary": "Device Compliance Status"
      }
    },
    "/dna/intent/api/v1/compliance/{deviceUuid}/detail": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "deviceUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "complianceCategory can have any value among 'INTENT', 'RUNNING_CONFIG'",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "complianceType can have any value among 'NETWORK_DESIGN', 'NETWORK_PROFILE', 'FABRIC', 'POLICY', 'RUNNING_CONFIG'",
            "in": "query",
            "name": "complianceType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "diff list [ pass true to fetch the diff list ]",
            "in": "query",
            "name": "diffList",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "extended attribute key",
            "in": "query",
            "name": "key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "extended attribute value",
            "in": "query",
            "name": "value",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceDetailsOfDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognises the authentication credentials, but the client is not authorised to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fullfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fullfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Compliance"
        ],
        "description": "Return compliance detailed report for a device.",
        "operationId": "complianceDetailsOfDevice",
        "summary": "Compliance Details of Device"
      }
    },
    "/dna/intent/api/v1/credential-to-site/{siteId}": {
      "post": {
        "parameters": [
          {
            "description": "Persist bapi sync response",
            "in": "header",
            "name": "__persistbapioutput",
            "required": true,
            "schema": {
              "default": "true",
              "type": "string"
            }
          },
          {
            "description": "site id to assign credential.",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignDeviceCredentialToSiteResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "Assign Device Credential to a site.",
        "operationId": "assignDeviceCredentialToSite.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignDeviceCredentialToSiteRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Assign Device Credential To Site."
      }
    },
    "/dna/intent/api/v1/device-credential": {
      "get": {
        "parameters": [
          {
            "description": "Site id to retrieve the credential details associated with the site.",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceCredentialDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to get device credential details.",
        "operationId": "getDeviceCredentialDetails",
        "summary": "Get Device Credential Details"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeviceCredentialsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to create device credentials.",
        "operationId": "createDeviceCredentials",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceCredentialsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Device Credentials"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDeviceCredentialsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to update device credentials.",
        "operationId": "updateDeviceCredentials",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeviceCredentialsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Device Credentials"
      }
    },
    "/dna/intent/api/v1/device-credential/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "global credential id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDeviceCredentialResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "Delete device credential.",
        "operationId": "deleteDeviceCredential",
        "summary": "Delete Device Credential"
      }
    },
    "/dna/intent/api/v1/device-detail": {
      "get": {
        "parameters": [
          {
            "description": "Epoch time(in milliseconds) when the device data is required",
            "in": "query",
            "name": "timestamp",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "MAC Address or Device Name value or UUID of the network device",
            "in": "query",
            "name": "searchBy",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "One of keywords : macAddress or uuid or nwDeviceName",
            "in": "query",
            "name": "identifier",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceDetailResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns detailed Network Device information retrieved by Mac Address, Device Name or UUID for any given point of time. ",
        "operationId": "getDeviceDetail",
        "summary": "Get Device Detail"
      }
    },
    "/dna/intent/api/v1/device-enrichment-details": {
      "get": {
        "parameters": [
          {
            "description": "Device enrichment details can be fetched based on either Device ID or Device MAC address or Device IP Address. This parameter value must either be device_id/mac_address/ip_address",
            "in": "header",
            "name": "entity_type",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Contains the actual value for the entity type that has been defined",
            "in": "header",
            "name": "entity_value",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceEnrichmentDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Enriches a given network device context (device id or device Mac Address or device management IP address) with details about the device and neighbor topology",
        "operationId": "getDeviceEnrichmentDetails",
        "summary": "Get Device Enrichment Details"
      }
    },
    "/dna/intent/api/v1/device-health": {
      "get": {
        "parameters": [
          {
            "description": "The device role (One of CORE, ACCESS, DISTRIBUTION, ROUTER, WLC, AP)",
            "in": "query",
            "name": "deviceRole",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Assurance site UUID value",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "The device overall health (One of POOR, FAIR, GOOD)",
            "in": "query",
            "name": "health",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "UTC epoch time in milliseconds",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "UTC epoch time in miliseconds",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Max number of device entries in the response (default to 50.  Max at 1000)",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The offset of the first device in the returned data",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Intent API for accessing DNA Assurance Device object for generating reports, creating dashboards or creating additional value added services.",
        "operationId": "devices",
        "summary": "Devices"
      }
    },
    "/dna/intent/api/v1/device-reboot/apreboot": {
      "post": {
        "parameters": [
          {
            "description": "Content-Type",
            "in": "header",
            "name": "Content-Type",
            "required": false,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RebootAccessPointsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Users can reboot multiple access points up-to 200 at a time using this API",
        "operationId": "rebootAccessPoints",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RebootAccessPointsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Reboot Access Points"
      }
    },
    "/dna/intent/api/v1/device-reboot/apreboot/status": {
      "get": {
        "parameters": [
          {
            "description": "task id of ap reboot request",
            "in": "query",
            "name": "parentTaskId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessPointRebootTaskResultResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Users can query the access point reboot status using this intent API",
        "operationId": "getAccessPointRebootTaskResult",
        "summary": "Get Access Point Reboot task result"
      }
    },
    "/dna/intent/api/v1/device-replacement": {
      "get": {
        "parameters": [
          {
            "description": "Faulty Device Name",
            "in": "query",
            "name": "faultyDeviceName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Faulty Device Platform",
            "in": "query",
            "name": "faultyDevicePlatform",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Replacement Device Platform",
            "in": "query",
            "name": "replacementDevicePlatform",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Faulty Device Serial Number",
            "in": "query",
            "name": "faultyDeviceSerialNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Replacement Device Serial Number",
            "in": "query",
            "name": "replacementDeviceSerialNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Device Replacement status [READY-FOR-REPLACEMENT, REPLACEMENT-IN-PROGRESS, REPLACEMENT-SCHEDULED, REPLACED, ERROR, NETWORK_READINESS_REQUESTED, NETWORK_READINESS_FAILED]",
            "in": "query",
            "name": "replacementStatus",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of families[Routers, Switches and Hubs, AP]",
            "in": "query",
            "name": "family",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "SortBy this field. SortBy is mandatory when order is used.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order on displayName[ASC,DESC]",
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceReplacementResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Replacement"
        ],
        "description": "Get list of replacement devices with replacement details and it can filter replacement devices based on Faulty Device Name,Faulty Device Platform, Replacement Device Platform, Faulty Device Serial Number,Replacement Device Serial Number, Device Replacement status, Product Family.",
        "operationId": "returnListOfReplacementDevicesWithReplacementDetails",
        "summary": "Return list of replacement devices with replacement details"
      },
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Replacement"
        ],
        "description": "Marks device for replacement",
        "operationId": "markDeviceForReplacement",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceReplacementDataDTO"
        },
        "summary": "Mark device for replacement"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Replacement"
        ],
        "description": "UnMarks device for replacement",
        "operationId": "unMarkDeviceForReplacement",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeviceReplacementDataDTO"
        },
        "summary": "UnMark device for replacement"
      }
    },
    "/dna/intent/api/v1/device-replacement/count": {
      "get": {
        "parameters": [
          {
            "description": "Device Replacement status list[READY-FOR-REPLACEMENT, REPLACEMENT-IN-PROGRESS, REPLACEMENT-SCHEDULED, REPLACED, ERROR]",
            "in": "query",
            "name": "replacementStatus",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Replacement"
        ],
        "description": "Get replacement devices count",
        "operationId": "returnReplacementDevicesCount",
        "summary": "Return replacement devices count"
      }
    },
    "/dna/intent/api/v1/device-replacement/workflow": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Replacement"
        ],
        "description": "API to trigger RMA workflow that will replace faulty device with replacement device with same configuration and images",
        "operationId": "deployDeviceReplacementWorkflow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceReplacementWorkflowDTO"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Deploy device replacement workflow"
      }
    },
    "/dna/intent/api/v1/diagnostics/system/health": {
      "get": {
        "parameters": [
          {
            "description": "Fetch the latest high severity event",
            "in": "query",
            "name": "summary",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Fetch system events with this domain. Possible values of domain are listed here : /dna/platform/app/consumer-portal/developer-toolkit/events",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch system events with this subdomain. Possible values of subdomain are listed here : /dna/platform/app/consumer-portal/developer-toolkit/events",
            "in": "query",
            "name": "subdomain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemHealthAPIResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Health and Performance"
        ],
        "description": "This API retrieves the latest system events ",
        "operationId": "systemHealthAPI",
        "summary": "System Health API"
      }
    },
    "/dna/intent/api/v1/diagnostics/system/health/count": {
      "get": {
        "parameters": [
          {
            "description": "Fetch system events with this domain. Possible values of domain are listed here : /dna/platform/app/consumer-portal/developer-toolkit/events",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch system events with this subdomain. Possible values of subdomain are listed here : /dna/platform/app/consumer-portal/developer-toolkit/events",
            "in": "query",
            "name": "subdomain",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemHealthCountAPIResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Health and Performance"
        ],
        "description": "This API gives the count of the latest system events",
        "operationId": "systemHealthCountAPI",
        "summary": "System Health Count API"
      }
    },
    "/dna/intent/api/v1/diagnostics/system/performance": {
      "get": {
        "parameters": [
          {
            "description": "Valid values: cpu,memory,network",
            "in": "query",
            "name": "kpi",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Valid values: sum,average,max",
            "in": "query",
            "name": "function",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This is the epoch start time in milliseconds from which performance indicator need to be fetched",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "This is the epoch end time in milliseconds upto which performance indicator need to be fetched",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemPerformanceAPIResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "422": {
            "description": "The client sent a request with exceeding time range."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Health and Performance"
        ],
        "description": "This API gives the aggregated performance indicators. The data can be retrieved for the last 3 months.",
        "operationId": "systemPerformanceAPI",
        "summary": "System Performance API"
      }
    },
    "/dna/intent/api/v1/diagnostics/system/performance/history": {
      "get": {
        "parameters": [
          {
            "description": "Fetch historical data for this kpi. Valid values: cpu,memory,network",
            "in": "query",
            "name": "kpi",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This is the epoch start time in milliseconds from which performance indicator need to be fetched",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "This is the epoch end time in milliseconds upto which performance indicator need to be fetched",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemPerformanceHistoricalAPIResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "422": {
            "description": "The client sent a request with exceeding time range."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Health and Performance"
        ],
        "description": "This API retrieves the historical performance indicators . The data can be retrieved for the last 3 months.",
        "operationId": "systemPerformanceHistoricalAPI",
        "summary": "System Performance Historical API"
      }
    },
    "/dna/intent/api/v1/disasterrecovery/system/operationstatus": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisasterRecoveryOperationalStatusResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognises the authentication credentials, but the client is not authorised to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fullfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fullfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Disaster Recovery"
        ],
        "description": "Returns the status of Disaster Recovery operation performed on the system.",
        "operationId": "disasterRecoveryOperationalStatus",
        "summary": "Disaster Recovery Operational Status"
      }
    },
    "/dna/intent/api/v1/disasterrecovery/system/status": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DRSummaryStatusResponseSchema"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognises the authentication credentials, but the client is not authorised to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fullfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fullfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Disaster Recovery"
        ],
        "description": "Detailed and Summarized status of DR components (Active, Standby and Witness system's health). ",
        "operationId": "disasterRecoveryStatus",
        "summary": "Disaster Recovery Status"
      }
    },
    "/dna/intent/api/v1/discovery": {
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Stops all the discoveries and removes them",
        "operationId": "deleteAllDiscovery",
        "summary": "Delete all discovery"
      },
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Initiates discovery with the given parameters",
        "operationId": "startDiscovery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Start discovery"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Stops or starts an existing discovery",
        "operationId": "updatesAnExistingDiscoveryBySpecifiedId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoveryNIO"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Updates an existing discovery by specified Id"
      }
    },
    "/dna/intent/api/v1/discovery/count": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Returns the count of all available discovery jobs",
        "operationId": "getCountOfAllDiscoveryJobs",
        "summary": "Get count of all discovery jobs"
      }
    },
    "/dna/intent/api/v1/discovery/job": {
      "get": {
        "parameters": [
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "ipAddress",
            "in": "query",
            "name": "ipAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryJobNIOListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Returns the list of discovery jobs for the given IP",
        "operationId": "getDiscoveryJobsByIP",
        "summary": "Get Discovery jobs by IP"
      }
    },
    "/dna/intent/api/v1/discovery/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Discovery ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Stops the discovery for the given Discovery ID and removes it. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "operationId": "deleteDiscoveryById",
        "summary": "Delete discovery by Id"
      },
      "get": {
        "parameters": [
          {
            "description": "Discovery ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryNIOResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Returns discovery by Discovery ID. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "operationId": "getDiscoveryById",
        "summary": "Get Discovery by Id"
      }
    },
    "/dna/intent/api/v1/discovery/{id}/job": {
      "get": {
        "parameters": [
          {
            "description": "Discovery ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "ipAddress",
            "in": "query",
            "name": "ipAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryJobNIOListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Returns the list of discovery jobs for the given Discovery ID. The results can be optionally filtered based on IP. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "operationId": "getListOfDiscoveriesByDiscoveryId",
        "summary": "Get list of discoveries by discovery Id"
      }
    },
    "/dna/intent/api/v1/discovery/{id}/network-device": {
      "get": {
        "parameters": [
          {
            "description": "Discovery ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "taskId",
            "in": "query",
            "name": "taskId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkDeviceNIOListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Returns the network devices discovered for the given Discovery ID. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "operationId": "getDiscoveredNetworkDevicesByDiscoveryId",
        "summary": "Get Discovered network devices by discovery Id"
      }
    },
    "/dna/intent/api/v1/discovery/{id}/network-device/count": {
      "get": {
        "parameters": [
          {
            "description": "Discovery ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "taskId",
            "in": "query",
            "name": "taskId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Returns the count of network devices discovered in the given discovery. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "operationId": "getDevicesDiscoveredById",
        "summary": "Get Devices discovered by Id"
      }
    },
    "/dna/intent/api/v1/discovery/{id}/network-device/{startIndex}/{recordsToReturn}": {
      "get": {
        "parameters": [
          {
            "description": "Discovery ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start index",
            "in": "path",
            "name": "startIndex",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of records to return",
            "in": "path",
            "name": "recordsToReturn",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "taskId",
            "in": "query",
            "name": "taskId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkDeviceNIOListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Returns the network devices discovered for the given discovery and for the given range. The maximum number of records that can be retrieved is 500. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "operationId": "getDiscoveredDevicesByRange",
        "summary": "Get Discovered devices by range"
      }
    },
    "/dna/intent/api/v1/discovery/{id}/summary": {
      "get": {
        "parameters": [
          {
            "description": "Discovery ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "taskId",
            "in": "query",
            "name": "taskId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "sortBy",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "sortOrder",
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ipAddress",
            "in": "query",
            "name": "ipAddress",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "pingStatus",
            "in": "query",
            "name": "pingStatus",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "snmpStatus",
            "in": "query",
            "name": "snmpStatus",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "cliStatus",
            "in": "query",
            "name": "cliStatus",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "netconfStatus",
            "in": "query",
            "name": "netconfStatus",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "httpStatus",
            "in": "query",
            "name": "httpStatus",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Returns the network devices from a discovery job based on given filters. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "operationId": "getNetworkDevicesFromDiscovery",
        "summary": "Get network devices from Discovery"
      }
    },
    "/dna/intent/api/v1/discovery/{startIndex}/{recordsToReturn}": {
      "get": {
        "parameters": [
          {
            "description": "Start index",
            "in": "path",
            "name": "startIndex",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of records to return",
            "in": "path",
            "name": "recordsToReturn",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryNIOListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Returns the discovery by specified range",
        "operationId": "getDiscoveriesByRange",
        "summary": "Get Discoveries by range"
      }
    },
    "/dna/intent/api/v1/dnac-packages": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiscoDNACenterPackagesSummaryResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "Because the server did not respond in time, the response timed out."
          }
        },
        "tags": [
          "Platform"
        ],
        "description": "Provides information such as name, version of packages installed on the DNA center.",
        "operationId": "ciscoDNACenterPackagesSummary",
        "summary": "Cisco DNA Center Packages Summary"
      }
    },
    "/dna/intent/api/v1/dnac-release": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiscoDNACenterReleaseSummaryResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "Because the server did not respond in time, the response timed out."
          }
        },
        "tags": [
          "Platform"
        ],
        "description": "Provides information such as API version, mandatory core packages for installation or upgrade, optional packages, Cisco DNA Center name and version, supported direct updates, and tenant ID. ",
        "operationId": "ciscoDNACenterReleaseSummary",
        "summary": "Cisco DNA Center Release Summary"
      }
    },
    "/dna/intent/api/v1/dnacaap/management/execution-status/{executionId}": {
      "get": {
        "parameters": [
          {
            "description": "Execution Id of API",
            "in": "path",
            "name": "executionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBusinessAPIExecutionDetailsResponse"
                }
              }
            },
            "description": "The request was successful. Response contains the execution details of the Business API for the given Execution Id."
          },
          "404": {
            "description": "The request was successful but no execution details was found for the given Execution Id."
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Retrieves the execution details of a Business API",
        "operationId": "getBusinessAPIExecutionDetails",
        "summary": "Get Business API Execution Details"
      }
    },
    "/dna/intent/api/v1/endpoint-analytics/anc-policies": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AncPolicy"
                }
              }
            },
            "description": "Success."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Fetches the list of ANC policies available in ISE.",
        "operationId": "getANCPolicies",
        "summary": "Get ANC policies"
      }
    },
    "/dna/intent/api/v1/endpoint-analytics/cmdb/endpoints": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request is accepted and processing is happening on server. Check response for link to get status / details of the task.\n"
          },
          "400": {
            "description": "Invalid request. Check response body for more details."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Processes incoming CMDB endpoints data and imports the same in AI Endpoint Analytics.",
        "operationId": "processCMDBEndpoints",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmdbEndpoint"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Process CMDB endpoints"
      }
    },
    "/dna/intent/api/v1/endpoint-analytics/dictionaries": {
      "get": {
        "parameters": [
          {
            "description": "Flag to indicate whether attribute list for each dictionary should be included in response.",
            "in": "query",
            "name": "includeAttributes",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dictionary"
                }
              }
            },
            "description": "Success."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Fetches the list of attribute dictionaries.",
        "operationId": "getAIEndpointAnalyticsAttributeDictionaries",
        "summary": "Get AI Endpoint Analytics attribute dictionaries"
      }
    },
    "/dna/intent/api/v1/endpoint-analytics/endpoints": {
      "get": {
        "parameters": [
          {
            "description": "Profiling status of the endpoint. Possible values are 'profiled', 'partialProfiled', 'notProfiled'.",
            "in": "query",
            "name": "profilingStatus",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "MAC address to search for. Partial string is allowed.",
            "in": "query",
            "name": "macAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of MAC addresses to filter on. Only exact matches will be returned.",
            "in": "query",
            "name": "macAddresses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "IP address to search for. Partial string is allowed.",
            "in": "query",
            "name": "ip",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Type of device to search for. Partial string is allowed.",
            "in": "query",
            "name": "deviceType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Hardware manufacturer to search for. Partial string is allowed.",
            "in": "query",
            "name": "hardwareManufacturer",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Hardware model to search for. Partial string is allowed.",
            "in": "query",
            "name": "hardwareModel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Operating system to search for. Partial string is allowed.",
            "in": "query",
            "name": "operatingSystem",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Flag to fetch manually registered or non-registered endpoints.",
            "in": "query",
            "name": "registered",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Flag to fetch endpoints having randomized MAC or not.",
            "in": "query",
            "name": "randomMac",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Overall trust score of the endpoint. It can be provided either as a number value (e.g. 5), or as a range (e.g. 3-7). Provide value as '-' if you want to search for all endpoints where trust score is not assigned.",
            "in": "query",
            "name": "trustScore",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Authentication method. Partial string is allowed.",
            "in": "query",
            "name": "authMethod",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Posture status.",
            "in": "query",
            "name": "postureStatus",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "AI spoofing threat level of the endpoint. Possible values are 'low', 'medium', 'high'.",
            "in": "query",
            "name": "aiSpoofingThreatLevel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Threat level due to changing profile labels of the endpoint. Possible values are 'low', 'medium', 'high'.",
            "in": "query",
            "name": "changedProfileThreatLevel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "NAT threat level of the endpoint. Possible values are 'low', 'medium', 'high'.",
            "in": "query",
            "name": "natThreatLevel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Concurrent MAC threat level of the endpoint. Possible values are 'low', 'medium', 'high'.",
            "in": "query",
            "name": "concurrentMacThreatLevel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Flag to fetch endpoints hitting IP blocklist or not.",
            "in": "query",
            "name": "ipBlocklistDetected",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Flag to fetch endpoints exposing unauthorized ports or not.",
            "in": "query",
            "name": "unauthPortDetected",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Flag to fetch endpoints having weak credentials or not.",
            "in": "query",
            "name": "weakCredDetected",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "ANC policy. Only exact match will be returned.",
            "in": "query",
            "name": "ancPolicy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Maximum number of records to be fetched. If not provided, 50 records will be fetched by default. Maximum 1000 records can be fetched at a time. Use pagination if more records need to be fetched.\n",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Record offset to start data fetch at. Offset starts at zero.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Name of the column to sort the results on. Please note that fetch might take more time if sorting is requested. Possible values are 'macAddress', 'ip'.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order to be used for sorting. Possible values are 'asc', 'desc'.",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The datasets that should be included in the response. By default, value of this parameter is blank, and the response will include only basic details of the endpoint. To include other datasets or dictionaries, send comma separated list of following values: 'ALL' - Include all attributes. 'CDP', 'DHCP', etc. - Include attributes from given dictionaries. To get full list of dictionaries, use corresponding GET API. 'ANC' - Include ANC policy related details. 'TRUST' - Include trust score details.",
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Endpoints"
                }
              }
            },
            "description": "Success. In case no records are found, 'items' attribute will contain empty array."
          },
          "400": {
            "description": "Invalid request. Check response body for more details."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Query the endpoints, optionally using various filter and pagination criteria. 'GET /endpoints/count' API can be used to find out the total number of endpoints matching the filter criteria.",
        "operationId": "queryTheEndpoints",
        "summary": "Query the endpoints"
      },
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Endpoint registered successfully. Response contains the unique identifier for the endpoint."
          },
          "400": {
            "description": "Invalid request. Check response body for more details."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Register a new endpoint in the system.",
        "operationId": "registerAnEndpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointRegistrationCreateRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Register an endpoint"
      }
    },
    "/dna/intent/api/v1/endpoint-analytics/endpoints/count": {
      "get": {
        "parameters": [
          {
            "description": "Profiling status of the endpoint. Possible values are 'profiled', 'partialProfiled', 'notProfiled'.",
            "in": "query",
            "name": "profilingStatus",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "MAC address to search for. Partial string is allowed.",
            "in": "query",
            "name": "macAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of MAC addresses to filter on. Only exact matches will be returned.",
            "in": "query",
            "name": "macAddresses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "IP address to search for. Partial string is allowed.",
            "in": "query",
            "name": "ip",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Type of device to search for. Partial string is allowed.",
            "in": "query",
            "name": "deviceType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Hardware manufacturer to search for. Partial string is allowed.",
            "in": "query",
            "name": "hardwareManufacturer",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Hardware model to search for. Partial string is allowed.",
            "in": "query",
            "name": "hardwareModel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Operating system to search for. Partial string is allowed.",
            "in": "query",
            "name": "operatingSystem",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Flag to fetch manually registered or non-registered endpoints.",
            "in": "query",
            "name": "registered",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Flag to fetch endpoints having randomized MAC or not.",
            "in": "query",
            "name": "randomMac",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Overall trust score of the endpoint. It can be provided either as a number value (e.g. 5), or as a range (e.g. 3-7). Provide value as '-' if you want to search for all endpoints where trust score is not assigned.",
            "in": "query",
            "name": "trustScore",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Authentication method. Partial string is allowed.",
            "in": "query",
            "name": "authMethod",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Posture status.",
            "in": "query",
            "name": "postureStatus",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "AI spoofing threat level of the endpoint. Possible values are 'low', 'medium', 'high'.",
            "in": "query",
            "name": "aiSpoofingThreatLevel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Threat level due to changing profile labels of the endpoint. Possible values are 'low', 'medium', 'high'.",
            "in": "query",
            "name": "changedProfileThreatLevel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "NAT threat level of the endpoint. Possible values are 'low', 'medium', 'high'.",
            "in": "query",
            "name": "natThreatLevel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Concurrent MAC threat level of the endpoint. Possible values are 'low', 'medium', 'high'.",
            "in": "query",
            "name": "concurrentMacThreatLevel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Flag to fetch endpoints hitting IP blocklist or not.",
            "in": "query",
            "name": "ipBlocklistDetected",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Flag to fetch endpoints exposing unauthorized ports or not.",
            "in": "query",
            "name": "unauthPortDetected",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Flag to fetch endpoints having weak credentials or not.",
            "in": "query",
            "name": "weakCredDetected",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "ANC policy. Only exact match will be returned.",
            "in": "query",
            "name": "ancPolicy",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            },
            "description": "Success. Response has the count of records."
          },
          "400": {
            "description": "Invalid request. Check response body for more details."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Fetch the total count of endpoints that match the given filter criteria.",
        "operationId": "fetchTheCountOfEndpoints",
        "summary": "Fetch the count of endpoints"
      }
    },
    "/dna/intent/api/v1/endpoint-analytics/endpoints/{epId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier for the endpoint.",
            "in": "path",
            "name": "epId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Endpoint deleted successfully. No content in the response."
          },
          "404": {
            "description": "Endpoint for the given 'epId' not found."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Deletes the endpoint for the given unique identifier 'epId'.",
        "operationId": "deleteAnEndpoint",
        "summary": "Delete an endpoint"
      },
      "get": {
        "parameters": [
          {
            "description": "Unique identifier for the endpoint.",
            "in": "path",
            "name": "epId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The datasets that should be included in the response. By default, value of this parameter is blank, and the response will include only basic details of the endpoint. To include other datasets or dictionaries, send comma separated list of following values: 'ALL' - Include all attributes. 'CDP', 'DHCP', etc. - Include attributes from given dictionaries. To get full list of dictionaries, use corresponding GET API. 'ANC' - Include ANC policy related details. 'TRUST' - Include trust score details.",
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Endpoint"
                }
              }
            },
            "description": "Success."
          },
          "404": {
            "description": "Endpoint for the given 'epId' not found."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Fetches details of the endpoint for the given unique identifier 'epId'.",
        "operationId": "getEndpointDetails",
        "summary": "Get endpoint details"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "Unique identifier for the endpoint.",
            "in": "path",
            "name": "epId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Endpoint updated successfully. No content in the response."
          },
          "400": {
            "description": "Invalid request. Check response body for more details."
          },
          "405": {
            "description": "Update not allowed, probably because it is not a registered endpoint."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Update attributes of a registered endpoint.",
        "operationId": "updateARegisteredEndpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointRegistrationUpdateRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update a registered endpoint"
      }
    },
    "/dna/intent/api/v1/endpoint-analytics/endpoints/{epId}/anc-policy": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier for the endpoint.",
            "in": "path",
            "name": "epId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "ANC Policy revoked successfully. No content in the response."
          },
          "400": {
            "description": "Invalid request. Check response body for more details."
          },
          "404": {
            "description": "Endpoint for the given 'epId' not found."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Revokes given ANC policy from the endpoint.",
        "operationId": "revokeANCPolicy",
        "summary": "Revoke ANC policy"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "Unique identifier for the endpoint.",
            "in": "path",
            "name": "epId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "ANC policy applied successfully. No content in the response."
          },
          "400": {
            "description": "Invalid request. Check response body for more details."
          },
          "404": {
            "description": "Endpoint for the given 'epId' not found."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Applies given ANC policy to the endpoint.",
        "operationId": "applyANCPolicy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointAncPolicy"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Apply ANC Policy"
      }
    },
    "/dna/intent/api/v1/endpoint-analytics/profiling-rules": {
      "get": {
        "parameters": [
          {
            "description": "Use comma-separated list of rule types to filter the data. Defaults to 'Custom Rule'.",
            "in": "query",
            "name": "ruleType",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Flag to indicate whether deleted rules should be part of the records fetched.",
            "in": "query",
            "name": "includeDeleted",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Maximum number of records to be fetched. If not provided, 500 records will be fetched by default. To fetch all\nthe records in the system, provide a large value for this parameter.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Record offset to start data fetch at. Offset starts at zero.",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Name of the column to sort the results on. Please note that fetch might take more time if sorting is requested.",
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order to be used for sorting.",
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilingRules"
                }
              }
            },
            "description": "Success. In case no records are found, 'profilingRules' attribute will contain empty array."
          },
          "400": {
            "description": "Invalid request. Check response body for more details."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "This API fetches the list of profiling rules. It can be used to show profiling rules in client applications, or export those from an environment. 'POST /profiling-rules/bulk' API can be used to import such exported rules into another environment.\nIf this API is used to export rules to be imported into another Cisco DNA Center system, then ensure that 'includeDeleted' parameter is 'true', so that deleted rules get synchronized correctly.\nUse query parameters to filter the data, as required. If no filter is provided, then it will include only rules of type 'Custom Rule' in the response. By default, the response is limited to 500 records. Use 'limit' parameter to fetch higher number of records, if required. 'GET /profiling-rules/count' API can be used to find out the total number of rules in the system.\n",
        "operationId": "getListOfProfilingRules",
        "summary": "Get list of profiling rules"
      },
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            },
            "description": "Profiling rule created successfully. Response contains the id and link to the newly created resource."
          },
          "400": {
            "description": "Invalid request. Check response body for more details."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Creates profiling rule from the request body.",
        "operationId": "createAProfilingRule",
        "requestBody": {
          "$ref": "#/components/requestBodies/ProfilingRule"
        },
        "summary": "Create a profiling rule"
      }
    },
    "/dna/intent/api/v1/endpoint-analytics/profiling-rules/bulk": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Profiling rules imported successfully. No content in the response."
          },
          "207": {
            "description": "One or more rules failed to import. Remaining rules were imported successfully. The response body includes the list of indexes (zero-based) that failed processing along with the reason for failure.\n"
          },
          "400": {
            "description": "Invalid request. Check response body for more details."
          },
          "409": {
            "description": "Conflict. Another import is in progress, and new import cannot be started."
          },
          "500": {
            "description": "Internal server error occured. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "This API imports the given list of profiling rules. For each record,\n1) If 'ruleType' for a record is not 'Custom Rule', then it is rejected.\n2) If 'ruleId' is provided in the input record,\n  2a) Record with same 'ruleId' exists in the system, then it is replaced with new data.\n  2b) Record with same 'ruleId' does not exist, then it is inserted in the database.\n3) If 'ruleId' is not provided in the input record, then new 'ruleId' is generated by the system, and record is inserted.\n",
        "operationId": "importProfilingRulesInBulk",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfilingRules"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Import profiling rules in bulk"
      }
    },
    "/dna/intent/api/v1/endpoint-analytics/profiling-rules/count": {
      "get": {
        "parameters": [
          {
            "description": "Use comma-separated list of rule types to filter the data. Defaults to 'Custom Rule'.",
            "in": "query",
            "name": "ruleType",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Flag to indicate whether deleted rules should be part of the records fetched.",
            "in": "query",
            "name": "includeDeleted",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            },
            "description": "Success. Response has the count of records."
          },
          "400": {
            "description": "Invalid request. Check response body for more details."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "This API fetches the count of profiling rules based on the filter values provided in the query parameters. The filter parameters are same as that of 'GET /profiling-rules' API, excluding the pagination and sort parameters.\n",
        "operationId": "getCountOfProfilingRules",
        "summary": "Get count of profiling rules"
      }
    },
    "/dna/intent/api/v1/endpoint-analytics/profiling-rules/{ruleId}": {
      "delete": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "Unique rule identifier",
            "in": "path",
            "name": "ruleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Profiling rule deleted successfully. No content in the response."
          },
          "404": {
            "description": "Rule for the given 'ruleId' not found."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Deletes the profiling rule for the given 'ruleId'.",
        "operationId": "deleteAnExistingProfilingRule",
        "summary": "Delete an existing profiling rule"
      },
      "get": {
        "parameters": [
          {
            "description": "Unique rule identifier",
            "in": "path",
            "name": "ruleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilingRule"
                }
              }
            },
            "description": "Success."
          },
          "404": {
            "description": "Rule for the given 'ruleId' not found."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Fetches details of the profiling rule for the given 'ruleId'.",
        "operationId": "getDetailsOfASingleProfilingRule",
        "summary": "Get details of a single profiling rule"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "Unique rule identifier",
            "in": "path",
            "name": "ruleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Profiling rule updated successfully. No content in the response."
          },
          "400": {
            "description": "Invalid request. Check response body for more details."
          },
          "404": {
            "description": "Rule for the given 'ruleId' not found."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Updates the profiling rule for the given 'ruleId'.",
        "operationId": "updateAnExistingProfilingRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfilingRule"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update an existing profiling rule"
      }
    },
    "/dna/intent/api/v1/endpoint-analytics/tasks/{taskId}": {
      "get": {
        "parameters": [
          {
            "description": "Unique identifier for the task.",
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            },
            "description": "Success."
          },
          "404": {
            "description": "Task for the given 'taskId' not found."
          },
          "500": {
            "description": "Internal server error. Check response body for more details."
          }
        },
        "tags": [
          "Policy"
        ],
        "description": "Fetches the details of backend task. Task is typically created by making call to some other API that takes longer time to execute.\n",
        "operationId": "getTaskDetails",
        "summary": "Get task details"
      }
    },
    "/dna/intent/api/v1/enterprise-ssid": {
      "get": {
        "parameters": [
          {
            "description": "Enter the enterprise SSID name that needs to be retrieved. If not entered, all the enterprise SSIDs will be retrieved.",
            "in": "query",
            "name": "ssidName",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEnterpriseSSIDResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Gets either one or all the enterprise SSID",
        "operationId": "getEnterpriseSSID",
        "summary": "Get Enterprise SSID"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEnterpriseSSIDResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Creates enterprise SSID",
        "operationId": "createEnterpriseSSID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEnterpriseSSIDRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Enterprise SSID"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEnterpriseSSIDResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Update enterprise SSID",
        "operationId": "updateEnterpriseSSID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnterpriseSSIDRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Enterprise SSID"
      }
    },
    "/dna/intent/api/v1/enterprise-ssid/{ssidName}": {
      "delete": {
        "parameters": [
          {
            "description": "Enter the SSID name to be deleted",
            "in": "path",
            "name": "ssidName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteEnterpriseSSIDResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Deletes given enterprise SSID",
        "operationId": "deleteEnterpriseSSID",
        "summary": "Delete Enterprise SSID"
      }
    },
    "/dna/intent/api/v1/eox-status/device": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEoXStatusForAllDevicesResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "EoX"
        ],
        "description": "Retrieves EoX status for all devices in the network",
        "operationId": "getEoXStatusForAllDevices",
        "summary": "Get EoX Status For All Devices"
      }
    },
    "/dna/intent/api/v1/eox-status/device/{deviceId}": {
      "get": {
        "parameters": [
          {
            "description": "Device instance UUID",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEoXDetailsPerDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "EoX"
        ],
        "description": "Retrieves EoX details for a device ",
        "operationId": "getEoXDetailsPerDevice",
        "summary": "Get EoX Details Per Device"
      }
    },
    "/dna/intent/api/v1/eox-status/summary": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEoXSummaryResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "EoX"
        ],
        "description": "Retrieves EoX summary for all devices in the network",
        "operationId": "getEoXSummary",
        "summary": "Get EoX Summary"
      }
    },
    "/dna/intent/api/v1/event/api-status/{executionId}": {
      "get": {
        "parameters": [
          {
            "description": "Execution ID",
            "in": "path",
            "name": "executionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatusAPIForEventsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Get the Status of events API calls with provided executionId as mandatory path parameter",
        "operationId": "getStatusAPIForEvents",
        "summary": "Get Status API for Events"
      }
    },
    "/dna/intent/api/v1/event/email-config": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEmailDestinationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Get Email Destination",
        "operationId": "getEmailDestination",
        "summary": "Get Email Destination"
      },
      "post": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEmailDestinationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Create Email Destination",
        "operationId": "createEmailDestination",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailConfiguration"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Email Destination"
      },
      "put": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEmailDestinationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Update Email Destination",
        "operationId": "updateEmailDestination",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmailConfiguration"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Email Destination"
      }
    },
    "/dna/intent/api/v1/event/event-series": {
      "get": {
        "parameters": [
          {
            "description": "The registered EventId should be provided",
            "in": "query",
            "name": "eventIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start Time in milliseconds",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "End Time in milliseconds",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Category",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Type",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Severity",
            "in": "query",
            "name": "severity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Domain",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sub Domain",
            "in": "query",
            "name": "subDomain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Source",
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start Offset",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "# of records",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Sort By column",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Ascending/Descending order [asc/desc]",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Tags",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Namespace",
            "in": "query",
            "name": "namespace",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Site Id",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Get the list of Published Notifications",
        "operationId": "getNotifications",
        "summary": "Get Notifications"
      }
    },
    "/dna/intent/api/v1/event/event-series/count": {
      "get": {
        "parameters": [
          {
            "description": "The registered EventId should be provided",
            "in": "query",
            "name": "eventIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start Time in milliseconds",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "End Time in milliseconds",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Category",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Type",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Severity",
            "in": "query",
            "name": "severity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Domain",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sub Domain",
            "in": "query",
            "name": "subDomain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Source",
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountOfNotificationsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Get the Count of Published Notifications",
        "operationId": "countOfNotifications",
        "summary": "Count of Notifications"
      }
    },
    "/dna/intent/api/v1/event/snmp-config": {
      "get": {
        "parameters": [
          {
            "description": "List of SNMP configurations",
            "in": "query",
            "name": "configId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of SNMP configuration's to offset in the resultset whose default value 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The number of SNMP configuration's to limit in the resultset whose default value 10",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "SortBy field name",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "order(asc/desc)",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSNMPDestinationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Get SNMP Destination",
        "operationId": "getSNMPDestination",
        "summary": "Get SNMP Destination"
      }
    },
    "/dna/intent/api/v1/event/subscription": {
      "delete": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "List of EventSubscriptionId's for removal",
            "in": "query",
            "name": "subscriptions",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteEventSubscriptionsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Delete EventSubscriptions",
        "operationId": "deleteEventSubscriptions",
        "summary": "Delete Event Subscriptions"
      },
      "get": {
        "parameters": [
          {
            "description": "List of subscriptions related to the respective eventIds",
            "in": "query",
            "name": "eventIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of Subscriptions's to offset in the resultset whose default value 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The number of Subscriptions's to limit in the resultset whose default value 10",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "SortBy field name",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "order(asc/desc)",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventSubscriptionsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Gets the list of Subscriptions's based on provided offset and limit (Deprecated)",
        "operationId": "getEventSubscriptions",
        "summary": "Get Event Subscriptions"
      },
      "post": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEventSubscriptionsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Subscribe SubscriptionEndpoint to list of registered events (Deprecated)",
        "operationId": "createEventSubscriptions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventSubscriptionsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Event Subscriptions"
      },
      "put": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEventSubscriptionsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Update SubscriptionEndpoint to list of registered events(Deprecated)",
        "operationId": "updateEventSubscriptions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEventSubscriptionsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Event Subscriptions"
      }
    },
    "/dna/intent/api/v1/event/subscription-details/email": {
      "get": {
        "parameters": [
          {
            "description": "Name of the specific configuration",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Instance Id of the specific configuration",
            "in": "query",
            "name": "instanceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of Email Subscription detail's to offset in the resultset whose default value 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The number of Email Subscription detail's to limit in the resultset whose default value 10",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "SortBy field name",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "order(asc/desc)",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEmailSubscriptionDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Gets the list of subscription details for specified connectorType",
        "operationId": "getEmailSubscriptionDetails",
        "summary": "Get Email Subscription Details"
      }
    },
    "/dna/intent/api/v1/event/subscription-details/rest": {
      "get": {
        "parameters": [
          {
            "description": "Name of the specific configuration",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Instance Id of the specific configuration",
            "in": "query",
            "name": "instanceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of Rest/Webhook Subscription detail's to offset in the resultset whose default value 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The number of Rest/Webhook Subscription detail's to limit in the resultset whose default value 10",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "SortBy field name",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "order(asc/desc)",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRestWebhookSubscriptionDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Gets the list of subscription details for specified connectorType",
        "operationId": "getRest/WebhookSubscriptionDetails",
        "summary": "Get Rest/Webhook Subscription Details"
      }
    },
    "/dna/intent/api/v1/event/subscription-details/syslog": {
      "get": {
        "parameters": [
          {
            "description": "Name of the specific configuration",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Instance Id of the specific configuration",
            "in": "query",
            "name": "instanceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of Syslog Subscription detail's to offset in the resultset whose default value 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The number of Syslog Subscription detail's to limit in the resultset whose default value 10",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "SortBy field name",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "order(asc/desc)",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSyslogSubscriptionDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Gets the list of subscription details for specified connectorType",
        "operationId": "getSyslogSubscriptionDetails",
        "summary": "Get Syslog Subscription Details"
      }
    },
    "/dna/intent/api/v1/event/subscription/count": {
      "get": {
        "parameters": [
          {
            "description": "List of subscriptions related to the respective eventIds",
            "in": "query",
            "name": "eventIds",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountOfEventSubscriptionsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Returns the Count of EventSubscriptions",
        "operationId": "countOfEventSubscriptions",
        "summary": "Count of Event Subscriptions"
      }
    },
    "/dna/intent/api/v1/event/subscription/email": {
      "get": {
        "parameters": [
          {
            "description": "List of email subscriptions related to the respective eventIds (Comma separated event ids)",
            "in": "query",
            "name": "eventIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of Subscriptions's to offset in the resultset whose default value 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The number of Subscriptions's to limit in the resultset whose default value 10",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "SortBy field name",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "order(asc/desc)",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of email subscriptions related to the respective domain",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of email subscriptions related to the respective sub-domain",
            "in": "query",
            "name": "subDomain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of email subscriptions related to the respective category",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of email subscriptions related to the respective type",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of email subscriptions related to the respective name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEmailEventSubscriptionsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Gets the list of email Subscriptions's based on provided query params",
        "operationId": "getEmailEventSubscriptions",
        "summary": "Get Email Event Subscriptions"
      },
      "post": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEmailEventSubscriptionResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Create Email Subscription Endpoint for list of registered events.",
        "operationId": "createEmailEventSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailEventSubscription"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Email Event Subscription"
      },
      "put": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEmailEventSubscriptionResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Update Email Subscription Endpoint for list of registered events",
        "operationId": "updateEmailEventSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmailEventSubscription"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Email Event Subscription"
      }
    },
    "/dna/intent/api/v1/event/subscription/rest": {
      "get": {
        "parameters": [
          {
            "description": "List of subscriptions related to the respective eventIds (Comma separated event ids)",
            "in": "query",
            "name": "eventIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of Subscriptions's to offset in the resultset whose default value 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The number of Subscriptions's to limit in the resultset whose default value 10",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "SortBy field name",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "order(asc/desc)",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of subscriptions related to the respective domain",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of subscriptions related to the respective sub-domain",
            "in": "query",
            "name": "subDomain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of subscriptions related to the respective category",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of subscriptions related to the respective type",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of subscriptions related to the respective name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRestWebhookEventSubscriptionsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Gets the list of Rest/Webhook Subscriptions's based on provided query params",
        "operationId": "getRest/WebhookEventSubscriptions",
        "summary": "Get Rest/Webhook Event Subscriptions"
      },
      "post": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRestWebhookEventSubscriptionResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Create Rest/Webhook Subscription Endpoint for list of registered events",
        "operationId": "createRest/WebhookEventSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRestWebhookEventSubscription"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Rest/Webhook Event Subscription"
      },
      "put": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRestWebhookEventSubscriptionResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Update Rest/Webhook Subscription Endpoint for list of registered events",
        "operationId": "updateRest/WebhookEventSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRestWebhookEventSubscription"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Rest/Webhook Event Subscription"
      }
    },
    "/dna/intent/api/v1/event/subscription/syslog": {
      "get": {
        "parameters": [
          {
            "description": "List of subscriptions related to the respective eventIds (Comma separated event ids)",
            "in": "query",
            "name": "eventIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of Subscriptions's to offset in the resultset whose default value 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The number of Subscriptions's to limit in the resultset whose default value 10",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "SortBy field name",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "order(asc/desc)",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of subscriptions related to the respective domain",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of subscriptions related to the respective sub-domain",
            "in": "query",
            "name": "subDomain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of subscriptions related to the respective category",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of subscriptions related to the respective type",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of subscriptions related to the respective name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSyslogEventSubscriptionsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Gets the list of Syslog Subscriptions's based on provided offset and limit",
        "operationId": "getSyslogEventSubscriptions",
        "summary": "Get Syslog Event Subscriptions"
      },
      "post": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSyslogEventSubscriptionResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Create Syslog Subscription Endpoint for list of registered events",
        "operationId": "createSyslogEventSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSyslogEventSubscription"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Syslog Event Subscription"
      },
      "put": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSyslogEventSubscriptionResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Update Syslog Subscription Endpoint for list of registered events",
        "operationId": "updateSyslogEventSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSyslogEventSubscription"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Syslog Event Subscription"
      }
    },
    "/dna/intent/api/v1/event/syslog-config": {
      "get": {
        "parameters": [
          {
            "description": "Config id of syslog server",
            "in": "query",
            "name": "configId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of syslog server",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Protocol of syslog server",
            "in": "query",
            "name": "protocol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of syslog configuration's to offset in the resultset whose default value 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The number of syslog configuration's to limit in the resultset whose default value 10",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "SortBy field name",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "order(asc/desc)",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSyslogDestinationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Get Syslog Destination",
        "operationId": "getSyslogDestination",
        "summary": "Get Syslog Destination"
      },
      "post": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSyslogDestinationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Create Syslog Destination",
        "operationId": "createSyslogDestination",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSyslogConfiguration"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Syslog Destination"
      },
      "put": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSyslogDestinationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Update Syslog Destination",
        "operationId": "updateSyslogDestination",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSyslogConfiguration"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Syslog Destination"
      }
    },
    "/dna/intent/api/v1/event/webhook": {
      "get": {
        "parameters": [
          {
            "description": "List of webhook configurations",
            "in": "query",
            "name": "webhookIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of webhook configuration's to offset in the resultset whose default value 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The number of webhook configuration's to limit in the resultset whose default value 10",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "SortBy field name",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "order(asc/desc)",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWebhookDestinationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Get Webhook Destination",
        "operationId": "getWebhookDestination",
        "summary": "Get Webhook Destination"
      },
      "post": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWebhookDestinationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Create Webhook Destination",
        "operationId": "createWebhookDestination",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatewebhookConfiguration"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Webhook Destination"
      },
      "put": {
        "parameters": [
          {
            "description": "Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWebhookDestinationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Update Webhook Destination",
        "operationId": "updateWebhookDestination",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatewebhookConfiguration"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Webhook Destination"
      }
    },
    "/dna/intent/api/v1/events": {
      "get": {
        "parameters": [
          {
            "description": "The registered EventId should be provided",
            "in": "query",
            "name": "eventId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The registered Tags should be provided",
            "in": "query",
            "name": "tags",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of Registries to offset in the resultset whose default value 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The number of Registries to limit in the resultset whose default value 10",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "SortBy field name",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "order(asc/desc)",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Gets the list of registered Events with provided eventIds or tags as mandatory",
        "operationId": "getEvents",
        "summary": "Get Events"
      }
    },
    "/dna/intent/api/v1/events/count": {
      "get": {
        "parameters": [
          {
            "description": "The registered EventId should be provided",
            "in": "query",
            "name": "eventId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The registered Tags should be provided",
            "in": "query",
            "name": "tags",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountOfEventsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Get the count of registered events with provided eventIds or tags as mandatory",
        "operationId": "countOfEvents",
        "summary": "Count of Events"
      }
    },
    "/dna/intent/api/v1/execute-suggested-actions-commands": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecuteSuggestedActionsCommandsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Issues"
        ],
        "description": "This API triggers the execution of the suggested actions for an issue, given the Issue Id. It will return an execution Id. At the completion of the execution, the output of the commands associated with the suggested actions will be provided\n\nInvoking this API would provide the execution id. Execute the 'Get Business API Execution Details' API with this execution id, to receive the suggested actions commands output.",
        "operationId": "executeSuggestedActionsCommands",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteSuggestedActionsCommandsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Execute Suggested Actions Commands"
      }
    },
    "/dna/intent/api/v1/file/namespace": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameSpaceListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "File"
        ],
        "description": "Returns list of available namespaces",
        "operationId": "getListOfAvailableNamespaces",
        "summary": "Get list of available namespaces"
      }
    },
    "/dna/intent/api/v1/file/namespace/{nameSpace}": {
      "get": {
        "parameters": [
          {
            "description": "A listing of fileId's",
            "in": "path",
            "name": "nameSpace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileObjectListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "File"
        ],
        "description": "Returns list of files under a specific namespace",
        "operationId": "getListOfFiles",
        "summary": "Get list of files"
      }
    },
    "/dna/intent/api/v1/file/{nameSpace}": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "nameSpace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadFileResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "File"
        ],
        "description": "Uploads a new file within a specific nameSpace",
        "operationId": "uploadFile",
        "summary": "uploadFile"
      }
    },
    "/dna/intent/api/v1/floors/{floorId}/planned-access-points": {
      "get": {
        "parameters": [
          {
            "description": "Floor Id",
            "in": "path",
            "name": "floorId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "inlcude planned radio details",
            "in": "query",
            "name": "radios",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlannedAccessPointsForFloorResponse"
                }
              }
            },
            "description": "Success"
          },
          "404": {
            "description": "requested floor id is not found"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Provides a list of Planned Access Points for the Floor it is requested for",
        "operationId": "getPlannedAccessPointsForFloor",
        "summary": "Get Planned Access Points for Floor"
      }
    },
    "/dna/intent/api/v1/flow-analysis": {
      "get": {
        "parameters": [
          {
            "description": "Is analysis periodically refreshed?",
            "in": "query",
            "name": "periodicRefresh",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Source IP address",
            "in": "query",
            "name": "sourceIP",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Destination IP adress",
            "in": "query",
            "name": "destIP",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Source port",
            "in": "query",
            "name": "sourcePort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Destination port",
            "in": "query",
            "name": "destPort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Analyses requested after this time",
            "in": "query",
            "name": "gtCreateTime",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Analyses requested before this time",
            "in": "query",
            "name": "ltCreateTime",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Protocol",
            "in": "query",
            "name": "protocol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Status",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Task ID",
            "in": "query",
            "name": "taskId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Last update time",
            "in": "query",
            "name": "lastUpdateTime",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of resources returned",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start index of resources returned (1-based)",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order by this field",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by this field",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowAnalysisListOutput"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "No correspoding flow analysis result for requested Id"
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Path Trace"
        ],
        "description": "Returns a summary of all flow analyses stored. Results can be filtered by specified parameters.",
        "operationId": "retrivesAllPreviousPathtracesSummary",
        "summary": "Retrives all previous Pathtraces summary"
      },
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowAnalysisRequestResultOutput"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Path Trace"
        ],
        "description": "Initiates a new flow analysis with periodic refresh and stat collection options. Returns a request id and a task id to get results and follow progress.",
        "operationId": "initiateANewPathtrace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowAnalysisRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Initiate a new Pathtrace"
      }
    },
    "/dna/intent/api/v1/flow-analysis/{flowAnalysisId}": {
      "delete": {
        "parameters": [
          {
            "description": "Flow analysis request id",
            "in": "path",
            "name": "flowAnalysisId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Path Trace"
        ],
        "description": "Deletes a flow analysis request by its id",
        "operationId": "deletesPathtraceById",
        "summary": "Deletes Pathtrace by Id"
      },
      "get": {
        "parameters": [
          {
            "description": "Flow analysis request id",
            "in": "path",
            "name": "flowAnalysisId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PathResponseResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "No correspoding flow analysis result for requested Id"
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Path Trace"
        ],
        "description": "Returns result of a previously requested flow analysis by its Flow Analysis id",
        "operationId": "retrievesPreviousPathtrace",
        "summary": "Retrieves previous Pathtrace"
      }
    },
    "/dna/intent/api/v1/global-credential": {
      "get": {
        "parameters": [
          {
            "description": "Credential type as CLI / SNMPV2_READ_COMMUNITY / SNMPV2_WRITE_COMMUNITY / SNMPV3 / HTTP_WRITE / HTTP_READ / NETCONF",
            "in": "query",
            "name": "credentialSubType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "sortBy",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "order",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalCredentialListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Returns global credential for the given credential sub type",
        "operationId": "getGlobalCredentials",
        "summary": "Get Global credentials"
      }
    },
    "/dna/intent/api/v1/global-credential/cli": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Adds global CLI credential",
        "operationId": "createCLICredentials",
        "requestBody": {
          "$ref": "#/components/requestBodies/CLICredentialDTO"
        },
        "summary": "Create CLI credentials"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Updates global CLI credentials",
        "operationId": "updateCLICredentials",
        "requestBody": {
          "$ref": "#/components/requestBodies/CLICredentialDTO"
        },
        "summary": "Update CLI credentials"
      }
    },
    "/dna/intent/api/v1/global-credential/http-read": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Adds HTTP read credentials",
        "operationId": "createHTTPReadCredentials",
        "requestBody": {
          "$ref": "#/components/requestBodies/HTTPReadCredentialDTO"
        },
        "summary": "Create HTTP read credentials"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Updates global HTTP Read credential",
        "operationId": "updateHTTPReadCredential",
        "requestBody": {
          "$ref": "#/components/requestBodies/HTTPReadCredentialDTO"
        },
        "summary": "Update HTTP read credential"
      }
    },
    "/dna/intent/api/v1/global-credential/http-write": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Adds global HTTP write credentials",
        "operationId": "createHTTPWriteCredentials",
        "requestBody": {
          "$ref": "#/components/requestBodies/HTTPWriteCredentialDTO"
        },
        "summary": "Create HTTP write credentials"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Updates global HTTP write credentials",
        "operationId": "updateHTTPWriteCredentials",
        "requestBody": {
          "$ref": "#/components/requestBodies/HTTPWriteCredentialDTO"
        },
        "summary": "Update HTTP write credentials"
      }
    },
    "/dna/intent/api/v1/global-credential/netconf": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Adds global netconf credentials",
        "operationId": "createNetconfCredentials",
        "requestBody": {
          "$ref": "#/components/requestBodies/NetconfCredentialDTO"
        },
        "summary": "Create Netconf credentials"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Updates global netconf credentials",
        "operationId": "updateNetconfCredentials",
        "requestBody": {
          "$ref": "#/components/requestBodies/NetconfCredentialDTO"
        },
        "summary": "Update Netconf credentials"
      }
    },
    "/dna/intent/api/v1/global-credential/snmpv2-read-community": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Adds global SNMP read community",
        "operationId": "createSNMPReadCommunity",
        "requestBody": {
          "$ref": "#/components/requestBodies/SNMPvReadCommunityDTO"
        },
        "summary": "Create SNMP read community"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Updates global SNMP read community",
        "operationId": "updateSNMPReadCommunity",
        "requestBody": {
          "$ref": "#/components/requestBodies/SNMPvReadCommunityDTO"
        },
        "summary": "Update SNMP read community"
      }
    },
    "/dna/intent/api/v1/global-credential/snmpv2-write-community": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Adds global SNMP write community",
        "operationId": "createSNMPWriteCommunity",
        "requestBody": {
          "$ref": "#/components/requestBodies/SNMPvWriteCommunityDTO"
        },
        "summary": "Create SNMP write community"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Updates global SNMP write community",
        "operationId": "updateSNMPWriteCommunity",
        "requestBody": {
          "$ref": "#/components/requestBodies/SNMPvWriteCommunityDTO"
        },
        "summary": "Update SNMP write community"
      }
    },
    "/dna/intent/api/v1/global-credential/snmpv3": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Adds global SNMPv3 credentials",
        "operationId": "createSNMPv3Credentials",
        "requestBody": {
          "$ref": "#/components/requestBodies/SNMPvCredentialDTO"
        },
        "summary": "Create SNMPv3 credentials"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Updates global SNMPv3 credential",
        "operationId": "updateSNMPv3Credentials",
        "requestBody": {
          "$ref": "#/components/requestBodies/SNMPvCredentialDTO"
        },
        "summary": "Update SNMPv3 credentials"
      }
    },
    "/dna/intent/api/v1/global-credential/{globalCredentialId}": {
      "delete": {
        "parameters": [
          {
            "description": "ID of global-credential",
            "in": "path",
            "name": "globalCredentialId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Deletes global credential for the given ID",
        "operationId": "deleteGlobalCredentialsById",
        "summary": "Delete global credentials by Id"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "Global credential Uuid",
            "in": "path",
            "name": "globalCredentialId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Update global credential for network devices in site(s)",
        "operationId": "updateGlobalCredentials",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SitesInfoDTO"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update global credentials"
      }
    },
    "/dna/intent/api/v1/global-pool": {
      "get": {
        "parameters": [
          {
            "description": "offset/starting row",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "No of Global Pools to be retrieved",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGlobalPoolResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to get global pool.",
        "operationId": "getGlobalPool",
        "summary": "Get Global Pool"
      },
      "post": {
        "parameters": [
          {
            "description": "\tPersist bapi sync response",
            "in": "header",
            "name": "__persistbapioutput",
            "required": false,
            "schema": {
              "default": "true",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGlobalPoolResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to create global pool.",
        "operationId": "createGlobalPool",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGlobalPoolRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Global Pool"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateGlobalPoolResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to update global pool",
        "operationId": "updateGlobalPool",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGlobalPoolRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Global Pool"
      }
    },
    "/dna/intent/api/v1/global-pool/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "global pool id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteGlobalIPPoolResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to delete global IP pool.",
        "operationId": "deleteGlobalIPPool",
        "summary": "Delete Global IP Pool"
      }
    },
    "/dna/intent/api/v1/integration-settings/instances/itsm": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateITSMIntegrationSettingResponse"
                }
              }
            },
            "description": "Instance Created"
          },
          "400": {
            "description": "Bad request"
          },
          "504": {
            "description": "Backend service timed out"
          }
        },
        "tags": [
          "ITSM Integration"
        ],
        "description": "Creates ITSM Integration setting",
        "operationId": "createITSMIntegrationSetting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateITSMIntegrationSettingRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create ITSM Integration setting"
      }
    },
    "/dna/intent/api/v1/integration-settings/instances/itsm/{instanceId}": {
      "delete": {
        "parameters": [
          {
            "description": "Instance Id of the Integration setting instance",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Deleted"
          },
          "400": {
            "description": "This instance can't be deleted. It is being used in a bundle"
          },
          "404": {
            "description": "Instance not available"
          }
        },
        "tags": [
          "ITSM Integration"
        ],
        "description": " Deletes the ITSM Integration setting",
        "operationId": "deleteITSMIntegrationSetting",
        "summary": "Delete ITSM Integration setting"
      },
      "put": {
        "parameters": [
          {
            "description": "Instance Id of the Integration setting instance",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateITSMIntegrationSettingResponse"
                }
              }
            },
            "description": "Instance Updated"
          },
          "404": {
            "description": "Instance not found"
          }
        },
        "tags": [
          "ITSM Integration"
        ],
        "description": "Updates the ITSM Integration setting",
        "operationId": "updateITSMIntegrationSetting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateITSMIntegrationSettingRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update ITSM Integration setting"
      }
    },
    "/dna/intent/api/v1/integration/events": {
      "get": {
        "parameters": [
          {
            "description": "Instance Id of the failed event as in the Runtime Dashboard",
            "in": "query",
            "name": "instanceId",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFailedITSMEventsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "ITSM"
        ],
        "description": "Used to retrieve the list of integration events that failed to create tickets in ITSM",
        "operationId": "getFailedITSMEvents",
        "summary": "Get Failed ITSM Events"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetryIntegrationEventsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "ITSM"
        ],
        "description": "Allows retry of multiple failed ITSM event instances. The retry request payload can be given as a list of strings: [\"instance1\",\"instance2\",\"instance3\",..] A minimum of one instance Id is mandatory. The list of failed event instance Ids can be retrieved using the 'Get Failed ITSM Events' API in the 'instanceId' attribute.",
        "operationId": "retryIntegrationEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetryIntegrationEventsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Retry Integration Events"
      }
    },
    "/dna/intent/api/v1/interface": {
      "get": {
        "parameters": [
          {
            "description": "Offset",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Limit",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Last Input Time",
            "in": "query",
            "name": "lastInputTime",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Last Output Time",
            "in": "query",
            "name": "lastOutputTime",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceIfListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns all available interfaces. This endpoint can return a maximum of 500 interfaces",
        "operationId": "getAllInterfaces",
        "summary": "Get all interfaces"
      }
    },
    "/dna/intent/api/v1/interface/count": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the count of interfaces for all devices",
        "operationId": "getDeviceInterfaceCount",
        "summary": "Get Device Interface Count"
      }
    },
    "/dna/intent/api/v1/interface/ip-address/{ipAddress}": {
      "get": {
        "parameters": [
          {
            "description": "IP address of the interface",
            "in": "path",
            "name": "ipAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceIfListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns list of interfaces for specified device management IP address",
        "operationId": "getInterfaceByIP",
        "summary": "Get Interface by IP"
      }
    },
    "/dna/intent/api/v1/interface/isis": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceIfListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the interfaces that has ISIS enabled",
        "operationId": "getISISInterfaces",
        "summary": "Get ISIS interfaces"
      }
    },
    "/dna/intent/api/v1/interface/network-device/{deviceId}": {
      "get": {
        "parameters": [
          {
            "description": "Device ID",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceIfListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns list of interfaces by specified device",
        "operationId": "getInterfaceInfoById",
        "summary": "Get Interface info by Id"
      }
    },
    "/dna/intent/api/v1/interface/network-device/{deviceId}/count": {
      "get": {
        "parameters": [
          {
            "description": "Device ID",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the interface count for the given device",
        "operationId": "getDeviceInterfaceCountNetworkDevice",
        "summary": "Get Device Interface count"
      }
    },
    "/dna/intent/api/v1/interface/network-device/{deviceId}/interface-name": {
      "get": {
        "parameters": [
          {
            "description": "Device ID",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Interface name",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceIfResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns interface by specified device Id and interface name",
        "operationId": "getInterfaceDetailsByDeviceIdAndInterfaceName",
        "summary": "Get Interface details by device Id and interface name"
      }
    },
    "/dna/intent/api/v1/interface/network-device/{deviceId}/{startIndex}/{recordsToReturn}": {
      "get": {
        "parameters": [
          {
            "description": "Device ID",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start index",
            "in": "path",
            "name": "startIndex",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of records to return",
            "in": "path",
            "name": "recordsToReturn",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceIfListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the list of interfaces for the device for the specified range",
        "operationId": "getDeviceInterfacesBySpecifiedRange",
        "summary": "Get Device Interfaces by specified range"
      }
    },
    "/dna/intent/api/v1/interface/ospf": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceIfListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the interfaces that has OSPF enabled",
        "operationId": "getOSPFInterfaces",
        "summary": "Get OSPF interfaces"
      }
    },
    "/dna/intent/api/v1/interface/{interfaceUuid}": {
      "put": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "Interface ID",
            "in": "path",
            "name": "interfaceUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Preview/Deploy ['Preview' means the configuration is not pushed to the device. 'Deploy' makes the configuration pushed to the device]",
            "in": "query",
            "name": "deploymentMode",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInterfaceDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Add/Update Interface description, VLAN membership, Voice VLAN and change Interface admin status ('UP'/'DOWN') from Request body.",
        "operationId": "updateInterfaceDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInterfaceDetailsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Interface details"
      }
    },
    "/dna/intent/api/v1/interface/{interfaceUuid}/legit-operation": {
      "get": {
        "parameters": [
          {
            "description": "Interface ID",
            "in": "path",
            "name": "interfaceUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegitOperationsForInterfaceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Get list of all properties & operations valid for an interface.",
        "operationId": "legitOperationsForInterface",
        "summary": "Legit operations for interface"
      }
    },
    "/dna/intent/api/v1/interface/{interfaceUuid}/operation": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "Content-Type",
            "required": false,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "Interface Id",
            "in": "path",
            "name": "interfaceUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Preview/Deploy ['Preview' means the configuration is not pushed to the device. 'Deploy' makes the configuration pushed to the device]",
            "in": "query",
            "name": "deploymentMode",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClearMacAddressTableResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfil the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Clear mac-address on an individual port. In request body, operation needs to be specified as 'ClearMacAddress'. In the future more possible operations will be added to this API",
        "operationId": "clearMac-AddressTable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClearMacAddressTableRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Clear Mac-Address table"
      }
    },
    "/dna/intent/api/v1/issue-enrichment-details": {
      "get": {
        "parameters": [
          {
            "description": "Issue enrichment details can be fetched based on either Issue ID or Client MAC address. This parameter value must either be issue_id/mac_address",
            "in": "header",
            "name": "entity_type",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Contains the actual value for the entity type that has been defined",
            "in": "header",
            "name": "entity_value",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIssueEnrichmentDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Issues"
        ],
        "description": "Enriches a given network issue context (an issue id or end user’s Mac Address) with details about the issue(s), impacted hosts and suggested actions for remediation",
        "operationId": "getIssueEnrichmentDetails",
        "summary": "Get Issue Enrichment Details"
      }
    },
    "/dna/intent/api/v1/issues": {
      "get": {
        "parameters": [
          {
            "description": "Starting epoch time in milliseconds of query time window",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Ending epoch time in milliseconds of query time window",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Assurance UUID value of the site in the issue content",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Assurance UUID value of the device in the issue content",
            "in": "query",
            "name": "deviceId",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Client's device MAC address of the issue (format xx:xx:xx:xx:xx:xx)",
            "in": "query",
            "name": "macAddress",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "The issue's priority value (One of P1, P2, P3, or P4)(Use only when macAddress and deviceId are not provided)",
            "in": "query",
            "name": "priority",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "The issue's AI driven value (Yes or No)(Use only when macAddress and deviceId are not provided)",
            "in": "query",
            "name": "aiDriven",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "The issue's status value (One of ACTIVE, IGNORED, RESOLVED)",
            "in": "query",
            "name": "issueStatus",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuesResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Issues"
        ],
        "description": "Intent API to get a list of global issues, issues for a specific device, or issue for a specific client device's MAC address.",
        "operationId": "issues",
        "summary": "Issues"
      }
    },
    "/dna/intent/api/v1/lan-automation": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LANAutomationStartResponse"
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "The request was accepted and the response contains the id of the new LAN Automation session."
          },
          "400": {
            "description": "The request was not acceptable due to error in the input parameter and the response contains information about the parameter error."
          },
          "406": {
            "description": "The request was not acceptable due to incorrect input value or invalid settings/config on the device. The response contains information about the error code, message and detail."
          },
          "500": {
            "description": "The request was not accepted due to internal error in the system and the response contains information about the error."
          }
        },
        "tags": [
          "LAN Automation"
        ],
        "description": "Invoke this API to start LAN Automation for the given site.",
        "operationId": "lANAutomationStart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LANAutomationStartRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "LAN Automation Start"
      }
    },
    "/dna/intent/api/v1/lan-automation/count": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LANAutomationSessionCountResponse"
                }
              }
            },
            "description": "The request was successful and the result is contained in the response body."
          }
        },
        "tags": [
          "LAN Automation"
        ],
        "description": "Invoke this API to get the total count of LAN Automation sessions.",
        "operationId": "lANAutomationSessionCount",
        "summary": "LAN Automation Session Count"
      }
    },
    "/dna/intent/api/v1/lan-automation/log": {
      "get": {
        "parameters": [
          {
            "description": "Starting index of the LAN Automation session. Minimum value is 1.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of LAN Automation sessions to be retrieved. Limit value can range between 1 to 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LANAutomationLogResponse"
                }
              }
            },
            "description": "The request was successful and the result is contained in the response body."
          },
          "404": {
            "description": "The request was not acceptable as the input parameter was not available."
          }
        },
        "tags": [
          "LAN Automation"
        ],
        "description": "Invoke this API to get the LAN Automation session logs.",
        "operationId": "lANAutomationLog",
        "summary": "LAN Automation Log "
      }
    },
    "/dna/intent/api/v1/lan-automation/log/{id}": {
      "get": {
        "parameters": [
          {
            "description": "LAN Automation session identifier.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LANAutomationLogByIdResponse"
                }
              }
            },
            "description": "The request was successful and the result is contained in the response body."
          },
          "404": {
            "description": "The request was not acceptable as the input parameter was not available."
          }
        },
        "tags": [
          "LAN Automation"
        ],
        "description": "Invoke this API to get the LAN Automation session logs based on the given LAN Automation session id.",
        "operationId": "lANAutomationLogById",
        "summary": "LAN Automation Log by Id"
      }
    },
    "/dna/intent/api/v1/lan-automation/log/{id}/{serialNumber}": {
      "get": {
        "parameters": [
          {
            "description": "LAN Automation session identifier.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Device serial number.",
            "in": "path",
            "name": "serialNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Supported levels are ERROR, INFO, WARNING, TRACE, CONFIG and ALL. Specifying ALL will display device specific logs with the exception of CONFIG logs. In order to view CONFIG logs along with the remaining logs, please leave the query parameter blank.",
            "in": "query",
            "name": "logLevel",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LANAutomationLogsForIndividualDevicesResponse"
                }
              }
            },
            "description": "The request was successful and the result is contained in the response body."
          },
          "404": {
            "description": "The request was not acceptable as the input parameter was not available."
          }
        },
        "tags": [
          "LAN Automation"
        ],
        "description": "Invoke this API to get the LAN Automation session logs for individual devices based on the given LAN Automation session id and device serial number. ",
        "operationId": "lANAutomationLogsForIndividualDevices",
        "summary": "LAN Automation Logs for Individual Devices"
      }
    },
    "/dna/intent/api/v1/lan-automation/sessions": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LANAutomationActiveSession"
                }
              }
            },
            "description": "The request was successful and the result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand(for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside the time restrictions and timed-out"
          }
        },
        "tags": [
          "LAN Automation"
        ],
        "description": "Invoke this API to get the LAN Automation active session information",
        "operationId": "lANAutomationActiveSessions",
        "summary": "LAN Automation Active Sessions"
      }
    },
    "/dna/intent/api/v1/lan-automation/status": {
      "get": {
        "parameters": [
          {
            "description": "Starting index of the LAN Automation session. Minimum value is 1.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of LAN Automation sessions to be retrieved. Limit value can range between 1 to 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LANAutomationStatusResponse"
                }
              }
            },
            "description": "The request was successful and the result is contained in the response body."
          },
          "404": {
            "description": "The request was not acceptable as the input parameter was not available. "
          }
        },
        "tags": [
          "LAN Automation"
        ],
        "description": "Invoke this API to get the LAN Automation session status. ",
        "operationId": "lANAutomationStatus",
        "summary": "LAN Automation Status"
      }
    },
    "/dna/intent/api/v1/lan-automation/status/{id}": {
      "get": {
        "parameters": [
          {
            "description": "LAN Automation session identifier.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LANAutomationStatusByIdResponse"
                }
              }
            },
            "description": "The request was successful and the result is contained in the response body."
          },
          "404": {
            "description": "The request was not acceptable as the input parameter was not available."
          }
        },
        "tags": [
          "LAN Automation"
        ],
        "description": "Invoke this API to get the LAN Automation session status based on the given Lan Automation session id.",
        "operationId": "lANAutomationStatusById",
        "summary": "LAN Automation Status by Id"
      }
    },
    "/dna/intent/api/v1/licenses/device/count": {
      "get": {
        "parameters": [
          {
            "description": "Type of device",
            "in": "query",
            "name": "device_type",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Smart license registration status of device",
            "in": "query",
            "name": "registration_status",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Device Cisco DNA license level",
            "in": "query",
            "name": "dna_level",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Name of virtual account",
            "in": "query",
            "name": "virtual_account_name",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Id of smart account",
            "in": "query",
            "name": "smart_account_id",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCountDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Get total number of managed device(s).",
        "operationId": "deviceCountDetails",
        "summary": "Device Count Details"
      }
    },
    "/dna/intent/api/v1/licenses/device/summary": {
      "get": {
        "parameters": [
          {
            "description": "Page number of response",
            "in": "query",
            "name": "page_number",
            "required": true,
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "description": "Sorting order",
            "in": "query",
            "name": "order",
            "required": true,
            "schema": {
              "default": "asc",
              "type": "string"
            }
          },
          {
            "description": "Sort result by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Device Cisco DNA license level",
            "in": "query",
            "name": "dna_level",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Type of device",
            "in": "query",
            "name": "device_type",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Limit",
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "default": 500,
              "type": "number"
            }
          },
          {
            "description": "Smart license registration status of device",
            "in": "query",
            "name": "registration_status",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Name of virtual account",
            "in": "query",
            "name": "virtual_account_name",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Id of smart account",
            "in": "query",
            "name": "smart_account_id",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Id of device",
            "in": "query",
            "name": "device_uuid",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceLicenseSummaryResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Show license summary of device(s).",
        "operationId": "deviceLicenseSummary",
        "summary": "Device License Summary"
      }
    },
    "/dna/intent/api/v1/licenses/device/{device_uuid}/details": {
      "get": {
        "parameters": [
          {
            "description": "Id of device",
            "in": "path",
            "name": "device_uuid",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceLicenseDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Get detailed license information of a device.",
        "operationId": "deviceLicenseDetails",
        "summary": "Device License Details"
      }
    },
    "/dna/intent/api/v1/licenses/smartAccount/virtualAccount/deregister": {
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDeregistrationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Deregister device(s) from CSSM(Cisco Smart Software Manager).",
        "operationId": "deviceDeregistration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDeregistrationRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Device Deregistration"
      }
    },
    "/dna/intent/api/v1/licenses/smartAccount/virtualAccount/{virtual_account_name}/register": {
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "Name of virtual account",
            "in": "path",
            "name": "virtual_account_name",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRegistrationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Register device(s) in CSSM(Cisco Smart Software Manager).",
        "operationId": "deviceRegistration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRegistrationRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Device Registration"
      }
    },
    "/dna/intent/api/v1/licenses/smartAccount/{smart_account_id}/virtualAccount/{virtual_account_name}/device/transfer": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "Id of smart account",
            "in": "path",
            "name": "smart_account_id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Name of target virtual account",
            "in": "path",
            "name": "virtual_account_name",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeVirtualAccountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Transfer device(s) from one virtual account to another within same smart account.",
        "operationId": "changeVirtualAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeVirtualAccountRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Change Virtual Account"
      }
    },
    "/dna/intent/api/v1/licenses/smartAccount/{smart_account_id}/virtualAccounts": {
      "get": {
        "parameters": [
          {
            "description": "Id of smart account",
            "in": "path",
            "name": "smart_account_id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualAccountDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Get virtual account details of a smart account.",
        "operationId": "virtualAccountDetails",
        "summary": "Virtual Account Details"
      }
    },
    "/dna/intent/api/v1/licenses/smartAccounts": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmartAccountDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request has been accepted for processing, but the processing has not been completed"
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Get detail of all smart accounts.",
        "operationId": "smartAccountDetails",
        "summary": "Smart Account Details"
      }
    },
    "/dna/intent/api/v1/licenses/term/smartAccount/{smart_account_id}/virtualAccount/{virtual_account_name}": {
      "get": {
        "parameters": [
          {
            "description": "Id of smart account",
            "in": "path",
            "name": "smart_account_id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Name of virtual account. Putting \"All\" will give license term detail for all virtual accounts.",
            "in": "path",
            "name": "virtual_account_name",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Type of device like router, switch, wireless or ise",
            "in": "query",
            "name": "device_type",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseTermDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Get license term details.",
        "operationId": "licenseTermDetails",
        "summary": "License Term Details"
      }
    },
    "/dna/intent/api/v1/licenses/usage/smartAccount/{smart_account_id}/virtualAccount/{virtual_account_name}": {
      "get": {
        "parameters": [
          {
            "description": "Id of smart account",
            "in": "path",
            "name": "smart_account_id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Name of virtual account. Putting \"All\" will give license usage detail for all virtual accounts.",
            "in": "path",
            "name": "virtual_account_name",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Type of device like router, switch, wireless or ise",
            "in": "query",
            "name": "device_type",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseUsageDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Get count of purchased and in use Cisco DNA and Network licenses.",
        "operationId": "licenseUsageDetails",
        "summary": "License Usage Details"
      }
    },
    "/dna/intent/api/v1/membership/{siteId}": {
      "get": {
        "parameters": [
          {
            "description": "Site id to retrieve device associated with the site.",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "offset/starting row",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Number of sites to be retrieved",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Device family name ",
            "in": "query",
            "name": "deviceFamily",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Device serial number",
            "in": "query",
            "name": "serialNumber",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMembershipResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sites"
        ],
        "description": "Getting the site children details and device details.",
        "operationId": "getMembership",
        "summary": "Get Membership"
      }
    },
    "/dna/intent/api/v1/network": {
      "get": {
        "parameters": [
          {
            "description": "Site id to get the network settings associated with the site.",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNetworkResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to get  DHCP and DNS center server details.",
        "operationId": "getNetwork",
        "summary": "Get Network"
      }
    },
    "/dna/intent/api/v1/network-device": {
      "get": {
        "parameters": [
          {
            "description": "hostname",
            "in": "query",
            "name": "hostname",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "managementIpAddress",
            "in": "query",
            "name": "managementIpAddress",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "macAddress",
            "in": "query",
            "name": "macAddress",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "locationName",
            "in": "query",
            "name": "locationName",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "serialNumber",
            "in": "query",
            "name": "serialNumber",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "location",
            "in": "query",
            "name": "location",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "family",
            "in": "query",
            "name": "family",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "type",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "series",
            "in": "query",
            "name": "series",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "collectionStatus",
            "in": "query",
            "name": "collectionStatus",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "collectionInterval",
            "in": "query",
            "name": "collectionInterval",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "notSyncedForMinutes",
            "in": "query",
            "name": "notSyncedForMinutes",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "errorCode",
            "in": "query",
            "name": "errorCode",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "errorDescription",
            "in": "query",
            "name": "errorDescription",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "softwareVersion",
            "in": "query",
            "name": "softwareVersion",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "softwareType",
            "in": "query",
            "name": "softwareType",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "platformId",
            "in": "query",
            "name": "platformId",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "role",
            "in": "query",
            "name": "role",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "reachabilityStatus",
            "in": "query",
            "name": "reachabilityStatus",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "upTime",
            "in": "query",
            "name": "upTime",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "associatedWlcIp",
            "in": "query",
            "name": "associatedWlcIp",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "licenseName",
            "in": "query",
            "name": "license.name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "licenseType",
            "in": "query",
            "name": "license.type",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "licenseStatus",
            "in": "query",
            "name": "license.status",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "moduleName",
            "in": "query",
            "name": "module+name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "moduleEqupimentType",
            "in": "query",
            "name": "module+equpimenttype",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "moduleServiceState",
            "in": "query",
            "name": "module+servicestate",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "moduleVendorEquipmentType",
            "in": "query",
            "name": "module+vendorequipmenttype",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "modulePartNumber",
            "in": "query",
            "name": "module+partnumber",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "moduleOperationStateCode",
            "in": "query",
            "name": "module+operationstatecode",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Accepts comma separated ids and return list of network-devices for the given ids. If invalid or not-found ids are provided, null entry will be returned in the list.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "deviceSupportLevel",
            "in": "query",
            "name": "deviceSupportLevel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "offset >= 1 [X gives results from Xth device onwards]",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "1 <= limit <= 500 [max. no. of devices to be returned in the result]",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkDeviceListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns list of network devices based on filter criteria such as management IP address, mac address, hostname, etc. You can use the .* in any value to conduct a wildcard search.\nFor example, to find all hostnames beginning with myhost in the IP address range 192.25.18.n, issue the following request:\nGET /dna/intent/api/v1/network-device?hostname=myhost.*&managementIpAddress=192.25.18..*\n\nIf id parameter is provided with comma separated ids, it will return the list of network-devices for the given ids and ignores the other request parameters. You can also specify offset & limit to get the required list.",
        "operationId": "getDeviceList",
        "summary": "Get Device list"
      },
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Adds the device with given credential",
        "operationId": "addDevice",
        "requestBody": {
          "$ref": "#/components/requestBodies/InventoryDeviceInfo"
        },
        "summary": "Add Device"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Sync the devices provided as input",
        "operationId": "syncDevices",
        "requestBody": {
          "$ref": "#/components/requestBodies/InventoryDeviceInfo"
        },
        "summary": "Sync Devices"
      }
    },
    "/dna/intent/api/v1/network-device-archive/cleartext": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportDeviceConfigurationsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Configuration Archive"
        ],
        "description": "Export Device configurations to an encrypted zip file.",
        "operationId": "exportDeviceConfigurations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/exportDeviceDTO"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Export Device configurations"
      }
    },
    "/dna/intent/api/v1/network-device-poller/cli/legit-reads": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegitCliKeyResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Command Runner"
        ],
        "description": "Get valid keywords",
        "operationId": "getAllKeywordsOfCLIsAcceptedByCommandRunner",
        "summary": "Get all keywords of CLIs accepted by command runner"
      }
    },
    "/dna/intent/api/v1/network-device-poller/cli/read-request": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Command Runner"
        ],
        "description": "Submit request for read-only CLIs",
        "operationId": "runRead-onlyCommandsOnDevicesToGetTheirReal-timeConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandRunnerDTO"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Run read-only commands on devices to get their real-time configuration"
      }
    },
    "/dna/intent/api/v1/network-device/autocomplete": {
      "get": {
        "parameters": [
          {
            "description": "vrfName",
            "in": "query",
            "name": "vrfName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "managementIpAddress",
            "in": "query",
            "name": "managementIpAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "hostname",
            "in": "query",
            "name": "hostname",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "macAddress",
            "in": "query",
            "name": "macAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "family",
            "in": "query",
            "name": "family",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "collectionStatus",
            "in": "query",
            "name": "collectionStatus",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "collectionInterval",
            "in": "query",
            "name": "collectionInterval",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "softwareVersion",
            "in": "query",
            "name": "softwareVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "softwareType",
            "in": "query",
            "name": "softwareType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "reachabilityStatus",
            "in": "query",
            "name": "reachabilityStatus",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "reachabilityFailureReason",
            "in": "query",
            "name": "reachabilityFailureReason",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "errorCode",
            "in": "query",
            "name": "errorCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "platformId",
            "in": "query",
            "name": "platformId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "series",
            "in": "query",
            "name": "series",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "type",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "serialNumber",
            "in": "query",
            "name": "serialNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "upTime",
            "in": "query",
            "name": "upTime",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "role",
            "in": "query",
            "name": "role",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "roleSource",
            "in": "query",
            "name": "roleSource",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "associatedWlcIp",
            "in": "query",
            "name": "associatedWlcIp",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceValuesThatMatchFullyOrPartiallyAnAttributeResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the list of values of the first given required parameter. You can use the .* in any value to conduct a wildcard search.\nFor example, to get all the devices with the management IP address starting with 10.10. , issue the following request: GET /dna/inten/api/v1/network-device/autocomplete?managementIpAddress=10.10..*\nIt will return the device management IP addresses that match fully or partially the provided attribute. {[10.10.1.1, 10.10.20.2, …]}.",
        "operationId": "getDeviceValuesThatMatchFullyOrPartiallyAnAttribute",
        "summary": "Get Device Values that match fully or partially an Attribute"
      }
    },
    "/dna/intent/api/v1/network-device/brief": {
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Updates the role of the device as access, core, distribution, border router",
        "operationId": "updateDeviceRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkDeviceBriefNIO"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Device role"
      }
    },
    "/dna/intent/api/v1/network-device/collection-schedule/global": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns polling interval of all devices",
        "operationId": "getPollingIntervalForAllDevices",
        "summary": "Get Polling Interval for all devices"
      }
    },
    "/dna/intent/api/v1/network-device/config": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RawCliInfoNIOListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the config for all devices",
        "operationId": "getDeviceConfigForAllDevices",
        "summary": "Get Device Config for all devices"
      }
    },
    "/dna/intent/api/v1/network-device/config/count": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the count of device configs",
        "operationId": "getDeviceConfigCount",
        "summary": "Get Device Config Count"
      }
    },
    "/dna/intent/api/v1/network-device/count": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the count of network devices based on the filter criteria by management IP address, mac address, hostname and location name",
        "operationId": "getDeviceCount",
        "summary": "Get Device Count"
      }
    },
    "/dna/intent/api/v1/network-device/custom-prompt": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustompromptSupportGETAPIResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "503": {
            "description": "The server is (temporarily) unavailable"
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "System Settings"
        ],
        "description": "Returns supported custom prompts by Cisco DNA Center",
        "operationId": "custom-promptSupportGETAPI",
        "summary": "Custom-prompt support GET API"
      },
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomPromptPOSTAPIResponse"
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "503": {
            "description": "The server is (temporarily) unavailable"
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "System Settings"
        ],
        "description": "Save custom prompt added by user in Cisco DNA Center. API will always override the existing prompts. User should provide all the custom prompt in case of any update",
        "operationId": "customPromptPOSTAPI",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomPromptPOSTAPIRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Custom Prompt POST API"
      }
    },
    "/dna/intent/api/v1/network-device/file": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Exports the selected network device to a file",
        "operationId": "exportDeviceList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportDeviceDTO"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Export Device list"
      }
    },
    "/dna/intent/api/v1/network-device/functional-capability": {
      "get": {
        "parameters": [
          {
            "description": "Accepts comma separated deviceid's and return list of functional-capabilities for the given id's. If invalid or not-found id's are provided, null entry will be returned in the list.",
            "in": "query",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "functionName",
            "in": "query",
            "name": "functionName",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionalCapabilityListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the functional-capability for given devices",
        "operationId": "getFunctionalCapabilityForDevices",
        "summary": "Get Functional Capability for devices"
      }
    },
    "/dna/intent/api/v1/network-device/functional-capability/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Functional Capability UUID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionalCapabilityResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns functional capability with given Id",
        "operationId": "getFunctionalCapabilityById",
        "summary": "Get Functional Capability by Id"
      }
    },
    "/dna/intent/api/v1/network-device/insight/{siteId}/device-link": {
      "get": {
        "parameters": [
          {
            "description": "siteId",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Row Number.  Default value is 1",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Default value is 500",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Links mismatch category.  Value can be speed-duplex or vlan.",
            "in": "query",
            "name": "category",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort By",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order.  Value can be asc or desc.  Default value is asc",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryInsightDeviceLinkMismatchAPIResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body"
          },
          "204": {
            "description": "The request was successful, however no content was returned.\t"
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect).\t"
          },
          "500": {
            "description": "The server could not fulfill the request"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Find all devices with link mismatch (speed /  vlan)",
        "operationId": "inventoryInsightDeviceLinkMismatchAPI",
        "summary": "Inventory Insight Device Link Mismatch API"
      }
    },
    "/dna/intent/api/v1/network-device/insight/{siteId}/insecure-connection": {
      "get": {
        "parameters": [
          {
            "description": "siteId",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Row Number.  Default value is 1",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Default value is 500",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort By",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnsDevicesAddedToCiscoDNACenterWithSnmpVDESResponse"
                }
              }
            },
            "description": "The Request is successful . The result is contained in the response body"
          },
          "400": {
            "description": "The client made a request that the server could not understand(for example, the request syntax is not correct)"
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid"
          },
          "404": {
            "description": "The client made a request for the resource which does not exist"
          },
          "503": {
            "description": "The server is (temporarily) unavailable"
          },
          "504": {
            "description": "The server did not respond inside timed restrictions and timed-out"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns devices added to Cisco DNA center with snmp v3 DES, where siteId is mandatory & accepts offset, limit, sortby, order which are optional.",
        "operationId": "returnsDevicesAddedToCiscoDNACenterWithSnmpV3DES.",
        "summary": "Returns devices added to Cisco DNA center with snmp v3 DES."
      }
    },
    "/dna/intent/api/v1/network-device/ip-address/{ipAddress}": {
      "get": {
        "parameters": [
          {
            "description": "Device IP address",
            "in": "path",
            "name": "ipAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkDeviceResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the network device by specified IP address",
        "operationId": "getNetworkDeviceByIP",
        "summary": "Get Network Device by IP"
      }
    },
    "/dna/intent/api/v1/network-device/module": {
      "get": {
        "parameters": [
          {
            "description": "deviceId",
            "in": "query",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "nameList",
            "in": "query",
            "name": "nameList",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "vendorEquipmentTypeList",
            "in": "query",
            "name": "vendorEquipmentTypeList",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "partNumberList",
            "in": "query",
            "name": "partNumberList",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "operationalStateCodeList",
            "in": "query",
            "name": "operationalStateCodeList",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns modules by specified device id",
        "operationId": "getModules",
        "summary": "Get Modules"
      }
    },
    "/dna/intent/api/v1/network-device/module/count": {
      "get": {
        "parameters": [
          {
            "description": "deviceId",
            "in": "query",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "nameList",
            "in": "query",
            "name": "nameList",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "vendorEquipmentTypeList",
            "in": "query",
            "name": "vendorEquipmentTypeList",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "partNumberList",
            "in": "query",
            "name": "partNumberList",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "operationalStateCodeList",
            "in": "query",
            "name": "operationalStateCodeList",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns Module Count",
        "operationId": "getModuleCount",
        "summary": "Get Module count"
      }
    },
    "/dna/intent/api/v1/network-device/module/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Module id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns Module info by 'module id'",
        "operationId": "getModuleInfoById",
        "summary": "Get Module Info by Id"
      }
    },
    "/dna/intent/api/v1/network-device/serial-number/{serialNumber}": {
      "get": {
        "parameters": [
          {
            "description": "Device serial number",
            "in": "path",
            "name": "serialNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkDeviceResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the network device if the given serial number matches with any of the serial numbers collected.",
        "operationId": "getDeviceBySerialNumber",
        "summary": "Get Device by Serial number"
      }
    },
    "/dna/intent/api/v1/network-device/sync": {
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "forceSync",
            "in": "query",
            "name": "forceSync",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Synchronizes the devices. If forceSync param is false (default) then the sync would run in normal priority thread. If forceSync param is true then the sync would run in high priority thread if available, else the sync will fail. Result can be seen in the child task of each device",
        "operationId": "syncDevicesNetworkDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncDevicesRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Sync Devices"
      }
    },
    "/dna/intent/api/v1/network-device/tenantinfo/macaddress": {
      "get": {
        "parameters": [
          {
            "description": "Serial number of the device",
            "in": "query",
            "name": "serialNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Mac addres of the device",
            "in": "query",
            "name": "macaddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterNetworkDeviceResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "It fetches devices which are registered to receive WSA notifications. The device serial number and/or MAC address are required to be provided as query parameters.",
        "operationId": "getDevicesRegisteredForWSANotification",
        "summary": "Get Devices registered for WSA Notification"
      }
    },
    "/dna/intent/api/v1/network-device/user-defined-field": {
      "get": {
        "parameters": [
          {
            "description": "Comma-seperated id(s) used for search/filtering",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Comma-seperated name(s) used for search/filtering",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllUserDefinedFieldsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Gets existing global User Defined Fields. If no input is given, it fetches ALL the Global UDFs. Filter/search is supported either by UDF Id(s) or by UDF name(s), but not both.",
        "operationId": "getAllUser-Defined-Fields",
        "summary": "Get All User-Defined-Fields"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserDefinedFieldResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Creates a new global User Defined Field, which can be assigned to devices",
        "operationId": "createUser-Defined-Field",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDefinedFieldRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create User-Defined-Field"
      }
    },
    "/dna/intent/api/v1/network-device/user-defined-field/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "UDF id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserDefinedFieldResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Deletes an existing Global User-Defined-Field using it's id.",
        "operationId": "deleteUser-Defined-Field",
        "summary": "Delete User-Defined-Field"
      },
      "put": {
        "parameters": [
          {
            "description": "UDF id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserDefinedFieldResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Updates an existing global User Defined Field, using it's id.",
        "operationId": "updateUser-Defined-Field",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDefinedFieldRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update User-Defined-Field"
      }
    },
    "/dna/intent/api/v1/network-device/{deviceId}/chassis": {
      "get": {
        "parameters": [
          {
            "description": "Device ID",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChassisListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns chassis details for given device ID",
        "operationId": "getChassisDetailsForDevice",
        "summary": "Get Chassis Details for Device"
      }
    },
    "/dna/intent/api/v1/network-device/{deviceId}/stack": {
      "get": {
        "parameters": [
          {
            "description": "Device ID",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StackDTOResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Retrieves complete stack details for given device ID",
        "operationId": "getStackDetailsForDevice",
        "summary": "Get Stack Details for Device"
      }
    },
    "/dna/intent/api/v1/network-device/{deviceId}/user-defined-field": {
      "delete": {
        "parameters": [
          {
            "description": "UUID of device from which UDF has to be removed",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of UDF to be removed",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveUserDefinedFieldFromDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Remove a User-Defined-Field from device. Name of UDF has to be passed as the query parameter. Please note that Global UDF will not be deleted by this operation.",
        "operationId": "removeUser-Defined-FieldFromDevice",
        "summary": "Remove User-Defined-Field from device"
      },
      "put": {
        "parameters": [
          {
            "description": "UUID of device to which UDF has to be added",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUserDefinedFieldToDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Assigns an existing Global User-Defined-Field to a device. If the UDF is already assigned to the specific device, then it updates the device UDF value accordingly. Please note that the assigning UDF 'name' must be an existing global UDF. Otherwise error shall be shown.",
        "operationId": "addUser-Defined-FieldToDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserDefinedFieldToDeviceRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add User-Defined-Field to device"
      }
    },
    "/dna/intent/api/v1/network-device/{deviceUuid}/equipment": {
      "get": {
        "parameters": [
          {
            "description": "DeviceUuid",
            "in": "path",
            "name": "deviceUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Type value should be PowerSupply or Fan",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnPowerSupplyFanDetailsForTheGivenDeviceResponse"
                }
              }
            },
            "description": "The request was successful."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Return PowerSupply/ Fan details for the Given device",
        "operationId": "returnPowerSupply/FanDetailsForTheGivenDevice",
        "summary": "Return PowerSupply/ Fan details for the Given device"
      }
    },
    "/dna/intent/api/v1/network-device/{deviceUuid}/interface/poe-detail": {
      "get": {
        "parameters": [
          {
            "description": "uuid of the device",
            "in": "path",
            "name": "deviceUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "comma seperated interface names",
            "in": "query",
            "name": "interfaceNameList",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterfacePoeDetailResult"
                }
              }
            },
            "description": "The Request is successful . The result is contained in the response body"
          },
          "400": {
            "description": "The client made a request that the server could not understand(for example, the request syntax is not correct)"
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid"
          },
          "404": {
            "description": "The client made a request for the resource which does not exist"
          },
          "503": {
            "description": "The server is (temporarily) unavailable"
          },
          "504": {
            "description": "The server did not respond inside timed restrictions and timed-out"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns POE interface details for the device, where deviceuuid is mandatory & accepts comma seperated interface names which is optional and returns information for that particular interfaces where(operStatus = operationalStatus)",
        "operationId": "returnsPOEInterfaceDetailsForTheDevice.",
        "summary": "Returns POE interface details for the device."
      }
    },
    "/dna/intent/api/v1/network-device/{deviceUuid}/interface/{interfaceUuid}/neighbor": {
      "get": {
        "parameters": [
          {
            "description": "instanceuuid of Device",
            "in": "path",
            "name": "deviceUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "instanceuuid of interface",
            "in": "path",
            "name": "interfaceUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NeighborResult"
                }
              }
            },
            "description": "OK - List of connected device if any"
          },
          "404": {
            "description": "Resource Not Found"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Get connected device detail for given deviceUuid and interfaceUuid",
        "operationId": "getConnectedDeviceDetail",
        "summary": "Get connected device detail"
      }
    },
    "/dna/intent/api/v1/network-device/{deviceUuid}/line-card": {
      "get": {
        "parameters": [
          {
            "description": "instanceuuid of device",
            "in": "path",
            "name": "deviceUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLinecardDetailsResponse"
                }
              }
            },
            "description": "OK - List of line card details or empty list if the device don't have any line card"
          },
          "400": {
            "description": "Override"
          },
          "404": {
            "description": "Resource Not Found"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Get line card detail for a given deviceuuid.  Response will contain serial no, part no, switch no and slot no.",
        "operationId": "getLinecardDetails",
        "summary": "Get Linecard details"
      }
    },
    "/dna/intent/api/v1/network-device/{deviceUuid}/poe": {
      "get": {
        "parameters": [
          {
            "description": "uuid of the device",
            "in": "path",
            "name": "deviceUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoeDetailsResultDTO"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns POE details for device.",
        "operationId": "pOEDetails",
        "summary": "POE details "
      }
    },
    "/dna/intent/api/v1/network-device/{deviceUuid}/supervisor-card": {
      "get": {
        "parameters": [
          {
            "description": "instanceuuid of device",
            "in": "path",
            "name": "deviceUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupervisorCardDetailResponse"
                }
              }
            },
            "description": "OK - List of supervisor card details or empty list if the device don't have any supervisor card"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Resource Not Found"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Get supervisor card detail for a given deviceuuid. Response will contain serial no, part no, switch no and slot no.",
        "operationId": "getSupervisorCardDetail",
        "summary": "Get Supervisor card detail"
      }
    },
    "/dna/intent/api/v1/network-device/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Device ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "cleanConfig",
            "in": "query",
            "name": "cleanConfig",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Deletes the network device for the given Id",
        "operationId": "deleteDeviceById",
        "summary": "Delete Device by Id"
      },
      "get": {
        "parameters": [
          {
            "description": "Device ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkDeviceResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the network device details for the given device ID",
        "operationId": "getDeviceByID",
        "summary": "Get Device by ID"
      }
    },
    "/dna/intent/api/v1/network-device/{id}/brief": {
      "get": {
        "parameters": [
          {
            "description": "Device ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkDeviceBriefNIOResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns brief summary of device info such as hostname, management IP address for the given device Id",
        "operationId": "getDeviceSummary",
        "summary": "Get Device Summary"
      }
    },
    "/dna/intent/api/v1/network-device/{id}/collection-schedule": {
      "get": {
        "parameters": [
          {
            "description": "Device ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns polling interval by device id",
        "operationId": "getPollingIntervalById",
        "summary": "Get Polling Interval by Id"
      }
    },
    "/dna/intent/api/v1/network-device/{id}/meraki-organization": {
      "get": {
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResultList"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns list of organizations for meraki dashboard",
        "operationId": "getOrganizationListForMeraki",
        "summary": "Get Organization list for Meraki"
      }
    },
    "/dna/intent/api/v1/network-device/{id}/vlan": {
      "get": {
        "parameters": [
          {
            "description": "deviceUUID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Vlan assocaited with sub-interface",
            "in": "query",
            "name": "interfaceType",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VlanListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns Device Interface VLANs",
        "operationId": "getDeviceInterfaceVLANs",
        "summary": "Get Device Interface VLANs"
      }
    },
    "/dna/intent/api/v1/network-device/{id}/wireless-info": {
      "get": {
        "parameters": [
          {
            "description": "Device ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WirelessInfoResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the wireless lan controller info with given device ID",
        "operationId": "getWirelessLanControllerDetailsById",
        "summary": "Get wireless lan controller details by Id"
      }
    },
    "/dna/intent/api/v1/network-device/{networkDeviceId}/config": {
      "get": {
        "parameters": [
          {
            "description": "networkDeviceId",
            "in": "path",
            "name": "networkDeviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the device config by specified device ID",
        "operationId": "getDeviceConfigById",
        "summary": "Get Device Config by Id"
      }
    },
    "/dna/intent/api/v1/network-device/{startIndex}/{recordsToReturn}": {
      "get": {
        "parameters": [
          {
            "description": "Start index [>=1]",
            "in": "path",
            "name": "startIndex",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of records to return [1<= recordsToReturn <= 500]",
            "in": "path",
            "name": "recordsToReturn",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkDeviceListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns the list of network devices for the given pagination range. The maximum number of records that can be retrieved is 500",
        "operationId": "getNetworkDeviceByPaginationRange",
        "summary": "Get Network Device by pagination range"
      }
    },
    "/dna/intent/api/v1/network-health": {
      "get": {
        "parameters": [
          {
            "description": "Epoch time(in milliseconds) when the Network health data is required",
            "in": "query",
            "name": "timestamp",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOverallNetworkHealthResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Topology"
        ],
        "description": "Returns Overall Network Health information by Device category (Access, Distribution, Core, Router, Wireless) for any given point of time",
        "operationId": "getOverallNetworkHealth",
        "summary": "Get Overall Network Health"
      }
    },
    "/dna/intent/api/v1/network/{siteId}": {
      "post": {
        "parameters": [
          {
            "description": "Persist bapi sync response",
            "in": "header",
            "name": "__persistbapioutput",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "Site id to which site details to associate with the network settings.",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNetworkResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to create a network for DHCP,  Syslog, SNMP, NTP, Network AAA, Client and EndPoint AAA, and/or DNS center server settings.",
        "operationId": "createNetwork",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNetworkRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Network"
      },
      "put": {
        "parameters": [
          {
            "description": "Persist bapi sync response",
            "in": "header",
            "name": "__persistbapioutput",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "Site id to update the network settings which is associated with the site",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateNetworkResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to update network settings for DHCP,  Syslog, SNMP, NTP, Network AAA, Client and EndPoint AAA, and/or DNS server settings.",
        "operationId": "updateNetwork",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNetworkRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Network"
      }
    },
    "/dna/intent/api/v1/networkprofile/{networkProfileId}/site/{siteId}": {
      "delete": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "Network-Profile Id to be associated",
            "in": "path",
            "name": "networkProfileId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Site Id to be associated",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassociateResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Site Design"
        ],
        "description": "Disassociate a Site from a Network Profile",
        "operationId": "disassociate",
        "summary": "Disassociate"
      },
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "Network-Profile Id to be associated",
            "in": "path",
            "name": "networkProfileId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Site Id to be associated",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Site Design"
        ],
        "description": "Associate Site to a Network Profile",
        "operationId": "associate",
        "summary": "Associate"
      }
    },
    "/dna/intent/api/v1/nfv-provision-detail": {
      "post": {
        "parameters": [
          {
            "description": "Enable this parameter to execute the API and return a response synchronously",
            "in": "header",
            "name": "__runsync",
            "required": true,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated",
            "in": "header",
            "name": "__runsynctimeout",
            "required": false,
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "description": "Persist bapi sync response",
            "in": "header",
            "name": "__persistbapioutput",
            "required": true,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NFVProvisioningDetailResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Site Design"
        ],
        "description": "Checks the provisioning detail of an ENCS device including log information.",
        "operationId": "nFVProvisioningDetail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NFVProvisioningDetailRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "NFV Provisioning Detail"
      }
    },
    "/dna/intent/api/v1/nfv/network-profile": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNFVProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Site Design"
        ],
        "description": "API to create network profile for different NFV topologies",
        "operationId": "createNFVProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNFVProfileRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create NFV Profile"
      }
    },
    "/dna/intent/api/v1/nfv/network-profile/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of nfv network profile to delete. ",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Nameof nfv network profile to delete. ",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteNFVProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Site Design"
        ],
        "description": "API to delete nfv network profile.",
        "operationId": "deleteNFVProfile",
        "summary": "Delete NFV Profile"
      },
      "get": {
        "parameters": [
          {
            "description": "ID of network profile to retrieve.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "offset/starting row",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Number of profile to be retrieved",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Name of network profile to be retrieved",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNFVProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Site Design"
        ],
        "description": "API to get NFV network profile.",
        "operationId": "getNFVProfile",
        "summary": "Get NFV Profile"
      },
      "put": {
        "parameters": [
          {
            "description": "Id of the NFV profile to be updated",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Name of the profile to be updated",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateNFVProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Site Design"
        ],
        "description": "API to update a NFV Network profile",
        "operationId": "updateNFVProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNFVProfileRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update NFV Profile"
      }
    },
    "/dna/intent/api/v1/nodes-config": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiscoDNACenterNodesConfigurationSummaryResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "Because the server did not respond in time, the response timed out."
          }
        },
        "tags": [
          "Platform"
        ],
        "description": "Provides details about the current Cisco DNA Center node configuration, such as API version, node name, NTP server, intracluster link, LACP mode, network static routes, DNS server, subnet mask, host IP, default gateway, and interface information. ",
        "operationId": "ciscoDNACenterNodesConfigurationSummary",
        "summary": "Cisco DNA Center Nodes Configuration Summary"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-device": {
      "get": {
        "parameters": [
          {
            "description": "Limits number of results",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Index of first result",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Comma seperated list of fields to sort on",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Sort Order Ascending (asc) or Descending (des)",
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Device Serial Number",
            "in": "query",
            "name": "serialNumber",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device State",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Onboarding State",
            "in": "query",
            "name": "onbState",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Connection Manager State",
            "in": "query",
            "name": "cmState",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device ProductId",
            "in": "query",
            "name": "pid",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Source",
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Project Id",
            "in": "query",
            "name": "projectId",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Workflow Id",
            "in": "query",
            "name": "workflowId",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Project Name",
            "in": "query",
            "name": "projectName",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Workflow Name",
            "in": "query",
            "name": "workflowName",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Smart Account",
            "in": "query",
            "name": "smartAccountId",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Virtual Account",
            "in": "query",
            "name": "virtualAccountId",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Has Contacted lastContact > 0",
            "in": "query",
            "name": "lastContact",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Device Mac Address",
            "in": "query",
            "name": "macAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Device Hostname",
            "in": "query",
            "name": "hostname",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Device Site Name",
            "in": "query",
            "name": "siteName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Returns list of devices based on filter crieteria. If a limit is not specified, it will default to return 50 devices. Pagination and sorting are also supported by this endpoint",
        "operationId": "getPnpDeviceList",
        "summary": "Get Device list"
      },
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Adds a device to the PnP database.",
        "operationId": "addDevicePnp",
        "requestBody": {
          "$ref": "#/components/requestBodies/Device"
        },
        "summary": "Add Device"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-device/claim": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Claims one of more devices with specified workflow",
        "operationId": "claimDevicePnp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimDeviceRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Claim Device"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-device/count": {
      "get": {
        "parameters": [
          {
            "description": "Device Serial Number",
            "in": "query",
            "name": "serialNumber",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device State",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Onboarding State",
            "in": "query",
            "name": "onbState",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Connection Manager State",
            "in": "query",
            "name": "cmState",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device ProductId",
            "in": "query",
            "name": "pid",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Source",
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Project Id",
            "in": "query",
            "name": "projectId",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Workflow Id",
            "in": "query",
            "name": "workflowId",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Project Name",
            "in": "query",
            "name": "projectName",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Workflow Name",
            "in": "query",
            "name": "workflowName",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Smart Account",
            "in": "query",
            "name": "smartAccountId",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Virtual Account",
            "in": "query",
            "name": "virtualAccountId",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Device Has Contacted lastContact > 0",
            "in": "query",
            "name": "lastContact",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceCountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Returns the device count based on filter criteria. This is useful for pagination",
        "operationId": "getDeviceCountPnpDevice",
        "summary": "Get Device Count"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-device/history": {
      "get": {
        "parameters": [
          {
            "description": "Device Serial Number",
            "in": "query",
            "name": "serialNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Comma seperated list of fields to sort on",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Sort Order Ascending (asc) or Descending (des)",
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceHistoryResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Returns history for a specific device. Serial number is a required parameter",
        "operationId": "getPnpDeviceHistory",
        "summary": "Get Device History"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-device/import": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportDevicesInBulkResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Add devices to PnP in bulk",
        "operationId": "importDevicesInBulk",
        "requestBody": {
          "$ref": "#/components/requestBodies/Device"
        },
        "summary": "Import Devices in bulk"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-device/reset": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Recovers a device from a Workflow Execution Error state",
        "operationId": "resetDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Reset Device"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result": {
      "get": {
        "parameters": [
          {
            "description": "Smart Account Domain",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Virtual Account Name",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSyncResultForVirtualAccountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Returns the summary of devices synced from the given smart account & virtual account with PnP",
        "operationId": "getSyncResultForVirtualAccount",
        "summary": "Get Sync Result for Virtual Account"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-device/site-claim": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteClaimResponse"
                }
              }
            },
            "description": "Success"
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Claim a device based on DNA-C Site-based design process. Some required parameters differ based on device platform:\n\nDefault/StackSwitch: imageInfo, configInfo.  \n\nAccessPoints: rfProfile.  \n\nSensors: sensorProfile.  \n\nCatalystWLC/MobilityExpress/EWC: staticIP, subnetMask, gateway. vlanID and ipInterfaceName are also allowed for Catalyst 9800 WLCs.",
        "operationId": "claimADeviceToASite",
        "requestBody": {
          "$ref": "#/components/requestBodies/SiteProvisionRequest"
        },
        "summary": "Claim a Device to a Site"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-device/site-config-preview": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayZeroConfigPreviewResult"
                }
              }
            },
            "description": "Success"
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Triggers a preview for site-based Day 0 Configuration",
        "operationId": "previewConfig",
        "requestBody": {
          "$ref": "#/components/requestBodies/SiteProvisionRequest"
        },
        "summary": "Preview Config"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-device/unclaim": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnClaimDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Un-Claims one of more devices with specified workflow",
        "operationId": "un-ClaimDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnclaimRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Un-Claim Device"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-device/vacct-sync": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncVirtualAccountDevicesResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Synchronizes the device info from the given smart account & virtual account with the PnP database. The response payload returns a list of synced devices",
        "operationId": "syncVirtualAccountDevices",
        "requestBody": {
          "$ref": "#/components/requestBodies/SAVAMapping"
        },
        "summary": "Sync Virtual Account Devices"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-device/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDeviceByIdFromPnPResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Deletes specified device from PnP database",
        "operationId": "deleteDeviceByIdFromPnP",
        "summary": "Delete Device by Id from PnP"
      },
      "get": {
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceByIdResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Returns device details specified by device id",
        "operationId": "getDeviceById",
        "summary": "Get Device by Id"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Updates device details specified by device id in PnP database",
        "operationId": "updateDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Device"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-settings": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPnPGlobalSettingsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Returns global PnP settings of the user",
        "operationId": "getPnPGlobalSettings",
        "summary": "Get PnP global settings"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePnPGlobalSettingsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Updates the user's list of global PnP settings",
        "operationId": "updatePnPGlobalSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Settings"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update PnP global settings"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-settings/sacct": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSmartAccountListResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Returns the list of Smart Account domains",
        "operationId": "getSmartAccountList",
        "summary": "Get Smart Account List"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct": {
      "get": {
        "parameters": [
          {
            "description": "Smart Account Domain",
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVirtualAccountListResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Returns list of virtual accounts associated with the specified smart account",
        "operationId": "getVirtualAccountList",
        "summary": "Get Virtual Account List"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-settings/savacct": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVirtualAccountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Registers a Smart Account, Virtual Account and the relevant server profile info with the PnP System & database. The devices present in the registered virtual account are synced with the PnP database as well. The response payload returns the new profile",
        "operationId": "addVirtualAccount",
        "requestBody": {
          "$ref": "#/components/requestBodies/SAVAMapping"
        },
        "summary": "Add Virtual Account"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePnPServerProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Updates the PnP Server profile in a registered Virtual Account in the PnP database. The response payload returns the updated smart & virtual account info",
        "operationId": "updatePnPServerProfile",
        "requestBody": {
          "$ref": "#/components/requestBodies/SAVAMapping"
        },
        "summary": "Update PnP Server Profile"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-settings/vacct": {
      "delete": {
        "parameters": [
          {
            "description": "Smart Account Domain",
            "in": "query",
            "name": "domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Virtual Account Name",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeregisterVirtualAccountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Deregisters the specified smart account & virtual account info and the associated device information from the PnP System & database. The devices associated with the deregistered virtual account are removed from the PnP database as well. The response payload contains the deregistered smart & virtual account information",
        "operationId": "deregisterVirtualAccount",
        "summary": "Deregister Virtual Account"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-workflow": {
      "get": {
        "parameters": [
          {
            "description": "Limits number of results",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Index of first result",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Comma seperated lost of fields to sort on",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Sort Order Ascending (asc) or Descending (des)",
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Workflow Type",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Workflow Name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkflowsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Returns the list of workflows based on filter criteria. If a limit is not specified, it will default to return 50 workflows. Pagination and sorting are also supported by this endpoint",
        "operationId": "getWorkflows",
        "summary": "Get Workflows"
      },
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAWorkflowResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Adds a PnP Workflow along with the relevant tasks in the workflow into the PnP database",
        "operationId": "addAWorkflow",
        "requestBody": {
          "$ref": "#/components/requestBodies/Workflow"
        },
        "summary": "Add a Workflow"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-workflow/count": {
      "get": {
        "parameters": [
          {
            "description": "Workflow Name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkflowCountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Returns the workflow count",
        "operationId": "getWorkflowCount",
        "summary": "Get Workflow Count"
      }
    },
    "/dna/intent/api/v1/onboarding/pnp-workflow/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWorkflowByIdResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Deletes a workflow specified by id",
        "operationId": "deleteWorkflowById",
        "summary": "Delete Workflow By Id"
      },
      "get": {
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkflowByIdResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Returns a workflow specified by id",
        "operationId": "getWorkflowById",
        "summary": "Get Workflow by Id"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWorkflowResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "description": "Updates an existing workflow",
        "operationId": "updateWorkflow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Workflow"
      }
    },
    "/dna/intent/api/v1/qos-device-interface-info": {
      "get": {
        "parameters": [
          {
            "description": "network device id",
            "in": "query",
            "name": "networkDeviceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQosDeviceInterfaceInfoResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Get all or by network device id, existing qos device interface infos",
        "operationId": "getQosDeviceInterfaceInfo",
        "summary": "Get Qos Device Interface Info"
      },
      "post": {
        "parameters": [
          {
            "description": "content-type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateQosDeviceInterfaceInfoResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Create qos device interface infos associate with network device id to allow the user to mark specific interfaces as WAN, to associate WAN interfaces with specific SP Profile and to be able to define a shaper on WAN interfaces",
        "operationId": "createQosDeviceInterfaceInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQosDeviceInterfaceInfoRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Qos Device Interface Info"
      },
      "put": {
        "parameters": [
          {
            "description": "content-type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateQosDeviceInterfaceInfoResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Update existing qos device interface infos associate with network device id",
        "operationId": "updateQosDeviceInterfaceInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQosDeviceInterfaceInfoRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Qos Device Interface Info"
      }
    },
    "/dna/intent/api/v1/qos-device-interface-info-count": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQosDeviceInterfaceInfoCountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Get the number of all existing qos device interface infos group by network device id",
        "operationId": "getQosDeviceInterfaceInfoCount",
        "summary": "Get Qos Device Interface Info Count"
      }
    },
    "/dna/intent/api/v1/qos-device-interface-info/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of the qos device info, this object holds all qos device interface infos associate with network device id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteQosDeviceInterfaceInfoResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Application Policy"
        ],
        "description": "Delete all qos device interface infos associate with network device id",
        "operationId": "deleteQosDeviceInterfaceInfo",
        "summary": "Delete Qos Device Interface Info"
      }
    },
    "/dna/intent/api/v1/reserve-ip-subpool": {
      "get": {
        "parameters": [
          {
            "description": "site id to get the reserve ip associated with the site",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "offset/starting row",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "No of Global Pools to be retrieved",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReserveIPSubpoolResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to get the ip subpool info.",
        "operationId": "getReserveIPSubpool",
        "summary": "Get Reserve IP Subpool"
      }
    },
    "/dna/intent/api/v1/reserve-ip-subpool/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of reserve ip subpool to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseReserveIPSubpoolResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to delete the reserved ip subpool",
        "operationId": "releaseReserveIPSubpool",
        "summary": "Release Reserve IP Subpool"
      }
    },
    "/dna/intent/api/v1/security-advisory/advisory": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdvisoriesListResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "Bad request. The request syntax is incorrect or invalid request parameters."
          }
        },
        "tags": [
          "Security Advisories"
        ],
        "description": "Retrieves list of advisories on the network",
        "operationId": "getAdvisoriesList",
        "summary": "Get Advisories List"
      }
    },
    "/dna/intent/api/v1/security-advisory/advisory/aggregate": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdvisoriesSummaryResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          }
        },
        "tags": [
          "Security Advisories"
        ],
        "description": "Retrieves summary of advisories on the network.",
        "operationId": "getAdvisoriesSummary",
        "summary": "Get Advisories Summary"
      }
    },
    "/dna/intent/api/v1/security-advisory/advisory/{advisoryId}/device": {
      "get": {
        "parameters": [
          {
            "description": "Advisory ID",
            "in": "path",
            "name": "advisoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDevicesPerAdvisoryResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          }
        },
        "tags": [
          "Security Advisories"
        ],
        "description": "Retrieves list of devices for an advisory",
        "operationId": "getDevicesPerAdvisory",
        "summary": "Get Devices Per Advisory"
      }
    },
    "/dna/intent/api/v1/security-advisory/device/{deviceId}": {
      "get": {
        "parameters": [
          {
            "description": "Device instance UUID",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdvisoryIDsPerDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "Bad request. The request syntax is incorrect or invalid request parameters."
          }
        },
        "tags": [
          "Security Advisories"
        ],
        "description": "Retrieves list of advisory IDs for a device",
        "operationId": "getAdvisoryIDsPerDevice",
        "summary": "Get Advisory IDs Per Device"
      }
    },
    "/dna/intent/api/v1/security-advisory/device/{deviceId}/advisory": {
      "get": {
        "parameters": [
          {
            "description": "Device instance UUID",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdvisoriesPerDeviceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "Bad request. The request syntax is incorrect or invalid request parameters."
          }
        },
        "tags": [
          "Security Advisories"
        ],
        "description": "Retrieves list of advisories for a device",
        "operationId": "getAdvisoriesPerDevice",
        "summary": "Get Advisories Per Device"
      }
    },
    "/dna/intent/api/v1/security/rogue/additional/details": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RogueAdditionalDetailsResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "This API provides additional information of the rogue threats with details at BSSID level. The additional information includes Switch Port details in case of Rogue on Wire, first time when the rogue is seen in the network etc.",
        "operationId": "rogueAdditionalDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RogueAdditionalDetailsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Rogue Additional Details"
      }
    },
    "/dna/intent/api/v1/security/rogue/additional/details/count": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RogueAdditionalDetailCountResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "This API returns the count for the Rogue Additional Details.",
        "operationId": "rogueAdditionalDetailCount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RogueAdditionalDetailCountRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Rogue Additional Detail Count"
      }
    },
    "/dna/intent/api/v1/security/rogue/wireless-containment/start": {
      "post": {
        "parameters": [
          {
            "description": "The Content Type for the request",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartWirelessRogueAPContainmentResponse"
                }
              }
            },
            "description": "Success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Intent API to start the wireless rogue access point containment. This API will initiate the containment operation on the strongest detecting WLC for the given Rogue AP. This is a resource intensive operation which has legal implications since the rogue access point on whom it is triggered, might be a valid neighbor access point.",
        "operationId": "startWirelessRogueAPContainment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartWirelessRogueAPContainmentRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Start Wireless Rogue AP Containment"
      }
    },
    "/dna/intent/api/v1/security/rogue/wireless-containment/status": {
      "get": {
        "parameters": [
          {
            "description": "The Content Type for the request",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WirelessRogueAPContainmentStatusResponse"
                }
              }
            },
            "description": "Success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Intent API to check the wireless rogue access point containment status. The response includes all the details like containment status, contained by WLC, containment status of each BSSID etc. This API also includes the information of strongest detecting WLC for this rogue access point.",
        "operationId": "wirelessRogueAPContainmentStatus",
        "summary": "Wireless Rogue AP Containment Status"
      }
    },
    "/dna/intent/api/v1/security/rogue/wireless-containment/stop": {
      "post": {
        "parameters": [
          {
            "description": "The Content Type for the request",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopWirelessRogueAPContainmentResponse"
                }
              }
            },
            "description": "Success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Intent API to stop the wireless rogue access point containment. This API will stop the containment through single WLC. The response includes the details like WLC and BSSID on which the stop containment has been initiated.",
        "operationId": "stopWirelessRogueAPContainment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopWirelessRogueAPContainmentRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Stop Wireless Rogue AP Containment"
      }
    },
    "/dna/intent/api/v1/security/threats/details": {
      "post": {
        "parameters": [
          {
            "description": "The Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreatDetails"
                }
              }
            },
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "The details for the Rogue and aWIPS threats",
        "operationId": "threatDetails",
        "requestBody": {
          "$ref": "#/components/requestBodies/ThreatParameters"
        },
        "summary": "Threat Details"
      }
    },
    "/dna/intent/api/v1/security/threats/details/count": {
      "post": {
        "parameters": [
          {
            "description": "The Content Type for the request",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreatDetailCountResponse"
                }
              }
            },
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "The details count for the Rogue and aWIPS threats",
        "operationId": "threatDetailCount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThreatDetailCountRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Threat Detail Count"
      }
    },
    "/dna/intent/api/v1/security/threats/level": {
      "get": {
        "parameters": [
          {
            "description": "The Content Type for the request",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetThreatLevelsResponse"
                }
              }
            },
            "description": "Success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Intent API to fetch all threat levels defined.",
        "operationId": "getThreatLevels",
        "summary": "Get Threat Levels"
      }
    },
    "/dna/intent/api/v1/security/threats/rogue/allowed-list": {
      "get": {
        "parameters": [
          {
            "description": "The Content Type for the request",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "The offset of the first item in the collection to return.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The maximum number of entries to return. If the value exceeds the total count, then the maximum entries will be returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllowedMacAddressResponse"
                }
              }
            },
            "description": "Success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Intent API to fetch all the allowed mac addresses in the system.",
        "operationId": "getAllowedMacAddress",
        "summary": "Get Allowed Mac Address"
      },
      "post": {
        "parameters": [
          {
            "description": "The Content Type for the request",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAllowedMacAddressResponse"
                }
              }
            },
            "description": "Success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Intent API to add the threat mac address to allowed list.",
        "operationId": "addAllowedMacAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAllowedMacAddressRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add Allowed Mac Address"
      }
    },
    "/dna/intent/api/v1/security/threats/rogue/allowed-list/count": {
      "get": {
        "parameters": [
          {
            "description": "The Content Type for the request",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllowedMacAddressCountResponse"
                }
              }
            },
            "description": "Success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Intent API to fetch the count of allowed mac addresses in the system.",
        "operationId": "getAllowedMacAddressCount",
        "summary": "Get Allowed Mac Address Count"
      }
    },
    "/dna/intent/api/v1/security/threats/rogue/allowed-list/{macAddress}": {
      "delete": {
        "parameters": [
          {
            "description": "The Content Type for the request",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "Threat mac address which needs to be removed from the allowed list. Multiple mac addresses will be removed if provided as comma separated values (example: 00:2A:10:51:22:43,00:2A:10:51:22:44). Note: In one request, maximum 100 mac addresses can be removed. ",
            "in": "path",
            "name": "macAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveAllowedMacAddressResponse"
                }
              }
            },
            "description": "Success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Intent API to remove the threat mac address from allowed list.",
        "operationId": "removeAllowedMacAddress",
        "summary": "Remove Allowed Mac Address"
      }
    },
    "/dna/intent/api/v1/security/threats/summary": {
      "post": {
        "parameters": [
          {
            "description": "The Content Type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreatResponse"
                }
              }
            },
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "The Threat Summary for the Rogues and aWIPS",
        "operationId": "threatSummary",
        "requestBody": {
          "$ref": "#/components/requestBodies/ThreatParameters"
        },
        "summary": "Threat Summary"
      }
    },
    "/dna/intent/api/v1/security/threats/type": {
      "get": {
        "parameters": [
          {
            "description": "The Content Type for the request",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetThreatTypesResponse"
                }
              }
            },
            "description": "Success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Intent API to fetch all threat types defined.",
        "operationId": "getThreatTypes",
        "summary": "Get Threat Types"
      }
    },
    "/dna/intent/api/v1/sensor": {
      "delete": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "templateName",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSensorTestResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sensors"
        ],
        "description": "Intent API to delete an existing SENSOR test template",
        "operationId": "deleteSensorTest",
        "summary": "Delete sensor test"
      },
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sensors"
        ],
        "description": "Intent API to get a list of SENSOR devices",
        "operationId": "sensors",
        "summary": "Sensors"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSensorTestTemplateResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sensors"
        ],
        "description": "Intent API to create a SENSOR test template with a new SSID, existing SSID, or both new and existing SSID",
        "operationId": "createSensorTestTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSensorTestTemplateRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create sensor test template"
      }
    },
    "/dna/intent/api/v1/sensor-run-now": {
      "put": {
        "responses": {
          "200": {
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sensors"
        ],
        "description": "Intent API to run a deployed SENSOR test",
        "operationId": "runNowSensorTest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunNowSensorTestRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Run now sensor test"
      }
    },
    "/dna/intent/api/v1/sensorTestTemplate": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DuplicateSensorTestTemplateResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sensors"
        ],
        "description": "Intent API to duplicate an existing SENSOR test template",
        "operationId": "duplicateSensorTestTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DuplicateSensorTestTemplateRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Duplicate sensor test template"
      }
    },
    "/dna/intent/api/v1/service-provider": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServiceProviderDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to get service provider details (QoS).",
        "operationId": "getServiceProviderDetails",
        "summary": "Get Service provider Details"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSPProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to create Service Provider Profile(QOS).",
        "operationId": "createSPProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSPProfileRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create SP Profile"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSPProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to update Service Provider Profile (QoS).",
        "operationId": "updateSPProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSPProfileRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update SP Profile"
      }
    },
    "/dna/intent/api/v1/site": {
      "get": {
        "parameters": [
          {
            "description": "siteNameHierarchy (ex: global/groupName)",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Site id to which site details to retrieve.",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "type (ex: area, building, floor)",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "offset/starting row. The default value is 1",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": "1",
              "type": "string"
            }
          },
          {
            "description": "Number of sites to be retrieved. The default value is 500",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": "500",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSiteResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sites"
        ],
        "description": "Get site using siteNameHierarchy/siteId/type ,return all sites if these parameters are not given as input.",
        "operationId": "getSite",
        "summary": "Get Site"
      },
      "post": {
        "parameters": [
          {
            "description": "Enable this parameter to execute the API and return a response synchronously",
            "in": "header",
            "name": "__runsync",
            "required": true,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated",
            "in": "header",
            "name": "__timeout",
            "required": false,
            "schema": {
              "default": 30,
              "type": "number"
            }
          },
          {
            "description": "Persist bapi sync response",
            "in": "header",
            "name": "__persistbapioutput",
            "required": true,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSiteResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sites"
        ],
        "description": "Creates site with area/building/floor with specified hierarchy.",
        "operationId": "createSite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSiteRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Site"
      }
    },
    "/dna/intent/api/v1/site-health": {
      "get": {
        "parameters": [
          {
            "description": "Epoch time(in milliseconds) when the Site Hierarchy data is required",
            "in": "query",
            "name": "timestamp",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Type of the site to return.  AREA or BUILDING.  Default to AREA",
            "in": "query",
            "name": "siteType",
            "required": false,
            "schema": {
              "default": "AREA",
              "type": "string"
            }
          },
          {
            "description": "The offset value, starting from 1, of the first returned site entry.  Default is 1.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "description": "The max number of sites in the returned data set.  Default is 25, and max at 50",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 25,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSiteHealthResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sites"
        ],
        "description": "Returns Overall Health information for all sites",
        "operationId": "getSiteHealth",
        "summary": "Get Site Health"
      }
    },
    "/dna/intent/api/v1/site/count": {
      "get": {
        "parameters": [
          {
            "description": " Site id to retrieve site count.",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSiteCountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sites"
        ],
        "description": "API to get site count ",
        "operationId": "getSiteCount",
        "summary": "Get Site Count"
      }
    },
    "/dna/intent/api/v1/site/{siteId}": {
      "delete": {
        "parameters": [
          {
            "description": "Site id to which site details to be deleted.",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSiteResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sites"
        ],
        "description": "Delete site with area/building/floor by siteId.",
        "operationId": "deleteSite",
        "summary": "Delete Site"
      },
      "put": {
        "parameters": [
          {
            "description": "Enable this parameter to execute the API and return a response synchronously",
            "in": "header",
            "name": "__runsync",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated",
            "in": "header",
            "name": "__timeout",
            "required": false,
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "description": "Persist bapi sync response",
            "in": "header",
            "name": "__persistbapioutput",
            "required": true,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "Site id to which site details to be updated.",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSiteResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Sites"
        ],
        "description": "Update site area/building/floor with specified hierarchy and new values",
        "operationId": "updateSite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSiteRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Site"
      }
    },
    "/dna/intent/api/v1/snmp-property": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemPropertyListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Returns SNMP properties",
        "operationId": "getSNMPProperties",
        "summary": "Get SNMP properties"
      },
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "The request was accepted for processing, but the processing has not been completed."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Adds SNMP properties",
        "operationId": "create/UpdateSNMPProperties",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemPropertyNameAndIntValueDTO"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create/Update SNMP properties"
      }
    },
    "/dna/intent/api/v1/sp-profile/{spProfileName}": {
      "delete": {
        "parameters": [
          {
            "description": "sp profile name",
            "in": "path",
            "name": "spProfileName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSPProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to delete Service Provider Profile (QoS).",
        "operationId": "deleteSPProfile",
        "summary": "Delete SP Profile"
      }
    },
    "/dna/intent/api/v1/tag": {
      "get": {
        "parameters": [
          {
            "description": "Tag name is mandatory when filter operation is used.",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "nameSpace",
            "in": "query",
            "name": "additionalInfo.nameSpace",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "attributeName",
            "in": "query",
            "name": "additionalInfo.attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "levelArg",
            "in": "query",
            "name": "level",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "size in kilobytes(KB)",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Available field names are :'name,id,parentId,type,additionalInfo.nameSpace,additionalInfo.attributes'",
            "in": "query",
            "name": "field",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Only supported attribute is name. SortyBy is mandatory when order is used.",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Available values are asc and des",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "systemTag",
            "in": "query",
            "name": "systemTag",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagListResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          },
          "default": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Tag"
        ],
        "description": "Returns the tags for given filter criteria",
        "operationId": "getTag",
        "summary": "Get Tag"
      },
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          },
          "default": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Tag"
        ],
        "description": "Creates tag with specified tag attributes",
        "operationId": "createTag",
        "requestBody": {
          "$ref": "#/components/requestBodies/TagDTO"
        },
        "summary": "Create Tag"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          },
          "default": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Tag"
        ],
        "description": "Updates a tag specified by id",
        "operationId": "updateTag",
        "requestBody": {
          "$ref": "#/components/requestBodies/TagDTO"
        },
        "summary": "Update Tag"
      }
    },
    "/dna/intent/api/v1/tag/count": {
      "get": {
        "parameters": [
          {
            "description": "tagName",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "nameSpace",
            "in": "query",
            "name": "nameSpace",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "attributeName",
            "in": "query",
            "name": "attributeName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "levelArg",
            "in": "query",
            "name": "level",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "size in kilobytes(KB)",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "systemTag",
            "in": "query",
            "name": "systemTag",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          },
          "default": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Tag"
        ],
        "description": "Returns tag count",
        "operationId": "getTagCount",
        "summary": "Get Tag Count"
      }
    },
    "/dna/intent/api/v1/tag/member": {
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          },
          "default": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Tag"
        ],
        "description": "Updates tag membership. As part of the request payload through this API, only the specified members are added / retained to the given input tags. Possible values of memberType attribute in the request payload can be queried by using the /tag/member/type API",
        "operationId": "updatesTagMembership",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagMemberDTO"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Updates tag membership"
      }
    },
    "/dna/intent/api/v1/tag/member/type": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagTypesResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          },
          "default": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Tag"
        ],
        "description": "Returns list of supported resource types",
        "operationId": "getTagResourceTypes",
        "summary": "Get Tag resource types"
      }
    },
    "/dna/intent/api/v1/tag/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Tag ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          },
          "default": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Tag"
        ],
        "description": "Deletes a tag specified by id",
        "operationId": "deleteTag",
        "summary": "Delete Tag"
      },
      "get": {
        "parameters": [
          {
            "description": "Tag ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          },
          "default": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Tag"
        ],
        "description": "Returns tag specified by Id",
        "operationId": "getTagById",
        "summary": "Get Tag by Id"
      }
    },
    "/dna/intent/api/v1/tag/{id}/member": {
      "get": {
        "parameters": [
          {
            "description": "Tag ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Entity type of the member. Possible values can be retrieved by using /tag/member/type API",
            "in": "query",
            "name": "memberType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Used for pagination. It indicates the starting row number out of available member records",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Used to Number of maximum members to return in the result",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates how the member is associated with the tag. Possible values and description. 1) DYNAMIC : The member is associated to the tag through rules. 2) STATIC – The member is associated to the tag manually. 3) MIXED – The member is associated manually and also satisfies the rule defined for the tag",
            "in": "query",
            "name": "memberAssociationType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "level",
            "in": "query",
            "name": "level",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagMembersResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          },
          "default": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Tag"
        ],
        "description": "Returns tag members specified by id",
        "operationId": "getTagMembersById",
        "summary": "Get Tag members by Id"
      },
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "Tag ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          },
          "default": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Tag"
        ],
        "description": "Adds members to the tag specified by id",
        "operationId": "addMembersToTheTag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Listentrystringliststring"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add members to the tag"
      }
    },
    "/dna/intent/api/v1/tag/{id}/member/count": {
      "get": {
        "parameters": [
          {
            "description": "Tag ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "memberType",
            "in": "query",
            "name": "memberType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "memberAssociationType",
            "in": "query",
            "name": "memberAssociationType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "level",
            "in": "query",
            "name": "level",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          },
          "default": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Tag"
        ],
        "description": "Returns the number of members in a given tag",
        "operationId": "getTagMemberCount",
        "summary": "Get Tag Member count"
      }
    },
    "/dna/intent/api/v1/tag/{id}/member/{memberId}": {
      "delete": {
        "parameters": [
          {
            "description": "Tag ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TagMember id to be removed from tag",
            "in": "path",
            "name": "memberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          },
          "default": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Tag"
        ],
        "description": "Removes Tag member from the tag specified by id",
        "operationId": "removeTagMember",
        "summary": "Remove Tag member"
      }
    },
    "/dna/intent/api/v1/task": {
      "get": {
        "parameters": [
          {
            "description": "This is the epoch start time from which tasks need to be fetched",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This is the epoch end time upto which audit records need to be fetched",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks that contains this data",
            "in": "query",
            "name": "data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks that have this error code",
            "in": "query",
            "name": "errorCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks with this service type",
            "in": "query",
            "name": "serviceType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks with this username",
            "in": "query",
            "name": "username",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks that contains this progress",
            "in": "query",
            "name": "progress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks ended as success or failure. Valid values: true, false",
            "in": "query",
            "name": "isError",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks that contains this failure reason",
            "in": "query",
            "name": "failureReason",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks that have this parent Id",
            "in": "query",
            "name": "parentId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "offset",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "limit",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort results by this field",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order - asc or dsc",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDTOListResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Returns task(s) based on filter criteria",
        "operationId": "getTasks",
        "summary": "Get tasks"
      }
    },
    "/dna/intent/api/v1/task/count": {
      "get": {
        "parameters": [
          {
            "description": "This is the epoch start time from which tasks need to be fetched",
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This is the epoch end time upto which audit records need to be fetched",
            "in": "query",
            "name": "endTime",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks that contains this data",
            "in": "query",
            "name": "data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks that have this error code",
            "in": "query",
            "name": "errorCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks with this service type",
            "in": "query",
            "name": "serviceType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks with this username",
            "in": "query",
            "name": "username",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks that contains this progress",
            "in": "query",
            "name": "progress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks ended as success or failure. Valid values: true, false",
            "in": "query",
            "name": "isError",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks that contains this failure reason",
            "in": "query",
            "name": "failureReason",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Fetch tasks that have this parent Id",
            "in": "query",
            "name": "parentId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Returns Task count",
        "operationId": "getTaskCount",
        "summary": "Get task count"
      }
    },
    "/dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}": {
      "get": {
        "parameters": [
          {
            "description": "operationId",
            "in": "path",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Index, minimum value is 0",
            "in": "path",
            "name": "offset",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The maximum value of {limit} supported is 500. <br/> Base 1 indexing for {limit}, minimum value is 1",
            "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDTOListResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "If {limit} value is more than 500"
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Returns root tasks associated with an Operationid",
        "operationId": "getTaskByOperationId",
        "summary": "Get task by OperationId"
      }
    },
    "/dna/intent/api/v1/task/{taskId}": {
      "get": {
        "parameters": [
          {
            "description": "UUID of the Task",
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDTOResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "No task corresponding to the id was found"
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Returns a task by specified id",
        "operationId": "getTaskById",
        "summary": "Get task by Id"
      }
    },
    "/dna/intent/api/v1/task/{taskId}/tree": {
      "get": {
        "parameters": [
          {
            "description": "UUID of the Task",
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDTOListResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "No task corresponding to the id was found"
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Returns a task with its children tasks by based on their id",
        "operationId": "getTaskTree",
        "summary": "Get task tree"
      }
    },
    "/dna/intent/api/v1/topology/l2/{vlanID}": {
      "get": {
        "parameters": [
          {
            "description": "Vlan Name for e.g Vlan1, Vlan23 etc",
            "in": "path",
            "name": "vlanID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopologyResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Topology"
        ],
        "description": "Returns Layer 2 network topology by specified VLAN ID",
        "operationId": "getTopologyDetails",
        "summary": "Get topology details"
      }
    },
    "/dna/intent/api/v1/topology/l3/{topologyType}": {
      "get": {
        "parameters": [
          {
            "description": "Type of topology(OSPF,ISIS,etc)",
            "in": "path",
            "name": "topologyType",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopologyResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Topology"
        ],
        "description": "Returns the Layer 3 network topology by routing protocol",
        "operationId": "getL3TopologyDetails",
        "summary": "Get L3 Topology Details"
      }
    },
    "/dna/intent/api/v1/topology/physical-topology": {
      "get": {
        "parameters": [
          {
            "description": "nodeType",
            "in": "query",
            "name": "nodeType",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopologyResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Topology"
        ],
        "description": "Returns the raw physical topology by specified criteria of nodeType",
        "operationId": "getPhysicalTopology",
        "summary": "Get Physical Topology"
      }
    },
    "/dna/intent/api/v1/topology/site-topology": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Topology"
        ],
        "description": "Returns site topology",
        "operationId": "getSiteTopology",
        "summary": "Get Site Topology"
      }
    },
    "/dna/intent/api/v1/topology/vlan/vlan-names": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VlanNamesResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Topology"
        ],
        "description": "Returns the list of VLAN names",
        "operationId": "getVLANDetails",
        "summary": "Get VLAN details"
      }
    },
    "/dna/intent/api/v1/user-enrichment-details": {
      "get": {
        "parameters": [
          {
            "description": "User enrichment details can be fetched based on either User ID or Client MAC address. This parameter value must either be network_user_id/mac_address",
            "in": "header",
            "name": "entity_type",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "description": "Contains the actual value for the entity type that has been defined",
            "in": "header",
            "name": "entity_value",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserEnrichmentDetailsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Enriches a given network End User context (a network user-id or end user’s device Mac Address) with details about the user and devices that the user is connected to",
        "operationId": "getUserEnrichmentDetails",
        "summary": "Get User Enrichment Details"
      }
    },
    "/dna/intent/api/v1/virtual-network": {
      "delete": {
        "parameters": [
          {
            "description": "virtualNetworkName",
            "in": "query",
            "name": "virtualNetworkName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteVirtualNetworkWithScalableGroupsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Delete virtual network with scalable groups",
        "operationId": "deleteVirtualNetworkWithScalableGroups",
        "summary": "Delete virtual network with scalable groups"
      },
      "get": {
        "parameters": [
          {
            "description": "virtualNetworkName",
            "in": "query",
            "name": "virtualNetworkName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVirtualNetworkWithScalableGroupsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Get virtual network with scalable groups",
        "operationId": "getVirtualNetworkWithScalableGroups",
        "summary": "Get virtual network with scalable groups"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVirtualNetworkWithScalableGroupsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Add virtual network with scalable groups at global level",
        "operationId": "addVirtualNetworkWithScalableGroups",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddVirtualNetworkWithScalableGroupsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add virtual network with scalable groups"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateVirtualNetworkWithScalableGroupsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "SDA"
        ],
        "description": "Update virtual network with scalable groups",
        "operationId": "updateVirtualNetworkWithScalableGroups",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVirtualNetworkWithScalableGroupsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update virtual network with scalable groups"
      }
    },
    "/dna/intent/api/v1/wireless/accesspoint-configuration": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": false,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigureAccessPointsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "User can configure multiple access points with required options using this intent API",
        "operationId": "configureAccessPoints",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigureAccessPointsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Configure Access Points"
      }
    },
    "/dna/intent/api/v1/wireless/accesspoint-configuration/details/{task_id}": {
      "get": {
        "parameters": [
          {
            "description": "task id information of ap config",
            "in": "path",
            "name": "task_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessPointConfigurationTaskResultResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Users can query the access point configuration result using this intent API",
        "operationId": "getAccessPointConfigurationTaskResult",
        "summary": "Get Access Point Configuration task result"
      }
    },
    "/dna/intent/api/v1/wireless/accesspoint-configuration/summary": {
      "get": {
        "parameters": [
          {
            "description": "The ethernet MAC address of Access point",
            "in": "query",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessPointConfigurationResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Users can query the access point configuration information per device using the ethernet MAC address",
        "operationId": "getAccessPointConfiguration",
        "summary": "Get Access Point Configuration"
      }
    },
    "/dna/intent/api/v1/wireless/ap-provision": {
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "header",
            "name": "__persistbapioutput",
            "required": false,
            "schema": {
              "default": "true",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APProvisionResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Access Point Provision and ReProvision ",
        "operationId": "aPProvision",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APProvisionRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "AP Provision"
      }
    },
    "/dna/intent/api/v1/wireless/dynamic-interface": {
      "get": {
        "parameters": [
          {
            "description": "Enable this parameter to execute the API and return a response synchronously",
            "in": "header",
            "name": "__runsync",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution",
            "in": "header",
            "name": "__timeout",
            "required": false,
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "description": "dynamic-interface name, if not specified all the existing dynamic interfaces will be retrieved",
            "in": "query",
            "name": "interface-name",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDynamicInterfaceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Get one or all dynamic interface(s)",
        "operationId": "getDynamicInterface",
        "summary": "Get dynamic interface"
      },
      "post": {
        "parameters": [
          {
            "description": "Enable this parameter to execute the API and return a response synchronously",
            "in": "header",
            "name": "__runsync",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution",
            "in": "header",
            "name": "__timeout",
            "required": false,
            "schema": {
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUpdateDynamicInterfaceResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "API to create or update an dynamic interface",
        "operationId": "createUpdateDynamicInterface",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateDynamicInterfaceRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Update Dynamic interface"
      }
    },
    "/dna/intent/api/v1/wireless/dynamic-interface/{interfaceName}": {
      "delete": {
        "parameters": [
          {
            "description": "Enable this parameter to execute the API and return a response synchronously",
            "in": "header",
            "name": "__runsync",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution",
            "in": "header",
            "name": "__timeout",
            "required": false,
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "description": "valid interface-name to be deleted",
            "in": "path",
            "name": "interfaceName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Delete a dynamic interface",
        "operationId": "deleteDynamicInterface",
        "summary": "Delete dynamic interface"
      }
    },
    "/dna/intent/api/v1/wireless/profile": {
      "get": {
        "parameters": [
          {
            "description": "Wireless Network Profile Name",
            "in": "query",
            "name": "profileName",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWirelessProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Gets either one or all the wireless network profiles if no name is provided for network-profile.",
        "operationId": "getWirelessProfile",
        "summary": "Get Wireless Profile"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWirelessProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Creates Wireless Network Profile on Cisco DNA Center and associates sites and SSIDs to it.",
        "operationId": "createWirelessProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWirelessProfileRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Wireless Profile"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWirelessProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Updates the wireless Network Profile with updated details provided. All sites to be present in the network profile should be provided.",
        "operationId": "updateWirelessProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWirelessProfileRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Wireless Profile"
      }
    },
    "/dna/intent/api/v1/wireless/provision": {
      "post": {
        "parameters": [
          {
            "description": "Enable this parameter to execute the API and return a response asynchronously.",
            "in": "header",
            "name": "__persistbapioutput",
            "required": true,
            "schema": {
              "default": "true",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Provision wireless devices",
        "operationId": "provision",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvisionRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Provision"
      },
      "put": {
        "parameters": [
          {
            "description": "Enable this parameter to execute the API and return a response asynchronously.",
            "in": "header",
            "name": "__persistbapioutput",
            "required": true,
            "schema": {
              "default": "true",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionUpdateResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Updates wireless provisioning",
        "operationId": "provisionUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvisionUpdateRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Provision update"
      }
    },
    "/dna/intent/api/v1/wireless/psk-override": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PSKOverrideResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Update/override pass phrase of enterprise SSID",
        "operationId": "pSKOverride",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PSKOverrideRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "PSK override"
      }
    },
    "/dna/intent/api/v1/wireless/rf-profile": {
      "get": {
        "parameters": [
          {
            "description": "RF Profile Name",
            "in": "query",
            "name": "rf-profile-name",
            "required": false,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveRFProfilesResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Retrieve all RF profiles",
        "operationId": "retrieveRFProfiles",
        "summary": "Retrieve RF profiles"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrUpdateRFProfileResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Create or Update RF profile",
        "operationId": "createOrUpdateRFProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateRFProfileRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create or Update RF profile"
      }
    },
    "/dna/intent/api/v1/wireless/rf-profile/{rfProfileName}": {
      "delete": {
        "parameters": [
          {
            "description": "RF profile name to be deleted(required) *non-custom RF profile cannot be deleted",
            "in": "path",
            "name": "rfProfileName",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRFProfilesResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Wireless"
        ],
        "description": "Delete RF profile(s)",
        "operationId": "deleteRFProfiles",
        "summary": "Delete RF profiles"
      }
    },
    "/dna/intent/api/v2/credential-to-site/{siteId}": {
      "post": {
        "parameters": [
          {
            "description": "Site Id to assign credential.",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignDeviceCredentialToSiteVResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to assign Device Credential to a site.",
        "operationId": "assignDeviceCredentialToSiteV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignDeviceCredentialToSiteVRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Assign Device Credential To Site V2"
      }
    },
    "/dna/intent/api/v2/global-credential": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllGlobalCredentialsVResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "API to get device credentials' details. It fetches all global credentials of all types at once, without the need to pass any input parameters.",
        "operationId": "getAllGlobalCredentialsV2",
        "summary": "Get All Global Credentials V2"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGlobalCredentialsVResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "API to create new global credentials. Multiple credentials of various types can be passed at once. Please refer sample Request Body for more information.",
        "operationId": "createGlobalCredentialsV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGlobalCredentialsVRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Global Credentials V2"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateGlobalCredentialsVResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "API to update device credentials. Multiple credentials can be passed at once, but only a single credential of a given type can be passed at once. Please refer sample Request Body for more information.",
        "operationId": "updateGlobalCredentialsV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGlobalCredentialsVRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Global Credentials V2"
      }
    },
    "/dna/intent/api/v2/global-credential/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Global Credential id\t",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteGlobalCredentialVResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Discovery"
        ],
        "description": "Delete a global credential. Only 'id' of the credential has to be passed.",
        "operationId": "deleteGlobalCredentialV2",
        "summary": "Delete Global Credential V2"
      }
    },
    "/dna/intent/api/v2/network": {
      "get": {
        "parameters": [
          {
            "description": "Site Id to get the network settings associated with the site.",
            "in": "query",
            "name": "siteId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNetworkVResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to get SNMP, NTP, Network AAA, Client and Endpoint AAA, and/or DNS center server settings.",
        "operationId": "getNetworkV2",
        "summary": "Get Network V2"
      }
    },
    "/dna/intent/api/v2/network/{siteId}": {
      "post": {
        "parameters": [
          {
            "description": "Site Id to which site details to associate with the network settings.",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNetworkVResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to create network settings for DHCP,  Syslog, SNMP, NTP, Network AAA, Client and Endpoint AAA, and/or DNS center server settings.",
        "operationId": "createNetworkV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNetworkVRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create Network V2"
      },
      "put": {
        "parameters": [
          {
            "description": "Site Id to update the network settings which is associated with the site",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateNetworkVResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to update network settings for DHCP, Syslog, SNMP, NTP, Network AAA, Client and Endpoint AAA, and/or DNS center server settings.",
        "operationId": "updateNetworkV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNetworkVRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update Network V2"
      }
    },
    "/dna/intent/api/v2/service-provider": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServiceProviderDetailsVResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to get Service Provider details (QoS).",
        "operationId": "getServiceProviderDetailsV2",
        "summary": "Get Service Provider Details V2"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSPProfileVResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to create Service Provider Profile(QOS).",
        "operationId": "createSPProfileV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSPProfileVRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Create SP Profile V2"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSPProfileVResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to update Service Provider Profile (QoS).",
        "operationId": "updateSPProfileV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSPProfileVRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update SP Profile V2"
      }
    },
    "/dna/intent/api/v2/sp-profile/{spProfileName}": {
      "delete": {
        "parameters": [
          {
            "description": "sp profile name",
            "in": "path",
            "name": "spProfileName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSPProfileVResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "500": {
            "description": "The server could not fulfill the request."
          }
        },
        "tags": [
          "Network Settings"
        ],
        "description": "API to delete Service Provider Profile (QoS).",
        "operationId": "deleteSPProfileV2",
        "summary": "Delete SP Profile V2"
      }
    },
    "/dna/intent/api/v2/template-programmer/project": {
      "get": {
        "parameters": [
          {
            "description": "Id of project to be searched",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of project to be searched",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Index of first result",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Limits number of results",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Sort Order Ascending (asc) or Descending (dsc)",
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Configuration Templates"
        ],
        "description": "Get project(s) details",
        "operationId": "getProject(s)Details",
        "summary": "Get project(s) details"
      }
    },
    "/dna/intent/api/v2/template-programmer/template": {
      "get": {
        "parameters": [
          {
            "description": "Id of template to be searched",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of template to be searched",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter template(s) based on project id",
            "in": "query",
            "name": "projectId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter template(s) based on project name",
            "in": "query",
            "name": "projectName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter template(s) based software type",
            "in": "query",
            "name": "softwareType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter template(s) based softwareVersion",
            "in": "query",
            "name": "softwareVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter template(s) based on device family",
            "in": "query",
            "name": "productFamily",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter template(s) based on device series",
            "in": "query",
            "name": "productSeries",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter template(s) based on device type",
            "in": "query",
            "name": "productType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter template(s) based on confliting templates",
            "in": "query",
            "name": "filterConflictingTemplates",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Filter template(s) based on tags",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Return uncommitted template",
            "in": "query",
            "name": "unCommitted",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Sort Order Ascending (asc) or Descending (dsc)",
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return all template attributes",
            "in": "query",
            "name": "allTemplateAttributes",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Include template version details",
            "in": "query",
            "name": "includeVersionDetails",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Index of first result",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Limits number of results",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateDTO"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Configuration Templates"
        ],
        "description": "Get template(s) details",
        "operationId": "getTemplate(s)Details",
        "summary": "Get template(s) details"
      }
    },
    "/dna/intent/api/v2/template-programmer/template/deploy": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskIdResult"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "201": {
            "description": "The POST/PUT request was fulfilled and a new resource has been created. Information about the resource is in the response body."
          },
          "202": {
            "description": "Request was accepted. Use Task ID to track the progress"
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Configuration Templates"
        ],
        "description": "V2 API to deploy a template.",
        "operationId": "deployTemplateV2",
        "requestBody": {
          "$ref": "#/components/requestBodies/TemplateDeploymentInfo"
        },
        "summary": "Deploy Template V2"
      }
    },
    "/dna/system/api/v1/auth/token": {
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          },
          {
            "description": "API supports both Basic auth and AES key encryption as Authorization token in header. AES key encryption is optional and can be enabled under DNAC System configuration. For Basic Auth: Authorization header is Base64 encoded string of \"username:password\", For example Authorization header will contain “Basic YWRtaW46TWFnbGV2MTIz”, where YWRtaW46TWFnbGV2MTIz is the Base64 encoded string. For AES key encryption, Authorization header is Base64 encoded string of AES key. For example Authorization header will contain \"CSCO-AES-256 credentials=2k/wGz48lp3ma9sM+2xiyQ==\", where \"2k/wGz48lp3ma9sM+2xiyQ==\" is base64 encoded string of 256 bits AES key encrypted \"username:password\".",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationAPIResponse"
                }
              }
            },
            "description": "Successful Token Generation"
          },
          "401": {
            "description": "Invalid Credentials "
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "API to obtain an access token, which remains valid for 1 hour. The token obtained using this API is required to be set as value to the X-Auth-Token HTTP Header for all API calls to Cisco DNA Center.",
        "operationId": "authenticationAPI",
        "summary": "Authentication API"
      }
    },
    "/dna/system/api/v1/event/artifact": {
      "get": {
        "parameters": [
          {
            "description": "List of eventIds",
            "in": "query",
            "name": "eventIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Tags defined",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Record start offset",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "# of records to return in result set",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "sorting order (asc/desc)",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "findd matches in name, description, eventId, type, category",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventArtifactsResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Gets the list of artifacts based on provided offset and limit",
        "operationId": "getEventArtifacts",
        "summary": "Get EventArtifacts"
      }
    },
    "/dna/system/api/v1/event/artifact/count": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventArtifactCountResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Get the count of registered event artifacts with provided eventIds or tags as mandatory",
        "operationId": "eventArtifactCount",
        "summary": "EventArtifact Count"
      }
    },
    "/dna/system/api/v1/event/config/connector-types": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConnectorTypesResponse"
                }
              }
            },
            "description": "The request was successful. The result is contained in the response body."
          },
          "204": {
            "description": "The request was successful, however no content was returned."
          },
          "206": {
            "description": "The GET request included a Range Header, and the server responded with the partial content matching the range."
          },
          "400": {
            "description": "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          },
          "401": {
            "description": "The client's authentication credentials included with the request are missing or invalid."
          },
          "403": {
            "description": "The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "The client made a request for a resource that does not exist."
          },
          "409": {
            "description": "The target resource is in a conflicted state (for example, an edit conflict where a resource is being edited by multiple users). Retrying the request later might succeed."
          },
          "415": {
            "description": "The client sent a request body in a format that the server does not support (for example, XML to a server that only accepts JSON)."
          },
          "500": {
            "description": "The server could not fulfill the request."
          },
          "501": {
            "description": "The server has not implemented the functionality required to fulfill the request."
          },
          "503": {
            "description": "The server is (temporarily) unavailable."
          },
          "504": {
            "description": "The server did not respond inside time restrictions and timed-out."
          }
        },
        "tags": [
          "Event Management"
        ],
        "description": "Get the list of connector types",
        "operationId": "getConnectorTypes",
        "summary": "Get Connector Types"
      }
    },
    "/dna/system/api/v1/role/permissions": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPermissionsAPIResponse"
                }
              }
            },
            "description": "Return all available DNA Center resource types"
          },
          "401": {
            "description": "Unauthorised user operation"
          }
        },
        "tags": [
          "User and Roles"
        ],
        "description": "Get permissions for a role from Cisco DNA Center System",
        "operationId": "getPermissionsAPI",
        "summary": "Get permissions API"
      }
    },
    "/dna/system/api/v1/roles": {
      "get": {
        "parameters": [
          {
            "description": "The source that invoke this API",
            "in": "header",
            "name": "invokeSource",
            "required": true,
            "schema": {
              "default": "external",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dnacsystemrole"
                }
              }
            },
            "description": "Return all available DNA Center roles"
          },
          "400": {
            "description": "Please provide valid header parameter-\"invokeSource\""
          },
          "401": {
            "description": "Unauthorised user operation"
          }
        },
        "tags": [
          "User and Roles"
        ],
        "description": "Get all roles for the Cisco DNA Center system",
        "operationId": "getRolesAPI",
        "summary": "Get roles API"
      }
    },
    "/dna/system/api/v1/user": {
      "get": {
        "parameters": [
          {
            "description": "The source that invokes this API",
            "in": "query",
            "name": "invokeSource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersAPIResponse"
                }
              }
            },
            "description": "Return all available DNA Center users"
          },
          "400": {
            "description": "Please provide valid query parameter-\"invokeSource\""
          },
          "401": {
            "description": "Unauthorised user operation"
          }
        },
        "tags": [
          "User and Roles"
        ],
        "description": "Get all users for the Cisco DNA Center system",
        "operationId": "getUsersAPI",
        "summary": "Get users API"
      },
      "post": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUserAPIResponse"
                }
              }
            },
            "description": "User is created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "User already exists with the given username"
          },
          "500": {
            "description": "Error while creating the user"
          }
        },
        "tags": [
          "User and Roles"
        ],
        "description": "Add a new user for Cisco DNA Center system",
        "operationId": "addUserAPI",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserAPIRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Add user API"
      },
      "put": {
        "parameters": [
          {
            "description": "Request body content type",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserAPIResponse"
                }
              }
            },
            "description": "User is updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User with the given Id is not found"
          },
          "500": {
            "description": "Error while updating the user"
          }
        },
        "tags": [
          "User and Roles"
        ],
        "description": "Update a user for Cisco DNA Center system",
        "operationId": "updateUserAPI",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserAPIRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "summary": "Update user API"
      }
    },
    "/dna/system/api/v1/users/external-servers": {
      "get": {
        "parameters": [
          {
            "description": "The source that invokes this API",
            "in": "query",
            "name": "invokeSource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExternalAuthenticationServersAPIResponse"
                }
              }
            },
            "description": "Return all available DNA Center external servers"
          },
          "400": {
            "description": "Please provide valid query parameter-\"invokeSource\""
          },
          "401": {
            "description": "Unauthorised user operation"
          },
          "500": {
            "description": "Error while finding all aaa-servers"
          }
        },
        "tags": [
          "User and Roles"
        ],
        "description": "Get external users authentication servers",
        "operationId": "getExternalAuthenticationServersAPI",
        "summary": "Get external authentication servers API"
      }
    }
  },
  "components": {
    "requestBodies": {
      "CLICredentialDTO": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CLICredentialDTO"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "Device": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Device"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "DeviceReplacementDataDTO": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DeviceReplacementDataDTO"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "HTTPReadCredentialDTO": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPReadCredentialDTO"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "HTTPWriteCredentialDTO": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPWriteCredentialDTO"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "InventoryDeviceInfo": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InventoryDeviceInfo"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "NetconfCredentialDTO": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NetconfCredentialDTO"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "ProfilingRule": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProfilingRule"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "ProjectDTO": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProjectDTO"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "SAVAMapping": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SAVAMapping"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "SNMPvCredentialDTO": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SNMPvCredentialDTO"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "SNMPvReadCommunityDTO": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SNMPvReadCommunityDTO"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "SNMPvWriteCommunityDTO": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SNMPvWriteCommunityDTO"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "SiteProvisionRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SiteProvisionRequest"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "TagDTO": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TagDTO"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "TemplateDTO": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TemplateDTO"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "TemplateDeploymentInfo": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TemplateDeploymentInfo"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "ThreatParameters": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ThreatParameters"
            }
          }
        },
        "description": "request",
        "required": true
      },
      "Workflow": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Workflow"
            }
          }
        },
        "description": "request",
        "required": true
      }
    },
    "schemas": {
      "CreateBackup": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "APProvisionRequest": {
        "items": {
          "properties": {
            "customApGroupName": {
              "type": "string"
            },
            "customFlexGroupName": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "deviceName": {
              "type": "string"
            },
            "rfProfile": {
              "type": "string"
            },
            "siteId": {
              "type": "string"
            },
            "siteNameHierarchy": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "APProvisionResponse": {
        "items": {
          "properties": {
            "executionId": {
              "type": "string"
            },
            "executionUrl": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "ActivateDTO": {
        "items": {
          "properties": {
            "activateLowerImageVersion": {
              "type": "boolean"
            },
            "deviceUpgradeMode": {
              "type": "string"
            },
            "deviceUuid": {
              "type": "string"
            },
            "distributeIfNeeded": {
              "type": "boolean"
            },
            "imageUuidList": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "smuImageUuidList": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "AddAWorkflowResponse": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "addToInventory": {
            "type": "boolean"
          },
          "addedOn": {
            "type": "number"
          },
          "configId": {
            "type": "string"
          },
          "currTaskIdx": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "endTime": {
            "type": "number"
          },
          "execTime": {
            "type": "number"
          },
          "imageId": {
            "type": "string"
          },
          "instanceType": {
            "type": "string"
          },
          "lastupdateOn": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "startTime": {
            "type": "number"
          },
          "state": {
            "type": "string"
          },
          "tasks": {
            "items": {
              "properties": {
                "currWorkItemIdx": {
                  "type": "number"
                },
                "endTime": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "startTime": {
                  "type": "number"
                },
                "state": {
                  "type": "string"
                },
                "taskSeqNo": {
                  "type": "number"
                },
                "timeTaken": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "workItemList": {
                  "items": {
                    "properties": {
                      "command": {
                        "type": "string"
                      },
                      "endTime": {
                        "type": "number"
                      },
                      "outputStr": {
                        "type": "string"
                      },
                      "startTime": {
                        "type": "number"
                      },
                      "state": {
                        "type": "string"
                      },
                      "timeTaken": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "tenantId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "useState": {
            "type": "string"
          },
          "version": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "AddAllowedMacAddressRequest": {
        "items": {
          "properties": {
            "category": {
              "type": "integer"
            },
            "macAddress": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "AddAllowedMacAddressResponse": {
        "properties": {
          "error": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddBorderDeviceInSDAFabricRequest": {
        "items": {
          "properties": {
            "borderPriority": {
              "type": "string"
            },
            "borderSessionType": {
              "enum": [
                "EXTERNAL",
                "INTERNAL",
                "ANYWHERE"
              ],
              "type": "string"
            },
            "borderWithExternalConnectivity": {
              "type": "boolean"
            },
            "connectedToInternet": {
              "type": "boolean"
            },
            "deviceManagementIpAddress": {
              "type": "string"
            },
            "deviceRole": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "externalConnectivityIpPoolName": {
              "type": "string"
            },
            "externalConnectivitySettings": {
              "items": {
                "properties": {
                  "externalAutonomouSystemNumber": {
                    "type": "string"
                  },
                  "interfaceDescription": {
                    "type": "string"
                  },
                  "interfaceName": {
                    "type": "string"
                  },
                  "l2Handoff": {
                    "items": {
                      "properties": {
                        "virtualNetworkName": {
                          "type": "string"
                        },
                        "vlanName": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "l3Handoff": {
                    "items": {
                      "properties": {
                        "virtualNetwork": {
                          "properties": {
                            "virtualNetworkName": {
                              "type": "string"
                            },
                            "vlanId": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "externalDomainRoutingProtocolName": {
              "enum": [
                "BGP"
              ],
              "type": "string"
            },
            "internalAutonomouSystemNumber": {
              "type": "string"
            },
            "routeDistributionProtocol": {
              "type": "string"
            },
            "sdaTransitNetworkName": {
              "type": "string"
            },
            "siteNameHierarchy": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "AddBorderDeviceInSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddControlPlaneDeviceInSDAFabricRequest": {
        "properties": {
          "deviceManagementIpAddress": {
            "type": "string"
          },
          "routeDistributionProtocol": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddControlPlaneDeviceInSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddDefaultAuthenticationTemplateInSDAFabricRequest": {
        "items": {
          "properties": {
            "authenticateTemplateName": {
              "enum": [
                "No Authentication ",
                "Open Authentication",
                "Closed Authentication",
                "Low Impact"
              ],
              "type": "string"
            },
            "siteNameHierarchy": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "AddDefaultAuthenticationTemplateInSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddEdgeDeviceInSDAFabricRequest": {
        "properties": {
          "deviceManagementIpAddress": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddEdgeDeviceInSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddIPPoolInSDAVirtualNetworkRequest": {
        "properties": {
          "autoGenerateVlanName": {
            "type": "boolean"
          },
          "ipPoolName": {
            "type": "string"
          },
          "isBridgeModeVm": {
            "type": "boolean"
          },
          "isCommonPool": {
            "type": "boolean"
          },
          "isIpDirectedBroadcast": {
            "type": "boolean"
          },
          "isL2FloodingEnabled": {
            "type": "boolean"
          },
          "isLayer2Only": {
            "type": "boolean"
          },
          "isThisCriticalPool": {
            "type": "boolean"
          },
          "isWirelessPool": {
            "type": "boolean"
          },
          "poolType": {
            "enum": [
              "AP",
              "Extended"
            ],
            "type": "string"
          },
          "scalableGroupName": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          },
          "trafficType": {
            "enum": [
              "Data",
              "Voice"
            ],
            "type": "string"
          },
          "virtualNetworkName": {
            "type": "string"
          },
          "vlanId": {
            "type": "string"
          },
          "vlanName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddIPPoolInSDAVirtualNetworkResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddMulticastInSDAFabricRequest": {
        "properties": {
          "multicastMethod": {
            "enum": [
              "native_multicast"
            ],
            "type": "string"
          },
          "multicastType": {
            "enum": [
              "ssm",
              "asm_with_internal_rp",
              "asm_with_external_rp"
            ],
            "type": "string"
          },
          "multicastVnInfo": {
            "items": {
              "properties": {
                "externalRpIpAddress": {
                  "type": "string"
                },
                "internalRpIpAddress": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "ipPoolName": {
                  "type": "string"
                },
                "ssmInfo": {
                  "items": {
                    "properties": {
                      "ssmGroupRange": {
                        "type": "string"
                      },
                      "ssmWildcardMask": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "virtualNetworkName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "siteNameHierarchy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddMulticastInSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddPortAssignmentForAccessPointInSDAFabricRequest": {
        "properties": {
          "authenticateTemplateName": {
            "enum": [
              "No Authentication",
              "Open Authentication",
              "Closed Authentication ",
              "Low Impact "
            ],
            "type": "string"
          },
          "dataIpAddressPoolName": {
            "type": "string"
          },
          "deviceManagementIpAddress": {
            "type": "string"
          },
          "interfaceDescription": {
            "type": "string"
          },
          "interfaceName": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddPortAssignmentForAccessPointInSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddPortAssignmentForUserDeviceInSDAFabricRequest": {
        "properties": {
          "authenticateTemplateName": {
            "enum": [
              "Open Authentication",
              "Closed Authentication",
              "Low Impact",
              "No Authentication",
              ""
            ],
            "type": "string"
          },
          "dataIpAddressPoolName": {
            "type": "string"
          },
          "deviceManagementIpAddress": {
            "type": "string"
          },
          "interfaceDescription": {
            "type": "string"
          },
          "interfaceName": {
            "type": "string"
          },
          "scalableGroupName": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          },
          "voiceIpAddressPoolName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddPortAssignmentForUserDeviceInSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddSSIDToIPPoolMappingRequest": {
        "properties": {
          "scalableGroupName": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          },
          "ssidNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "vlanName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddSSIDToIPPoolMappingResponse": {
        "items": {
          "properties": {
            "executionId": {
              "type": "string"
            },
            "executionStatusURL": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "AddSiteInSDAFabricRequest": {
        "properties": {
          "fabricName": {
            "type": "string"
          },
          "fabricType": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddSiteInSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddTransitPeerNetworkRequest": {
        "properties": {
          "ipTransitSettings": {
            "properties": {
              "autonomousSystemNumber": {
                "type": "string"
              },
              "routingProtocolName": {
                "enum": [
                  "BGP"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "sdaTransitSettings": {
            "properties": {
              "transitControlPlaneSettings": {
                "items": {
                  "properties": {
                    "deviceManagementIpAddress": {
                      "type": "string"
                    },
                    "siteNameHierarchy": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "transitPeerNetworkName": {
            "type": "string"
          },
          "transitPeerNetworkType": {
            "enum": [
              "ip_transit",
              "sda_transit_with_lisp_bgp",
              "sda_transit_with_pub_sub"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddTransitPeerNetworkResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddUserAPIRequest": {
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "roleList": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddUserAPIResponse": {
        "properties": {
          "response": {
            "properties": {
              "message": {
                "type": "string"
              },
              "userId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "AddUserDefinedFieldToDeviceRequest": {
        "items": {
          "properties": {
            "name": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "AddUserDefinedFieldToDeviceResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddVNInFabricRequest": {
        "properties": {
          "siteNameHierarchy": {
            "type": "string"
          },
          "virtualNetworkName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddVNInFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddVirtualAccountResponse": {
        "properties": {
          "autoSyncPeriod": {
            "type": "number"
          },
          "ccoUser": {
            "type": "string"
          },
          "expiry": {
            "type": "number"
          },
          "lastSync": {
            "type": "number"
          },
          "profile": {
            "properties": {
              "addressFqdn": {
                "type": "string"
              },
              "addressIpV4": {
                "type": "string"
              },
              "cert": {
                "type": "string"
              },
              "makeDefault": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "port": {
                "type": "number"
              },
              "profileId": {
                "type": "string"
              },
              "proxy": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "smartAccountId": {
            "type": "string"
          },
          "syncResult": {
            "properties": {
              "syncList": {
                "items": {
                  "properties": {
                    "deviceSnList": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "syncType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "syncMsg": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "syncResultStr": {
            "type": "string"
          },
          "syncStartTime": {
            "type": "number"
          },
          "syncStatus": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "virtualAccountId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddVirtualNetworkWithScalableGroupsRequest": {
        "properties": {
          "isGuestVirtualNetwork": {
            "type": "boolean"
          },
          "scalableGroupNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "vManageVpnId": {
            "type": "string"
          },
          "virtualNetworkName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddVirtualNetworkWithScalableGroupsResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddWLCToFabricDomainRequest": {
        "properties": {
          "deviceName": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AncPolicy": {
        "items": {
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "ApplicationPolicyIntentRequest": {
        "properties": {
          "createList": {
            "items": {
              "properties": {
                "advancedPolicyScope": {
                  "properties": {
                    "advancedPolicyScopeElement": {
                      "items": {
                        "properties": {
                          "groupId": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "ssid": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "consumer": {
                  "properties": {
                    "scalableGroup": {
                      "items": {
                        "properties": {
                          "idRef": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "contract": {
                  "properties": {
                    "idRef": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deletePolicyStatus": {
                  "enum": [
                    "NONE",
                    "DELETED",
                    "RESTORED"
                  ],
                  "type": "string"
                },
                "exclusiveContract": {
                  "properties": {
                    "clause": {
                      "items": {
                        "properties": {
                          "deviceRemovalBehavior": {
                            "enum": [
                              "DELETE",
                              "RESTORE",
                              "IGNORE"
                            ],
                            "type": "string"
                          },
                          "hostTrackingEnabled": {
                            "type": "boolean"
                          },
                          "relevanceLevel": {
                            "enum": [
                              "BUSINESS_RELEVANT",
                              "BUSINESS_IRRELEVANT",
                              "DEFAULT"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "BUSINESS_RELEVANCE",
                              "APPLICATION_POLICY_KNOBS"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "policyScope": {
                  "type": "string"
                },
                "priority": {
                  "type": "string"
                },
                "producer": {
                  "properties": {
                    "scalableGroup": {
                      "items": {
                        "properties": {
                          "idRef": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "deleteList": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "updateList": {
            "items": {
              "properties": {
                "advancedPolicyScope": {
                  "properties": {
                    "advancedPolicyScopeElement": {
                      "items": {
                        "properties": {
                          "groupId": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "id": {
                            "type": "string"
                          },
                          "ssid": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "consumer": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "scalableGroup": {
                      "items": {
                        "properties": {
                          "idRef": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "contract": {
                  "properties": {
                    "idRef": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "deletePolicyStatus": {
                  "enum": [
                    "NONE",
                    "DELETED",
                    "RESTORED"
                  ],
                  "type": "string"
                },
                "exclusiveContract": {
                  "properties": {
                    "clause": {
                      "items": {
                        "properties": {
                          "deviceRemovalBehavior": {
                            "enum": [
                              "DELETE",
                              "RESTORE",
                              "IGNORE"
                            ],
                            "type": "string"
                          },
                          "hostTrackingEnabled": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "relevanceLevel": {
                            "enum": [
                              "BUSINESS_RELEVANT",
                              "BUSINESS_IRRELEVANT",
                              "DEFAULT"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "BUSINESS_RELEVANCE",
                              "APPLICATION_POLICY_KNOBS"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "policyScope": {
                  "type": "string"
                },
                "priority": {
                  "type": "string"
                },
                "producer": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "scalableGroup": {
                      "items": {
                        "properties": {
                          "idRef": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ApplicationPolicyIntentResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApplicationsResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "application": {
                  "type": "string"
                },
                "applicationServerLatency": {
                  "properties": {},
                  "type": "object"
                },
                "averageThroughput": {
                  "type": "number"
                },
                "businessRelevance": {
                  "enum": [
                    "business-irrelevant",
                    "business-relevant",
                    "default"
                  ],
                  "type": "string"
                },
                "clientIp": {
                  "type": "string"
                },
                "clientMacAddress": {
                  "type": "string"
                },
                "clientName": {
                  "type": "string"
                },
                "clientNetworkLatency": {
                  "properties": {},
                  "type": "object"
                },
                "deviceType": {
                  "enum": [
                    "Wired",
                    "Wireless"
                  ],
                  "type": "string"
                },
                "exporterFamily": {
                  "type": "string"
                },
                "exporterIpAddress": {
                  "type": "string"
                },
                "exporterName": {
                  "type": "string"
                },
                "exporterUUID": {
                  "type": "string"
                },
                "health": {
                  "type": "integer"
                },
                "issueId": {
                  "type": "string"
                },
                "issueName": {
                  "type": "string"
                },
                "jitter": {
                  "properties": {},
                  "type": "object"
                },
                "location": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "networkLatency": {
                  "properties": {},
                  "type": "object"
                },
                "occurrences": {
                  "type": "integer"
                },
                "operatingSystem": {
                  "type": "string"
                },
                "packetLossPercent": {
                  "properties": {},
                  "type": "object"
                },
                "priority": {
                  "type": "string"
                },
                "rootCause": {
                  "type": "string"
                },
                "serverNetworkLatency": {
                  "properties": {},
                  "type": "object"
                },
                "severity": {
                  "type": "string"
                },
                "summary": {
                  "type": "string"
                },
                "timestamp": {
                  "type": "integer"
                },
                "trafficClass": {
                  "type": "string"
                },
                "usageBytes": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "totalCount": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssignDeviceCredentialToSiteRequest": {
        "properties": {
          "cliId": {
            "type": "string"
          },
          "httpRead": {
            "type": "string"
          },
          "httpWrite": {
            "type": "string"
          },
          "snmpV2ReadId": {
            "type": "string"
          },
          "snmpV2WriteId": {
            "type": "string"
          },
          "snmpV3Id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssignDeviceCredentialToSiteResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssignDeviceCredentialToSiteVRequest": {
        "properties": {
          "cliId": {
            "type": "string"
          },
          "httpRead": {
            "type": "string"
          },
          "httpWrite": {
            "type": "string"
          },
          "snmpV2ReadId": {
            "type": "string"
          },
          "snmpV2WriteId": {
            "type": "string"
          },
          "snmpV3Id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssignDeviceCredentialToSiteVResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssignDevicesToSiteRequest": {
        "properties": {
          "device": {
            "items": {
              "properties": {
                "ip": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AssignDevicesToSiteResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssociateResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "properties": {},
                "type": "object"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuthenticationAPIResponse": {
        "properties": {
          "Token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuthorizeDeviceRequest": {
        "properties": {
          "deviceIdList": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AuthorizeDeviceResponse": {
        "properties": {
          "jsonArrayResponse": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "jsonResponse": {
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "CLICredentialDTO": {
        "properties": {
          "comments": {
            "type": "string"
          },
          "credentialType": {
            "enum": [
              "GLOBAL",
              "APP"
            ],
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enablePassword": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instanceTenantId": {
            "type": "string"
          },
          "instanceUuid": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChangeVirtualAccountRequest": {
        "properties": {
          "device_uuids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ChangeVirtualAccountResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "ChassisListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "assemblyNumber": {
                  "type": "string"
                },
                "assemblyRevision": {
                  "type": "string"
                },
                "containmentEntity": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "entityPhysicalIndex": {
                  "type": "string"
                },
                "hardwareVersion": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "isFieldReplaceable": {
                  "enum": [
                    "UNKNOWN",
                    "TRUE",
                    "FALSE",
                    "NOT_APPLICABLE"
                  ],
                  "type": "string"
                },
                "isReportingAlarmsAllowed": {
                  "enum": [
                    "UNKNOWN",
                    "TRUE",
                    "FALSE",
                    "NOT_APPLICABLE"
                  ],
                  "type": "string"
                },
                "manufacturer": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "partNumber": {
                  "type": "string"
                },
                "serialNumber": {
                  "type": "string"
                },
                "vendorEquipmentType": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CiscoDNACenterNodesConfigurationSummaryResponse": {
        "properties": {
          "response": {
            "properties": {
              "nodes": {
                "items": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "network": {
                      "items": {
                        "properties": {
                          "inet": {
                            "properties": {
                              "dns_servers": {
                                "items": {
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "gateway": {
                                "type": "string"
                              },
                              "host_ip": {
                                "type": "string"
                              },
                              "netmask": {
                                "type": "string"
                              },
                              "routes": {
                                "items": {
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "inet6": {
                            "properties": {
                              "host_ip": {
                                "type": "string"
                              },
                              "netmask": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "interface": {
                            "type": "string"
                          },
                          "intra_cluster_link": {
                            "type": "boolean"
                          },
                          "lacp_mode": {
                            "type": "boolean"
                          },
                          "lacp_supported": {
                            "type": "boolean"
                          },
                          "slave": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "ntp": {
                      "properties": {
                        "servers": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "platform": {
                      "properties": {
                        "product": {
                          "type": "string"
                        },
                        "serial": {
                          "type": "string"
                        },
                        "vendor": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "proxy": {
                      "properties": {
                        "http_proxy": {
                          "type": "string"
                        },
                        "https_proxy": {
                          "type": "string"
                        },
                        "https_proxy_password": {
                          "type": "string"
                        },
                        "https_proxy_username": {
                          "type": "string"
                        },
                        "no_proxy": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CiscoDNACenterPackagesSummaryResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CiscoDNACenterReleaseSummaryResponse": {
        "properties": {
          "response": {
            "properties": {
              "corePackages": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "installedVersion": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "packages": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "supportedDirectUpdates": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "systemVersion": {
                "type": "string"
              },
              "tenantId": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimDeviceRequest": {
        "properties": {
          "configFileUrl": {
            "type": "string"
          },
          "configId": {
            "type": "string"
          },
          "deviceClaimList": {
            "items": {
              "properties": {
                "configList": {
                  "items": {
                    "properties": {
                      "configId": {
                        "type": "string"
                      },
                      "configParameters": {
                        "items": {
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "deviceId": {
                  "type": "string"
                },
                "licenseLevel": {
                  "type": "string"
                },
                "licenseType": {
                  "type": "string"
                },
                "topOfStackSerialNumber": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "fileServiceId": {
            "type": "string"
          },
          "imageId": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "populateInventory": {
            "type": "boolean"
          },
          "projectId": {
            "type": "string"
          },
          "workflowId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimDeviceResponse": {
        "properties": {
          "jsonArrayResponse": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "jsonResponse": {
            "properties": {},
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "ClearMacAddressTableRequest": {
        "properties": {
          "operation": {
            "type": "string"
          },
          "payload": {
            "properties": {},
            "type": "object"
          }
        },
        "type": "object"
      },
      "ClearMacAddressTableResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClientProximityResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CmdbEndpoint": {
        "items": {
          "properties": {
            "assetTag": {
              "type": "string"
            },
            "department": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "lastUpdateTimestamp": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "macAddress": {
              "type": "string"
            },
            "managedBy": {
              "type": "string"
            },
            "model": {
              "type": "string"
            },
            "modelCategory": {
              "type": "string"
            },
            "serialNumber": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "CommandRunnerDTO": {
        "properties": {
          "commands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "type": "string"
          },
          "deviceUuids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "timeout": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ComplianceDetailsOfDeviceResponse": {
        "properties": {
          "deviceUuid": {
            "type": "string"
          },
          "response": {
            "items": {
              "properties": {
                "additionalDataURL": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "complianceType": {
                  "type": "string"
                },
                "deviceUuid": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "lastSyncTime": {
                  "type": "string"
                },
                "lastUpdateTime": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "sourceInfoList": {
                  "items": {
                    "properties": {
                      "appName": {
                        "type": "string"
                      },
                      "businessKey": {
                        "properties": {
                          "businessKeyAttributes": {
                            "type": "string"
                          },
                          "otherAttributes": {
                            "properties": {
                              "cfsAttributes": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "resourceName": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "count": {
                        "type": "number"
                      },
                      "diffList": {
                        "items": {
                          "properties": {
                            "businessKey": {
                              "type": "string"
                            },
                            "configuredValue": {
                              "type": "string"
                            },
                            "displayName": {
                              "type": "string"
                            },
                            "extendedAttributes": {
                              "type": "string"
                            },
                            "intendedValue": {
                              "type": "string"
                            },
                            "moveFromPath": {
                              "type": "string"
                            },
                            "op": {
                              "type": "string"
                            },
                            "path": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "displayName": {
                        "type": "string"
                      },
                      "licenseAppName": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "nameWithBusinessKey": {
                        "type": "string"
                      },
                      "networkProfileName": {
                        "type": "string"
                      },
                      "provisioningArea": {
                        "type": "string"
                      },
                      "sourceEnum": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "state": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConfigureAccessPointsRequest": {
        "properties": {
          "adminStatus": {
            "type": "boolean"
          },
          "apHeight": {
            "type": "number"
          },
          "apList": {
            "items": {
              "properties": {
                "apName": {
                  "type": "string"
                },
                "apNameNew": {
                  "type": "string"
                },
                "macAddress": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "apMode": {
            "type": "integer"
          },
          "configureAdminStatus": {
            "type": "boolean"
          },
          "configureApHeight": {
            "type": "boolean"
          },
          "configureApMode": {
            "type": "boolean"
          },
          "configureFailoverPriority": {
            "type": "boolean"
          },
          "configureHAController": {
            "type": "boolean"
          },
          "configureLedBrightnessLevel": {
            "type": "boolean"
          },
          "configureLedStatus": {
            "type": "boolean"
          },
          "configureLocation": {
            "type": "boolean"
          },
          "failoverPriority": {
            "type": "integer"
          },
          "ledBrightnessLevel": {
            "type": "integer"
          },
          "ledStatus": {
            "type": "boolean"
          },
          "location": {
            "type": "string"
          },
          "primaryControllerName": {
            "type": "string"
          },
          "primaryIpAddress": {
            "properties": {
              "address": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "radioConfigurations": {
            "items": {
              "properties": {
                "adminStatus": {
                  "type": "boolean"
                },
                "antennaCableName": {
                  "type": "string"
                },
                "antennaDegree": {
                  "type": "integer"
                },
                "antennaElevAngleDegree": {
                  "type": "integer"
                },
                "antennaElevAngleSign": {
                  "type": "integer"
                },
                "antennaGain": {
                  "type": "integer"
                },
                "antennaPatternName": {
                  "type": "string"
                },
                "cableLoss": {
                  "type": "number"
                },
                "channelAssignmentMode": {
                  "type": "integer"
                },
                "channelNumber": {
                  "type": "integer"
                },
                "channelWidth": {
                  "type": "integer"
                },
                "cleanAirSI": {
                  "type": "integer"
                },
                "configureAdminStatus": {
                  "type": "boolean"
                },
                "configureAntennaCable": {
                  "type": "boolean"
                },
                "configureAntennaDegree": {
                  "type": "boolean"
                },
                "configureAntennaPatternName": {
                  "type": "boolean"
                },
                "configureChannel": {
                  "type": "boolean"
                },
                "configureChannelWidth": {
                  "type": "boolean"
                },
                "configureCleanAirSI": {
                  "type": "boolean"
                },
                "configureElevAngleDegree": {
                  "type": "boolean"
                },
                "configurePower": {
                  "type": "boolean"
                },
                "configureRadioRoleAssignment": {
                  "type": "boolean"
                },
                "powerAssignmentMode": {
                  "type": "integer"
                },
                "powerlevel": {
                  "type": "integer"
                },
                "radioBand": {
                  "enum": [
                    "RADIO24",
                    "RADIO5"
                  ],
                  "type": "string"
                },
                "radioRoleAssignment": {
                  "enum": [
                    "auto",
                    "serving",
                    "monitor"
                  ],
                  "type": "string"
                },
                "radioType": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "secondaryControllerName": {
            "type": "string"
          },
          "secondaryIpAddress": {
            "properties": {
              "address": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "tertiaryControllerName": {
            "type": "string"
          },
          "tertiaryIpAddress": {
            "properties": {
              "address": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "ConfigureAccessPointsResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CountOfEventSubscriptionsResponse": {
        "properties": {
          "response": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "CountOfEventsResponse": {
        "properties": {
          "response": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "CountOfNotificationsResponse": {
        "properties": {
          "response": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CountResponse": {
        "properties": {
          "count": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CountResult": {
        "properties": {
          "response": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateAndProvisionSSIDRequest": {
        "properties": {
          "enableFabric": {
            "type": "boolean"
          },
          "flexConnect": {
            "properties": {
              "enableFlexConnect": {
                "type": "boolean"
              },
              "localToVlan": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "managedAPLocations": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ssidDetails": {
            "properties": {
              "aaaOverride": {
                "type": "boolean"
              },
              "clientRateLimit": {
                "type": "number"
              },
              "coverageHoleDetectionEnable": {
                "type": "boolean"
              },
              "enableBroadcastSSID": {
                "type": "boolean"
              },
              "enableFastLane": {
                "type": "boolean"
              },
              "enableMACFiltering": {
                "type": "boolean"
              },
              "fastTransition": {
                "enum": [
                  "Adaptive",
                  "Enable",
                  "Disable"
                ],
                "type": "string"
              },
              "multiPSKSettings": {
                "items": {
                  "properties": {
                    "passphrase": {
                      "type": "string"
                    },
                    "passphraseType": {
                      "enum": [
                        "ASCII",
                        "HEX"
                      ],
                      "type": "string"
                    },
                    "priority": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "passphrase": {
                "type": "string"
              },
              "policyProfileName": {
                "type": "string"
              },
              "profileName": {
                "type": "string"
              },
              "protectedManagementFrame": {
                "enum": [
                  "Optional",
                  "Disabled",
                  "Required"
                ],
                "type": "string"
              },
              "radioPolicy": {
                "enum": [
                  "Triple band operation (2.4GHz, 5GHz and 6GHz)",
                  "Triple band operation with band select",
                  "5GHz only",
                  "2.4GHz only",
                  "6GHz only"
                ],
                "type": "string"
              },
              "securityLevel": {
                "enum": [
                  "WPA2_ENTERPRISE",
                  "WPA2_PERSONAL",
                  "OPEN",
                  "WEB_AUTH",
                  "WPA3_ENTERPRISE",
                  "WPA3_PERSONAL",
                  "WPA2_WPA3_PERSONAL",
                  "WPA2_WPA3_ENTERPRISE"
                ],
                "type": "string"
              },
              "trafficType": {
                "enum": [
                  "data",
                  "voicedata"
                ],
                "type": "string"
              },
              "webAuthURL": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "ssidType": {
            "enum": [
              "Guest",
              "Enterprise"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateAndProvisionSSIDResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateApplicationPolicyQueuingProfileRequest": {
        "items": {
          "properties": {
            "clause": {
              "items": {
                "properties": {
                  "interfaceSpeedBandwidthClauses": {
                    "items": {
                      "properties": {
                        "interfaceSpeed": {
                          "enum": [
                            "ALL",
                            "HUNDRED_GBPS",
                            "TEN_GBPS",
                            "ONE_GBPS",
                            "HUNDRED_MBPS",
                            "TEN_MBPS",
                            "ONE_MBPS"
                          ],
                          "type": "string"
                        },
                        "tcBandwidthSettings": {
                          "items": {
                            "properties": {
                              "bandwidthPercentage": {
                                "type": "integer"
                              },
                              "trafficClass": {
                                "enum": [
                                  "BROADCAST_VIDEO",
                                  "REAL_TIME_INTERACTIVE",
                                  "VOIP_TELEPHONY",
                                  "SCAVENGER",
                                  "TRANSACTIONAL_DATA",
                                  "MULTIMEDIA_CONFERENCING",
                                  "NETWORK_CONTROL",
                                  "MULTIMEDIA_STREAMING",
                                  "BEST_EFFORT",
                                  "SIGNALING",
                                  "BULK_DATA",
                                  "OPS_ADMIN_MGMT"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "isCommonBetweenAllInterfaceSpeeds": {
                    "type": "boolean"
                  },
                  "tcDscpSettings": {
                    "items": {
                      "properties": {
                        "dscp": {
                          "type": "string"
                        },
                        "trafficClass": {
                          "enum": [
                            "BROADCAST_VIDEO",
                            "REAL_TIME_INTERACTIVE",
                            "VOIP_TELEPHONY",
                            "SCAVENGER",
                            "TRANSACTIONAL_DATA",
                            "MULTIMEDIA_CONFERENCING",
                            "NETWORK_CONTROL",
                            "MULTIMEDIA_STREAMING",
                            "BEST_EFFORT",
                            "SIGNALING",
                            "BULK_DATA",
                            "OPS_ADMIN_MGMT"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "type": {
                    "enum": [
                      "BANDWIDTH",
                      "DSCP_CUSTOMIZATION"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "description": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "CreateApplicationPolicyQueuingProfileResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateApplicationRequest": {
        "items": {
          "properties": {
            "applicationSet": {
              "properties": {
                "idRef": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "networkApplications": {
              "items": {
                "properties": {
                  "appProtocol": {
                    "type": "string"
                  },
                  "applicationSubType": {
                    "type": "string"
                  },
                  "applicationType": {
                    "type": "string"
                  },
                  "categoryId": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "dscp": {
                    "type": "string"
                  },
                  "engineId": {
                    "type": "string"
                  },
                  "helpString": {
                    "type": "string"
                  },
                  "ignoreConflict": {
                    "type": "string"
                  },
                  "longDescription": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "popularity": {
                    "type": "string"
                  },
                  "rank": {
                    "type": "string"
                  },
                  "serverName": {
                    "type": "string"
                  },
                  "trafficClass": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "networkIdentity": {
              "items": {
                "properties": {
                  "displayName": {
                    "type": "string"
                  },
                  "lowerPort": {
                    "type": "string"
                  },
                  "ports": {
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "upperPort": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "CreateApplicationResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateApplicationSetRequest": {
        "items": {
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "CreateApplicationSetResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateDeviceCredentialsRequest": {
        "properties": {
          "settings": {
            "properties": {
              "cliCredential": {
                "items": {
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "enablePassword": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "httpsRead": {
                "items": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "port": {
                      "type": "number"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "httpsWrite": {
                "items": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "port": {
                      "type": "number"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "snmpV2cRead": {
                "items": {
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "readCommunity": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "snmpV2cWrite": {
                "items": {
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "writeCommunity": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "snmpV3": {
                "items": {
                  "properties": {
                    "authPassword": {
                      "type": "string"
                    },
                    "authType": {
                      "enum": [
                        "SHA",
                        "MD5"
                      ],
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "privacyPassword": {
                      "type": "string"
                    },
                    "privacyType": {
                      "enum": [
                        "AES128",
                        "DES"
                      ],
                      "type": "string"
                    },
                    "snmpMode": {
                      "enum": [
                        "AUTHPRIV",
                        "AUTHNOPRIV",
                        "NOAUTHNOPRIV"
                      ],
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "CreateDeviceCredentialsResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateEmailConfiguration": {
        "properties": {
          "emailConfigId": {
            "type": "string"
          },
          "fromEmail": {
            "type": "string"
          },
          "primarySMTPConfig": {
            "properties": {
              "hostName": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "userName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "secondarySMTPConfig": {
            "properties": {
              "hostName": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "userName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "subject": {
            "type": "string"
          },
          "toEmail": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateEmailDestinationResponse": {
        "properties": {
          "statusUri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateEmailEventSubscription": {
        "items": {
          "properties": {
            "description": {
              "type": "string"
            },
            "filter": {
              "properties": {
                "categories": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "domainsSubdomains": {
                  "items": {
                    "properties": {
                      "domain": {
                        "type": "string"
                      },
                      "subDomains": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "eventIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "severities": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "siteIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sources": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "subscriptionEndpoints": {
              "items": {
                "properties": {
                  "instanceId": {
                    "type": "string"
                  },
                  "subscriptionDetails": {
                    "properties": {
                      "connectorType": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "fromEmailAddress": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "subject": {
                        "type": "string"
                      },
                      "toEmailAddresses": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "subscriptionId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "CreateEmailEventSubscriptionResponse": {
        "properties": {
          "statusUri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateEnterpriseSSIDRequest": {
        "properties": {
          "aaaOverride": {
            "type": "boolean"
          },
          "basicServiceSetClientIdleTimeout": {
            "type": "integer"
          },
          "clientExclusionTimeout": {
            "type": "integer"
          },
          "clientRateLimit": {
            "type": "number"
          },
          "coverageHoleDetectionEnable": {
            "type": "boolean"
          },
          "enableBasicServiceSetMaxIdle": {
            "type": "boolean"
          },
          "enableBroadcastSSID": {
            "type": "boolean"
          },
          "enableClientExclusion": {
            "type": "boolean"
          },
          "enableDirectedMulticastService": {
            "type": "boolean"
          },
          "enableFastLane": {
            "type": "boolean"
          },
          "enableMACFiltering": {
            "type": "boolean"
          },
          "enableNeighborList": {
            "type": "boolean"
          },
          "enableSessionTimeOut": {
            "type": "boolean"
          },
          "fastTransition": {
            "enum": [
              "Adaptive",
              "Enable",
              "Disable"
            ],
            "type": "string"
          },
          "mfpClientProtection": {
            "enum": [
              "Optional",
              "Disabled",
              "Required"
            ],
            "type": "string"
          },
          "multiPSKSettings": {
            "items": {
              "properties": {
                "passphrase": {
                  "type": "string"
                },
                "passphraseType": {
                  "enum": [
                    "ASCII",
                    "HEX"
                  ],
                  "type": "string"
                },
                "priority": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "nasOptions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "passphrase": {
            "type": "string"
          },
          "policyProfileName": {
            "type": "string"
          },
          "profileName": {
            "type": "string"
          },
          "protectedManagementFrame": {
            "enum": [
              "Optional",
              "Disabled",
              "Required"
            ],
            "type": "string"
          },
          "radioPolicy": {
            "enum": [
              "Triple band operation (2.4GHz, 5GHz and 6GHz)",
              "Triple band operation with band select",
              "5GHz only",
              "2.4GHz only",
              "6GHz only"
            ],
            "type": "string"
          },
          "securityLevel": {
            "enum": [
              "WPA2_ENTERPRISE",
              "WPA2_PERSONAL",
              "OPEN",
              "WPA3_ENTERPRISE",
              "WPA3_PERSONAL",
              "WPA2_WPA3_PERSONAL",
              "WPA2_WPA3_ENTERPRISE"
            ],
            "type": "string"
          },
          "sessionTimeOut": {
            "type": "integer"
          },
          "trafficType": {
            "enum": [
              "voicedata",
              "data"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateEnterpriseSSIDResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateEventSubscriptionsRequest": {
        "items": {
          "properties": {
            "description": {
              "type": "string"
            },
            "filter": {
              "properties": {
                "categories": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "domainsSubdomains": {
                  "items": {
                    "properties": {
                      "domain": {
                        "type": "string"
                      },
                      "subDomains": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "eventIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "severities": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "siteIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sources": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "subscriptionEndpoints": {
              "items": {
                "properties": {
                  "instanceId": {
                    "type": "string"
                  },
                  "subscriptionDetails": {
                    "properties": {
                      "connectorType": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "subscriptionId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "CreateEventSubscriptionsResponse": {
        "properties": {
          "statusUri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateGlobalCredentialsVRequest": {
        "properties": {
          "cliCredential": {
            "items": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "enablePassword": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "httpsRead": {
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "httpsWrite": {
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "snmpV2cRead": {
            "items": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "readCommunity": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "snmpV2cWrite": {
            "items": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "writeCommunity": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "snmpV3": {
            "items": {
              "properties": {
                "authPassword": {
                  "type": "string"
                },
                "authType": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "privacyPassword": {
                  "type": "string"
                },
                "privacyType": {
                  "type": "string"
                },
                "snmpMode": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateGlobalCredentialsVResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateGlobalPoolRequest": {
        "properties": {
          "settings": {
            "properties": {
              "ippool": {
                "items": {
                  "properties": {
                    "IpAddressSpace": {
                      "enum": [
                        "IPv6 or IPv4"
                      ],
                      "type": "string"
                    },
                    "dhcpServerIps": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "dnsServerIps": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "gateway": {
                      "type": "string"
                    },
                    "ipPoolCidr": {
                      "type": "string"
                    },
                    "ipPoolName": {
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "Generic",
                        "Tunnel"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "CreateGlobalPoolResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateITSMIntegrationSettingRequest": {
        "properties": {
          "data": {
            "properties": {
              "ConnectionSettings": {
                "properties": {
                  "Auth_Password": {
                    "type": "string"
                  },
                  "Auth_UserName": {
                    "type": "string"
                  },
                  "Url": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "dypName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateITSMIntegrationSettingResponse": {
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "integer"
          },
          "data": {
            "properties": {
              "ConnectionSettings": {
                "properties": {
                  "Auth_Password": {
                    "type": "string"
                  },
                  "Auth_UserName": {
                    "type": "string"
                  },
                  "Url": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "dypId": {
            "type": "string"
          },
          "dypMajorVersion": {
            "type": "integer"
          },
          "dypName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "schemaVersion": {
            "type": "number"
          },
          "softwareVersionLog": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "tenantId": {
            "type": "string"
          },
          "uniqueKey": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateNFVProfileRequest": {
        "properties": {
          "device": {
            "items": {
              "properties": {
                "customNetworks": {
                  "items": {
                    "properties": {
                      "connectionType": {
                        "enum": [
                          "wan-net",
                          "wan2-net",
                          "lan-net",
                          "mgmt-net",
                          "service-net",
                          "GEO-2-1",
                          "GEO-2-2",
                          "GEO-3-1",
                          "GEO-3-2",
                          "SRIOV-1",
                          "SRIOV-2",
                          "SRIOV-3",
                          "SRIOV-4",
                          "SRIOV-5",
                          "SRIOV-6"
                        ],
                        "type": "string"
                      },
                      "networkName": {
                        "type": "string"
                      },
                      "servicesToConnect": {
                        "items": {
                          "properties": {
                            "serviceName": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "vlanId": {
                        "type": "number"
                      },
                      "vlanMode": {
                        "enum": [
                          "trunk",
                          "Access"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "customTemplate": {
                  "items": {
                    "properties": {
                      "deviceType": {
                        "enum": [
                          "Cisco 5400 Enterprise Network Compute System",
                          "Cisco Integrated Services Virtual Router",
                          "Cisco Adaptive Security Virtual Appliance (ASAv)",
                          "NFVIS",
                          "ASAV"
                        ],
                        "type": "string"
                      },
                      "template": {
                        "type": "string"
                      },
                      "templateType": {
                        "enum": [
                          "Onboarding Template(s)",
                          "Day-N-Template(s)"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "deviceTag": {
                  "type": "string"
                },
                "deviceType": {
                  "enum": [
                    "Cisco 5400 Enterprise Network Compute System",
                    "Cisco 5100 Enterprise Network Compute System"
                  ],
                  "type": "string"
                },
                "directInternetAccessForFirewall": {
                  "type": "boolean"
                },
                "serviceProviderProfile": {
                  "items": {
                    "properties": {
                      "connect": {
                        "type": "boolean"
                      },
                      "connectDefaultGatewayOnWan": {
                        "type": "boolean"
                      },
                      "linkType": {
                        "enum": [
                          "GigabitEthernet",
                          "Cellular"
                        ],
                        "type": "string"
                      },
                      "serviceProvider": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "services": {
                  "items": {
                    "properties": {
                      "firewallMode": {
                        "enum": [
                          "routed",
                          "transparent"
                        ],
                        "type": "string"
                      },
                      "imageName": {
                        "type": "string"
                      },
                      "profileType": {
                        "enum": [
                          "ASAv5",
                          "ASAv30",
                          "ISRv-mini",
                          "ISRv-medium",
                          "ISRv-small",
                          "riverbed-small",
                          "sp-small",
                          "rehel7-medium",
                          "vEdge-samll",
                          "vwaas-200-original",
                          "vwaas-150-original",
                          "vWASS-6000R-Resized",
                          "vWASS-1300-Original",
                          "vWASS-50000-Original",
                          "vCM-100",
                          "vWASS-6000R-Original",
                          "vWASS-750-Original",
                          "vWASS-1300-Resized",
                          "vWASS-2500-Original",
                          "vCM-500",
                          "vCM-2000",
                          "vWASS-6000-Resized",
                          "vWASS-6000-Original",
                          "vCM-1000",
                          "vWASS-750-Resized",
                          "vWASS-200-Resized",
                          "vWASS-12000-Original",
                          "vWASS-150-Resized",
                          "vWASS-12000-Resized",
                          "vWASS-2500-Resized",
                          "vWASS-50000-Resized"
                        ],
                        "type": "string"
                      },
                      "serviceName": {
                        "type": "string"
                      },
                      "serviceType": {
                        "enum": [
                          "isr",
                          "vedge",
                          "waas",
                          "asa",
                          "ngfw",
                          "paloalto",
                          "fortinet",
                          "checkpoint",
                          "riverbed",
                          "silverpeak",
                          "linux"
                        ],
                        "type": "string"
                      },
                      "vNicMapping": {
                        "items": {
                          "properties": {
                            "assignIpAddressToNetwork": {
                              "type": "string"
                            },
                            "networkType": {
                              "enum": [
                                "wan-net",
                                "wan2-net",
                                "lan-net",
                                "mgmt-net",
                                "service-net",
                                "GEO-0",
                                "GEO-1",
                                "GEO-2-1",
                                "GEO-2-2",
                                "GEO-3-1",
                                "GEO-3-2",
                                "SRIOV-1",
                                "SRIOV-2",
                                "SRIOV-3",
                                "SRIOV-4",
                                "SRIOV-5",
                                "SRIOV-6"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "vlanForL2": {
                  "items": {
                    "properties": {
                      "vlanDescription": {
                        "type": "string"
                      },
                      "vlanId": {
                        "type": "number"
                      },
                      "vlanType": {
                        "enum": [
                          "access",
                          "trunk"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "profileName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateNFVProfileResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateNetworkRequest": {
        "properties": {
          "settings": {
            "properties": {
              "clientAndEndpoint_aaa": {
                "properties": {
                  "servers": {
                    "type": "string"
                  },
                  "ipAddress": {
                    "enum": [
                      "Mandatory for ISE servers."
                    ],
                    "type": "string"
                  },
                  "network": {
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "sharedSecret": {
                    "enum": [
                      "Supported only by ISE servers"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "dhcpServer": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "dnsServer": {
                "properties": {
                  "domainName": {
                    "enum": [
                      "can only contain alphanumeric characters or hyphen"
                    ],
                    "type": "string"
                  },
                  "primaryIpAddress": {
                    "enum": [
                      "valid range : 1.0.0.0 - 223.255.255.255"
                    ],
                    "type": "string"
                  },
                  "secondaryIpAddress": {
                    "enum": [
                      "valid range : 1.0.0.0 - 223.255.255.255"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "messageOfTheday": {
                "properties": {
                  "bannerMessage": {
                    "type": "string"
                  },
                  "retainExistingBanner": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "netflowcollector": {
                "properties": {
                  "ipAddress": {
                    "type": "string"
                  },
                  "port": {
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "network_aaa": {
                "properties": {
                  "servers": {
                    "enum": [
                      "Server type supported by ISE and AAA"
                    ],
                    "type": "string"
                  },
                  "ipAddress": {
                    "enum": [
                      "Mandatory for ISE servers and for AAA consider this as additional IP."
                    ],
                    "type": "string"
                  },
                  "network": {
                    "enum": [
                      "For AAA server consider it as primary IP and For ISE consider as Network"
                    ],
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "sharedSecret": {
                    "enum": [
                      "Supported only by ISE Servers"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "ntpServer": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "snmpServer": {
                "properties": {
                  "configureDnacIP": {
                    "type": "boolean"
                  },
                  "ipAddresses": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "syslogServer": {
                "properties": {
                  "configureDnacIP": {
                    "type": "boolean"
                  },
                  "ipAddresses": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "timezone": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "CreateNetworkResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateNetworkVRequest": {
        "properties": {
          "settings": {
            "properties": {
              "clientAndEndpoint_aaa": {
                "properties": {
                  "servers": {
                    "type": "string"
                  },
                  "ipAddress": {
                    "enum": [
                      "Mandatory for ISE servers."
                    ],
                    "type": "string"
                  },
                  "network": {
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "sharedSecret": {
                    "enum": [
                      "Supported only by ISE servers"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "dhcpServer": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "dnsServer": {
                "properties": {
                  "domainName": {
                    "enum": [
                      "can only contain alphanumeric characters or hyphen"
                    ],
                    "type": "string"
                  },
                  "primaryIpAddress": {
                    "enum": [
                      "valid range : 1.0.0.0 - 223.255.255.255"
                    ],
                    "type": "string"
                  },
                  "secondaryIpAddress": {
                    "enum": [
                      "valid range : 1.0.0.0 - 223.255.255.255"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "messageOfTheday": {
                "properties": {
                  "bannerMessage": {
                    "type": "string"
                  },
                  "retainExistingBanner": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "netflowcollector": {
                "properties": {
                  "ipAddress": {
                    "type": "string"
                  },
                  "port": {
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "network_aaa": {
                "properties": {
                  "servers": {
                    "enum": [
                      "Server type supported by ISE and AAA"
                    ],
                    "type": "string"
                  },
                  "ipAddress": {
                    "enum": [
                      "Mandatory for ISE servers and for AAA consider this as additional IP."
                    ],
                    "type": "string"
                  },
                  "network": {
                    "enum": [
                      "For AAA server consider it as primary IP and For ISE consider as Network"
                    ],
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "sharedSecret": {
                    "enum": [
                      "Supported only by ISE Servers"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "ntpServer": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "snmpServer": {
                "properties": {
                  "configureDnacIP": {
                    "type": "boolean"
                  },
                  "ipAddresses": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "syslogServer": {
                "properties": {
                  "configureDnacIP": {
                    "type": "boolean"
                  },
                  "ipAddresses": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "timezone": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "CreateNetworkVResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateOrUpdateRFProfileRequest": {
        "properties": {
          "channelWidth": {
            "type": "string"
          },
          "defaultRfProfile": {
            "type": "boolean"
          },
          "enableBrownField": {
            "type": "boolean"
          },
          "enableCustom": {
            "type": "boolean"
          },
          "enableRadioTypeA": {
            "type": "boolean"
          },
          "enableRadioTypeB": {
            "type": "boolean"
          },
          "enableRadioTypeC": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "radioTypeAProperties": {
            "properties": {
              "dataRates": {
                "type": "string"
              },
              "mandatoryDataRates": {
                "type": "string"
              },
              "maxPowerLevel": {
                "type": "number"
              },
              "minPowerLevel": {
                "type": "number"
              },
              "parentProfile": {
                "type": "string"
              },
              "powerThresholdV1": {
                "type": "number"
              },
              "radioChannels": {
                "type": "string"
              },
              "rxSopThreshold": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "radioTypeBProperties": {
            "properties": {
              "dataRates": {
                "type": "string"
              },
              "mandatoryDataRates": {
                "type": "string"
              },
              "maxPowerLevel": {
                "type": "number"
              },
              "minPowerLevel": {
                "type": "number"
              },
              "parentProfile": {
                "type": "string"
              },
              "powerThresholdV1": {
                "type": "number"
              },
              "radioChannels": {
                "type": "string"
              },
              "rxSopThreshold": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "radioTypeCProperties": {
            "properties": {
              "dataRates": {
                "type": "string"
              },
              "mandatoryDataRates": {
                "type": "string"
              },
              "maxPowerLevel": {
                "type": "number"
              },
              "minPowerLevel": {
                "type": "number"
              },
              "parentProfile": {
                "type": "string"
              },
              "powerThresholdV1": {
                "type": "number"
              },
              "radioChannels": {
                "type": "string"
              },
              "rxSopThreshold": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "CreateOrUpdateRFProfileResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateQosDeviceInterfaceInfoRequest": {
        "items": {
          "properties": {
            "excludedInterfaces": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "name": {
              "type": "string"
            },
            "networkDeviceId": {
              "type": "string"
            },
            "qosDeviceInterfaceInfo": {
              "items": {
                "properties": {
                  "dmvpnRemoteSitesBw": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "interfaceId": {
                    "type": "string"
                  },
                  "interfaceName": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  },
                  "role": {
                    "enum": [
                      "WAN",
                      "DMVPN_HUB",
                      "DMVPN_SPOKE"
                    ],
                    "type": "string"
                  },
                  "uploadBW": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "CreateQosDeviceInterfaceInfoResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateResponse": {
        "properties": {
          "id": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateRestWebhookEventSubscription": {
        "items": {
          "properties": {
            "description": {
              "type": "string"
            },
            "filter": {
              "properties": {
                "categories": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "domainsSubdomains": {
                  "items": {
                    "properties": {
                      "domain": {
                        "type": "string"
                      },
                      "subDomains": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "eventIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "severities": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "siteIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sources": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "subscriptionEndpoints": {
              "items": {
                "properties": {
                  "instanceId": {
                    "type": "string"
                  },
                  "subscriptionDetails": {
                    "properties": {
                      "connectorType": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "subscriptionId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "CreateRestWebhookEventSubscriptionResponse": {
        "properties": {
          "statusUri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateSPProfileRequest": {
        "properties": {
          "settings": {
            "properties": {
              "qos": {
                "items": {
                  "properties": {
                    "model": {
                      "type": "string"
                    },
                    "profileName": {
                      "type": "string"
                    },
                    "wanProvider": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "CreateSPProfileResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateSPProfileVRequest": {
        "properties": {
          "settings": {
            "properties": {
              "qos": {
                "items": {
                  "properties": {
                    "model": {
                      "type": "string"
                    },
                    "profileName": {
                      "type": "string"
                    },
                    "wanProvider": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "CreateSPProfileVResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateSensorTestTemplateRequest": {
        "properties": {
          "apCoverage": {
            "items": {
              "properties": {
                "bands": {
                  "type": "string"
                },
                "numberOfApsToTest": {
                  "type": "string"
                },
                "rssiThreshold": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "connection": {
            "type": "string"
          },
          "modelVersion": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "ssids": {
            "items": {
              "properties": {
                "authType": {
                  "type": "string"
                },
                "categories": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "profileName": {
                  "type": "string"
                },
                "psk": {
                  "type": "string"
                },
                "qosPolicy": {
                  "type": "string"
                },
                "ssid": {
                  "type": "string"
                },
                "tests": {
                  "items": {
                    "properties": {
                      "config": {
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "thirdParty": {
                  "properties": {
                    "selected": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateSensorTestTemplateResponse": {
        "properties": {
          "response": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "apCoverage": {
                "items": {
                  "properties": {
                    "bands": {
                      "type": "string"
                    },
                    "numberOfApsToTest": {
                      "type": "integer"
                    },
                    "rssiThreshold": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "connection": {
                "type": "string"
              },
              "encryptionMode": {
                "type": "string"
              },
              "frequency": {
                "properties": {},
                "type": "object"
              },
              "lastModifiedTime": {
                "type": "number"
              },
              "legacyTestSuite": {
                "type": "boolean"
              },
              "location": {
                "properties": {},
                "type": "object"
              },
              "locationInfoList": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "modelVersion": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "numAssociatedSensor": {
                "type": "number"
              },
              "numNeighborAPThreshold": {
                "type": "integer"
              },
              "radioAsSensorRemoved": {
                "type": "boolean"
              },
              "rssiThreshold": {
                "type": "integer"
              },
              "runNow": {
                "type": "string"
              },
              "schedule": {
                "properties": {},
                "type": "object"
              },
              "scheduleInDays": {
                "type": "number"
              },
              "sensors": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "showWlcUpgradeBanner": {
                "type": "boolean"
              },
              "siteHierarchy": {
                "properties": {},
                "type": "object"
              },
              "ssids": {
                "items": {
                  "properties": {
                    "authProtocol": {
                      "properties": {},
                      "type": "object"
                    },
                    "authType": {
                      "type": "string"
                    },
                    "authTypeRcvd": {
                      "properties": {},
                      "type": "object"
                    },
                    "bands": {
                      "properties": {},
                      "type": "object"
                    },
                    "certdownloadurl": {
                      "properties": {},
                      "type": "object"
                    },
                    "certfilename": {
                      "properties": {},
                      "type": "object"
                    },
                    "certpassphrase": {
                      "properties": {},
                      "type": "object"
                    },
                    "certstatus": {
                      "type": "string"
                    },
                    "certxferprotocol": {
                      "type": "string"
                    },
                    "eapMethod": {
                      "properties": {},
                      "type": "object"
                    },
                    "extWebAuth": {
                      "type": "boolean"
                    },
                    "extWebAuthAccessUrl": {
                      "properties": {},
                      "type": "object"
                    },
                    "extWebAuthHtmlTag": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "extWebAuthPortal": {
                      "properties": {},
                      "type": "object"
                    },
                    "extWebAuthVirtualIp": {
                      "properties": {},
                      "type": "object"
                    },
                    "id": {
                      "type": "number"
                    },
                    "layer3webAuthEmailAddress": {
                      "properties": {},
                      "type": "object"
                    },
                    "layer3webAuthpassword": {
                      "properties": {},
                      "type": "object"
                    },
                    "layer3webAuthsecurity": {
                      "properties": {},
                      "type": "object"
                    },
                    "layer3webAuthuserName": {
                      "properties": {},
                      "type": "object"
                    },
                    "numAps": {
                      "type": "number"
                    },
                    "numSensors": {
                      "type": "number"
                    },
                    "password": {
                      "properties": {},
                      "type": "object"
                    },
                    "profileName": {
                      "type": "string"
                    },
                    "psk": {
                      "type": "string"
                    },
                    "qosPolicy": {
                      "type": "string"
                    },
                    "scep": {
                      "type": "boolean"
                    },
                    "ssid": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "tests": {
                      "items": {
                        "properties": {
                          "config": {
                            "items": {
                              "properties": {},
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "thirdParty": {
                      "properties": {
                        "selected": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "username": {
                      "properties": {},
                      "type": "object"
                    },
                    "validFrom": {
                      "type": "number"
                    },
                    "validTo": {
                      "type": "number"
                    },
                    "whiteList": {
                      "type": "boolean"
                    },
                    "wlanId": {
                      "type": "number"
                    },
                    "wlc": {
                      "properties": {},
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "startTime": {
                "type": "number"
              },
              "status": {
                "type": "string"
              },
              "tenantId": {
                "properties": {},
                "type": "object"
              },
              "testDurationEstimate": {
                "type": "integer"
              },
              "testScheduleMode": {
                "type": "string"
              },
              "testTemplate": {
                "type": "boolean"
              },
              "tests": {
                "properties": {},
                "type": "object"
              },
              "version": {
                "type": "number"
              },
              "wlans": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateSiteRequest": {
        "properties": {
          "site": {
            "properties": {
              "area": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "parentName": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "building": {
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "parentName": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "floor": {
                "properties": {
                  "floorNumber": {
                    "type": "number"
                  },
                  "height": {
                    "type": "number"
                  },
                  "length": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "parentName": {
                    "type": "string"
                  },
                  "rfModel": {
                    "enum": [
                      "Cubes And Walled Offices",
                      "Drywall Office Only",
                      "Indoor High Ceiling",
                      "Outdoor Open Space"
                    ],
                    "type": "string"
                  },
                  "width": {
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": {
            "enum": [
              "area",
              "building",
              "floor"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateSiteResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateSyslogConfiguration": {
        "properties": {
          "host": {
            "type": "string"
          },
          "configId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "port": {
            "type": "string"
          },
          "protocol": {
            "enum": [
              "UDP",
              "TCP"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateSyslogDestinationResponse": {
        "properties": {
          "apiStatus": {
            "type": "string"
          },
          "errorMessage": {
            "properties": {
              "errors": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "statusMessage": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateSyslogEventSubscription": {
        "items": {
          "properties": {
            "description": {
              "type": "string"
            },
            "filter": {
              "properties": {
                "categories": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "domainsSubdomains": {
                  "items": {
                    "properties": {
                      "domain": {
                        "type": "string"
                      },
                      "subDomains": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "eventIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "severities": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "siteIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sources": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "subscriptionEndpoints": {
              "items": {
                "properties": {
                  "instanceId": {
                    "type": "string"
                  },
                  "subscriptionDetails": {
                    "properties": {
                      "connectorType": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "subscriptionId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "CreateSyslogEventSubscriptionResponse": {
        "properties": {
          "statusUri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateUpdateDynamicInterfaceRequest": {
        "properties": {
          "interfaceName": {
            "type": "string"
          },
          "vlanId": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "CreateUpdateDynamicInterfaceResponse": {
        "items": {
          "properties": {
            "executionId": {
              "type": "string"
            },
            "executionUrl": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "CreateUserDefinedFieldRequest": {
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateUserDefinedFieldResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateWebhookDestinationResponse": {
        "properties": {
          "apiStatus": {
            "type": "string"
          },
          "errorMessage": {
            "properties": {
              "errors": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "statusMessage": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateWirelessProfileRequest": {
        "properties": {
          "profileDetails": {
            "properties": {
              "name": {
                "type": "string"
              },
              "sites": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "ssidDetails": {
                "items": {
                  "properties": {
                    "enableFabric": {
                      "type": "boolean"
                    },
                    "flexConnect": {
                      "properties": {
                        "enableFlexConnect": {
                          "type": "boolean"
                        },
                        "localToVlan": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "interfaceName": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "policyProfileName": {
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "Guest",
                        "Enterprise"
                      ],
                      "type": "string"
                    },
                    "wlanProfileName": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "CreateWirelessProfileResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreatewebhookConfiguration": {
        "properties": {
          "description": {
            "type": "string"
          },
          "headers": {
            "items": {
              "properties": {
                "defaultValue": {
                  "type": "string"
                },
                "encrypt": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "method": {
            "enum": [
              "POST",
              "PUT"
            ],
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "trustCert": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "webhookId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomPromptPOSTAPIRequest": {
        "properties": {
          "passwordPrompt": {
            "type": "string"
          },
          "usernamePrompt": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomPromptPOSTAPIResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustompromptSupportGETAPIResponse": {
        "properties": {
          "response": {
            "properties": {
              "customPasswordPrompt": {
                "type": "string"
              },
              "customUsernamePrompt": {
                "type": "string"
              },
              "defaultPasswordPrompt": {
                "type": "string"
              },
              "defaultUsernamePrompt": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DRSummaryStatusResponseSchema": {
        "properties": {
          "ipconfig": {
            "items": {
              "properties": {
                "interface": {
                  "enum": [
                    "enterprise",
                    "management"
                  ],
                  "type": "string"
                },
                "ip": {
                  "type": "string"
                },
                "vip": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "ipsec-tunnel": {
            "items": {
              "properties": {
                "side_a": {
                  "type": "string"
                },
                "side_b": {
                  "type": "string"
                },
                "status": {
                  "enum": [
                    "up",
                    "down"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "main": {
            "properties": {
              "ipconfig": {
                "items": {
                  "properties": {
                    "interface": {
                      "enum": [
                        "enterprise",
                        "management"
                      ],
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "vip": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "nodes": {
                "items": {
                  "properties": {
                    "hostname": {
                      "type": "string"
                    },
                    "ipaddresses": {
                      "items": {
                        "properties": {
                          "interface": {
                            "enum": [
                              "enterprise",
                              "management"
                            ],
                            "type": "string"
                          },
                          "ip": {
                            "type": "string"
                          },
                          "vip": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "state": {
                      "enum": [
                        "up",
                        "down",
                        "unknown"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "state": {
                "enum": [
                  "Unregistered",
                  "Registering",
                  "Registered",
                  "RegisterFailed",
                  "Configuring",
                  "Active",
                  "ConfigureFailed",
                  "FailingOver",
                  "StandbyReady",
                  "FailoverFailed",
                  "Standby",
                  "Isolating",
                  "Isolated",
                  "IsolateFailed",
                  "Pausing",
                  "Paused",
                  "PauseFailed",
                  "ActiveStandAlone",
                  "StandbyStandAlone",
                  "Partitioned",
                  "Deregistering",
                  "DeregisterFailed",
                  "Up",
                  "Down"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "recovery": {
            "properties": {
              "ipconfig": {
                "items": {
                  "properties": {
                    "interface": {
                      "enum": [
                        "enterprise",
                        "management"
                      ],
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "vip": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "nodes": {
                "items": {
                  "properties": {
                    "hostname": {
                      "type": "string"
                    },
                    "ipconfig": {
                      "items": {
                        "properties": {
                          "interface": {
                            "enum": [
                              "enterprise",
                              "management"
                            ],
                            "type": "string"
                          },
                          "ip": {
                            "type": "string"
                          },
                          "vip": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "state": {
                      "enum": [
                        "up",
                        "down",
                        "unknown"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "state": {
                "enum": [
                  "Unregistered",
                  "Registering",
                  "Registered",
                  "RegisterFailed",
                  "Configuring",
                  "Active",
                  "ConfigureFailed",
                  "FailingOver",
                  "StandbyReady",
                  "FailoverFailed",
                  "Standby",
                  "Isolating",
                  "Isolated",
                  "IsolateFailed",
                  "Pausing",
                  "Paused",
                  "PauseFailed",
                  "ActiveStandAlone",
                  "StandbyStandAlone",
                  "Partitioned",
                  "Deregistering",
                  "DeregisterFailed",
                  "Up",
                  "Down"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "site": {
            "enum": [
              "main",
              "recovery"
            ],
            "type": "string"
          },
          "state": {
            "enum": [
              "Unconfigured",
              "Registering",
              "Registered",
              "Deregistering",
              "Deregistered",
              "Configuring",
              "ConfigureFailed",
              "Up",
              "FailingOver",
              "FailoverFailed",
              "Pausing",
              "Paused",
              "PauseFailed",
              "Down"
            ],
            "type": "string"
          },
          "witness": {
            "properties": {
              "ipconfig": {
                "items": {
                  "properties": {
                    "interface": {
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "vip": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "nodes": {
                "items": {
                  "properties": {
                    "hostname": {
                      "type": "string"
                    },
                    "ipconfig": {
                      "items": {
                        "properties": {
                          "interface": {
                            "type": "string"
                          },
                          "ip": {
                            "type": "string"
                          },
                          "vip": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "state": {
                      "enum": [
                        "up",
                        "down",
                        "unknown"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "state": {
                "enum": [
                  "Unregistered",
                  "Registering",
                  "Registered",
                  "RegisterFailed",
                  "Up",
                  "Down",
                  "Pausing",
                  "PauseFailed",
                  "Paused",
                  "Deregistering",
                  "DeregisterFailed"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "DayZeroConfigPreviewResult": {
        "properties": {
          "response": {
            "properties": {
              "complete": {
                "type": "boolean"
              },
              "config": {
                "type": "string"
              },
              "error": {
                "type": "boolean"
              },
              "errorMessage": {
                "type": "string"
              },
              "expiredTime": {
                "type": "integer"
              },
              "rfProfile": {
                "type": "string"
              },
              "sensorProfile": {
                "type": "string"
              },
              "siteId": {
                "type": "string"
              },
              "startTime": {
                "type": "integer"
              },
              "taskId": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteAScheduledReportResponse": {
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DeleteApplicationPolicyQueuingProfileRequest": {
        "properties": {},
        "type": "object"
      },
      "DeleteApplicationPolicyQueuingProfileResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteApplicationResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteApplicationSetResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteBorderDeviceFromSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteControlPlaneDeviceInSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteDefaultAuthenticationProfileFromSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteDeviceByIdFromPnPResponse": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "dayZeroConfig": {
            "properties": {
              "config": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dayZeroConfigPreview": {
            "properties": {},
            "type": "object"
          },
          "deviceInfo": {
            "properties": {
              "tags": {
                "properties": {},
                "type": "object"
              },
              "aaaCredentials": {
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "addedOn": {
                "type": "number"
              },
              "addnMacAddrs": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "agentType": {
                "type": "string"
              },
              "authStatus": {
                "type": "string"
              },
              "authenticatedMicNumber": {
                "type": "string"
              },
              "authenticatedSudiSerialNo": {
                "type": "string"
              },
              "capabilitiesSupported": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cmState": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "deviceSudiSerialNos": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "deviceType": {
                "type": "string"
              },
              "featuresSupported": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "fileSystemList": {
                "items": {
                  "properties": {
                    "freespace": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "readable": {
                      "type": "boolean"
                    },
                    "size": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "writeable": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "firstContact": {
                "type": "number"
              },
              "hostname": {
                "type": "string"
              },
              "httpHeaders": {
                "items": {
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "imageFile": {
                "type": "string"
              },
              "imageVersion": {
                "type": "string"
              },
              "ipInterfaces": {
                "items": {
                  "properties": {
                    "ipv4Address": {
                      "properties": {},
                      "type": "object"
                    },
                    "ipv6AddressList": {
                      "items": {
                        "properties": {},
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "macAddress": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "lastContact": {
                "type": "number"
              },
              "lastSyncTime": {
                "type": "number"
              },
              "lastUpdateOn": {
                "type": "number"
              },
              "location": {
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "altitude": {
                    "type": "string"
                  },
                  "latitude": {
                    "type": "string"
                  },
                  "longitude": {
                    "type": "string"
                  },
                  "siteId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "macAddress": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "neighborLinks": {
                "items": {
                  "properties": {
                    "localInterfaceName": {
                      "type": "string"
                    },
                    "localMacAddress": {
                      "type": "string"
                    },
                    "localShortInterfaceName": {
                      "type": "string"
                    },
                    "remoteDeviceName": {
                      "type": "string"
                    },
                    "remoteInterfaceName": {
                      "type": "string"
                    },
                    "remoteMacAddress": {
                      "type": "string"
                    },
                    "remotePlatform": {
                      "type": "string"
                    },
                    "remoteShortInterfaceName": {
                      "type": "string"
                    },
                    "remoteVersion": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "onbState": {
                "type": "string"
              },
              "pid": {
                "type": "string"
              },
              "pnpProfileList": {
                "items": {
                  "properties": {
                    "createdBy": {
                      "type": "string"
                    },
                    "discoveryCreated": {
                      "type": "boolean"
                    },
                    "primaryEndpoint": {
                      "properties": {
                        "certificate": {
                          "type": "string"
                        },
                        "fqdn": {
                          "type": "string"
                        },
                        "ipv4Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "ipv6Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "port": {
                          "type": "number"
                        },
                        "protocol": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "profileName": {
                      "type": "string"
                    },
                    "secondaryEndpoint": {
                      "properties": {
                        "certificate": {
                          "type": "string"
                        },
                        "fqdn": {
                          "type": "string"
                        },
                        "ipv4Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "ipv6Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "port": {
                          "type": "number"
                        },
                        "protocol": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "populateInventory": {
                "type": "boolean"
              },
              "preWorkflowCliOuputs": {
                "items": {
                  "properties": {
                    "cli": {
                      "type": "string"
                    },
                    "cliOutput": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "projectId": {
                "type": "string"
              },
              "projectName": {
                "type": "string"
              },
              "reloadRequested": {
                "type": "boolean"
              },
              "serialNumber": {
                "type": "string"
              },
              "siteId": {
                "type": "string"
              },
              "siteName": {
                "type": "string"
              },
              "smartAccountId": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "stack": {
                "type": "boolean"
              },
              "stackInfo": {
                "properties": {
                  "isFullRing": {
                    "type": "boolean"
                  },
                  "stackMemberList": {
                    "items": {
                      "properties": {
                        "hardwareVersion": {
                          "type": "string"
                        },
                        "licenseLevel": {
                          "type": "string"
                        },
                        "licenseType": {
                          "type": "string"
                        },
                        "macAddress": {
                          "type": "string"
                        },
                        "pid": {
                          "type": "string"
                        },
                        "priority": {
                          "type": "number"
                        },
                        "role": {
                          "type": "string"
                        },
                        "serialNumber": {
                          "type": "string"
                        },
                        "softwareVersion": {
                          "type": "string"
                        },
                        "stackNumber": {
                          "type": "number"
                        },
                        "state": {
                          "type": "string"
                        },
                        "sudiSerialNumber": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "stackRingProtocol": {
                    "type": "string"
                  },
                  "supportsStackWorkflows": {
                    "type": "boolean"
                  },
                  "totalMemberCount": {
                    "type": "number"
                  },
                  "validLicenseLevels": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "state": {
                "type": "string"
              },
              "sudiRequired": {
                "type": "boolean"
              },
              "userMicNumbers": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "userSudiSerialNos": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "virtualAccountId": {
                "type": "string"
              },
              "workflowId": {
                "type": "string"
              },
              "workflowName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "runSummaryList": {
            "items": {
              "properties": {
                "details": {
                  "type": "string"
                },
                "errorFlag": {
                  "type": "boolean"
                },
                "historyTaskInfo": {
                  "properties": {
                    "addnDetails": {
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "type": "string"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "timestamp": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "systemResetWorkflow": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "addToInventory": {
                "type": "boolean"
              },
              "addedOn": {
                "type": "number"
              },
              "configId": {
                "type": "string"
              },
              "currTaskIdx": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "endTime": {
                "type": "number"
              },
              "execTime": {
                "type": "number"
              },
              "imageId": {
                "type": "string"
              },
              "instanceType": {
                "type": "string"
              },
              "lastupdateOn": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "tasks": {
                "items": {
                  "properties": {
                    "currWorkItemIdx": {
                      "type": "number"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "taskSeqNo": {
                      "type": "number"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "tenantId": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "useState": {
                "type": "string"
              },
              "version": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "systemWorkflow": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "addToInventory": {
                "type": "boolean"
              },
              "addedOn": {
                "type": "number"
              },
              "configId": {
                "type": "string"
              },
              "currTaskIdx": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "endTime": {
                "type": "number"
              },
              "execTime": {
                "type": "number"
              },
              "imageId": {
                "type": "string"
              },
              "instanceType": {
                "type": "string"
              },
              "lastupdateOn": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "tasks": {
                "items": {
                  "properties": {
                    "currWorkItemIdx": {
                      "type": "number"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "taskSeqNo": {
                      "type": "number"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "tenantId": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "useState": {
                "type": "string"
              },
              "version": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "tenantId": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "workflow": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "addToInventory": {
                "type": "boolean"
              },
              "addedOn": {
                "type": "number"
              },
              "configId": {
                "type": "string"
              },
              "currTaskIdx": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "endTime": {
                "type": "number"
              },
              "execTime": {
                "type": "number"
              },
              "imageId": {
                "type": "string"
              },
              "instanceType": {
                "type": "string"
              },
              "lastupdateOn": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "tasks": {
                "items": {
                  "properties": {
                    "currWorkItemIdx": {
                      "type": "number"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "taskSeqNo": {
                      "type": "number"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "tenantId": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "useState": {
                "type": "string"
              },
              "version": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "workflowParameters": {
            "properties": {
              "configList": {
                "items": {
                  "properties": {
                    "configId": {
                      "type": "string"
                    },
                    "configParameters": {
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "licenseLevel": {
                "type": "string"
              },
              "licenseType": {
                "type": "string"
              },
              "topOfStackSerialNumber": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "DeleteDeviceCredentialResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteEdgeDeviceFromSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteEnterpriseSSIDResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteEventSubscriptionsResponse": {
        "properties": {
          "statusUri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteGlobalCredentialVResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteGlobalIPPoolResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteIPPoolFromSDAVirtualNetworkResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteMulticastFromSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteNFVProfileResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeletePortAssignmentForAccessPointInSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeletePortAssignmentForUserDeviceInSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteProvisionedWiredDeviceResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteQosDeviceInterfaceInfoResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteRFProfilesResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteSPProfileResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteSPProfileVResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteSSIDAndProvisionItToDevicesResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteSensorTestResponse": {
        "properties": {
          "response": {
            "properties": {
              "status": {
                "type": "string"
              },
              "templateName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteSiteFromSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteSiteResponse": {
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteTransitPeerNetworkResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteUserDefinedFieldResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteVNFromSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteVirtualNetworkWithScalableGroupsResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteWirelessProfileRequest": {
        "type": "string"
      },
      "DeleteWirelessProfileResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteWorkflowByIdResponse": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "addToInventory": {
            "type": "boolean"
          },
          "addedOn": {
            "type": "number"
          },
          "configId": {
            "type": "string"
          },
          "currTaskIdx": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "endTime": {
            "type": "number"
          },
          "execTime": {
            "type": "number"
          },
          "imageId": {
            "type": "string"
          },
          "instanceType": {
            "type": "string"
          },
          "lastupdateOn": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "startTime": {
            "type": "number"
          },
          "state": {
            "type": "string"
          },
          "tasks": {
            "items": {
              "properties": {
                "currWorkItemIdx": {
                  "type": "number"
                },
                "endTime": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "startTime": {
                  "type": "number"
                },
                "state": {
                  "type": "string"
                },
                "taskSeqNo": {
                  "type": "number"
                },
                "timeTaken": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "workItemList": {
                  "items": {
                    "properties": {
                      "command": {
                        "type": "string"
                      },
                      "endTime": {
                        "type": "number"
                      },
                      "outputStr": {
                        "type": "string"
                      },
                      "startTime": {
                        "type": "number"
                      },
                      "state": {
                        "type": "string"
                      },
                      "timeTaken": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "tenantId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "useState": {
            "type": "string"
          },
          "version": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "DeregisterVirtualAccountResponse": {
        "properties": {
          "autoSyncPeriod": {
            "type": "number"
          },
          "ccoUser": {
            "type": "string"
          },
          "expiry": {
            "type": "number"
          },
          "lastSync": {
            "type": "number"
          },
          "profile": {
            "properties": {
              "addressFqdn": {
                "type": "string"
              },
              "addressIpV4": {
                "type": "string"
              },
              "cert": {
                "type": "string"
              },
              "makeDefault": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "port": {
                "type": "number"
              },
              "profileId": {
                "type": "string"
              },
              "proxy": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "smartAccountId": {
            "type": "string"
          },
          "syncResult": {
            "properties": {
              "syncList": {
                "items": {
                  "properties": {
                    "deviceSnList": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "syncType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "syncMsg": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "syncResultStr": {
            "type": "string"
          },
          "syncStartTime": {
            "type": "number"
          },
          "syncStatus": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "virtualAccountId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Device": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "dayZeroConfig": {
            "properties": {
              "config": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dayZeroConfigPreview": {
            "properties": {},
            "type": "object"
          },
          "deviceInfo": {
            "properties": {
              "tags": {
                "properties": {},
                "type": "object"
              },
              "aaaCredentials": {
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "addedOn": {
                "type": "number"
              },
              "addnMacAddrs": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "agentType": {
                "type": "string"
              },
              "authStatus": {
                "type": "string"
              },
              "authenticatedMicNumber": {
                "type": "string"
              },
              "authenticatedSudiSerialNo": {
                "type": "string"
              },
              "capabilitiesSupported": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cmState": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "deviceSudiSerialNos": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "deviceType": {
                "type": "string"
              },
              "featuresSupported": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "fileSystemList": {
                "items": {
                  "properties": {
                    "freespace": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "readable": {
                      "type": "boolean"
                    },
                    "size": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "writeable": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "firstContact": {
                "type": "number"
              },
              "hostname": {
                "type": "string"
              },
              "httpHeaders": {
                "items": {
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "imageFile": {
                "type": "string"
              },
              "imageVersion": {
                "type": "string"
              },
              "ipInterfaces": {
                "items": {
                  "properties": {
                    "ipv4Address": {
                      "properties": {},
                      "type": "object"
                    },
                    "ipv6AddressList": {
                      "items": {
                        "properties": {},
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "macAddress": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "lastContact": {
                "type": "number"
              },
              "lastSyncTime": {
                "type": "number"
              },
              "lastUpdateOn": {
                "type": "number"
              },
              "location": {
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "altitude": {
                    "type": "string"
                  },
                  "latitude": {
                    "type": "string"
                  },
                  "longitude": {
                    "type": "string"
                  },
                  "siteId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "macAddress": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "neighborLinks": {
                "items": {
                  "properties": {
                    "localInterfaceName": {
                      "type": "string"
                    },
                    "localMacAddress": {
                      "type": "string"
                    },
                    "localShortInterfaceName": {
                      "type": "string"
                    },
                    "remoteDeviceName": {
                      "type": "string"
                    },
                    "remoteInterfaceName": {
                      "type": "string"
                    },
                    "remoteMacAddress": {
                      "type": "string"
                    },
                    "remotePlatform": {
                      "type": "string"
                    },
                    "remoteShortInterfaceName": {
                      "type": "string"
                    },
                    "remoteVersion": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "onbState": {
                "type": "string"
              },
              "pid": {
                "type": "string"
              },
              "pnpProfileList": {
                "items": {
                  "properties": {
                    "createdBy": {
                      "type": "string"
                    },
                    "discoveryCreated": {
                      "type": "boolean"
                    },
                    "primaryEndpoint": {
                      "properties": {
                        "certificate": {
                          "type": "string"
                        },
                        "fqdn": {
                          "type": "string"
                        },
                        "ipv4Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "ipv6Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "port": {
                          "type": "number"
                        },
                        "protocol": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "profileName": {
                      "type": "string"
                    },
                    "secondaryEndpoint": {
                      "properties": {
                        "certificate": {
                          "type": "string"
                        },
                        "fqdn": {
                          "type": "string"
                        },
                        "ipv4Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "ipv6Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "port": {
                          "type": "number"
                        },
                        "protocol": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "populateInventory": {
                "type": "boolean"
              },
              "preWorkflowCliOuputs": {
                "items": {
                  "properties": {
                    "cli": {
                      "type": "string"
                    },
                    "cliOutput": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "projectId": {
                "type": "string"
              },
              "projectName": {
                "type": "string"
              },
              "reloadRequested": {
                "type": "boolean"
              },
              "serialNumber": {
                "type": "string"
              },
              "siteId": {
                "type": "string"
              },
              "siteName": {
                "type": "string"
              },
              "smartAccountId": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "stack": {
                "type": "boolean"
              },
              "stackInfo": {
                "properties": {
                  "isFullRing": {
                    "type": "boolean"
                  },
                  "stackMemberList": {
                    "items": {
                      "properties": {
                        "hardwareVersion": {
                          "type": "string"
                        },
                        "licenseLevel": {
                          "type": "string"
                        },
                        "licenseType": {
                          "type": "string"
                        },
                        "macAddress": {
                          "type": "string"
                        },
                        "pid": {
                          "type": "string"
                        },
                        "priority": {
                          "type": "number"
                        },
                        "role": {
                          "type": "string"
                        },
                        "serialNumber": {
                          "type": "string"
                        },
                        "softwareVersion": {
                          "type": "string"
                        },
                        "stackNumber": {
                          "type": "number"
                        },
                        "state": {
                          "type": "string"
                        },
                        "sudiSerialNumber": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "stackRingProtocol": {
                    "type": "string"
                  },
                  "supportsStackWorkflows": {
                    "type": "boolean"
                  },
                  "totalMemberCount": {
                    "type": "number"
                  },
                  "validLicenseLevels": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "state": {
                "type": "string"
              },
              "sudiRequired": {
                "type": "boolean"
              },
              "userMicNumbers": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "userSudiSerialNos": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "virtualAccountId": {
                "type": "string"
              },
              "workflowId": {
                "type": "string"
              },
              "workflowName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "runSummaryList": {
            "items": {
              "properties": {
                "details": {
                  "type": "string"
                },
                "errorFlag": {
                  "type": "boolean"
                },
                "historyTaskInfo": {
                  "properties": {
                    "addnDetails": {
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "type": "string"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "timestamp": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "systemResetWorkflow": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "addToInventory": {
                "type": "boolean"
              },
              "addedOn": {
                "type": "number"
              },
              "configId": {
                "type": "string"
              },
              "currTaskIdx": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "endTime": {
                "type": "number"
              },
              "execTime": {
                "type": "number"
              },
              "imageId": {
                "type": "string"
              },
              "instanceType": {
                "type": "string"
              },
              "lastupdateOn": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "tasks": {
                "items": {
                  "properties": {
                    "currWorkItemIdx": {
                      "type": "number"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "taskSeqNo": {
                      "type": "number"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "tenantId": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "useState": {
                "type": "string"
              },
              "version": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "systemWorkflow": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "addToInventory": {
                "type": "boolean"
              },
              "addedOn": {
                "type": "number"
              },
              "configId": {
                "type": "string"
              },
              "currTaskIdx": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "endTime": {
                "type": "number"
              },
              "execTime": {
                "type": "number"
              },
              "imageId": {
                "type": "string"
              },
              "instanceType": {
                "type": "string"
              },
              "lastupdateOn": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "tasks": {
                "items": {
                  "properties": {
                    "currWorkItemIdx": {
                      "type": "number"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "taskSeqNo": {
                      "type": "number"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "tenantId": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "useState": {
                "type": "string"
              },
              "version": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "tenantId": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "workflow": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "addToInventory": {
                "type": "boolean"
              },
              "addedOn": {
                "type": "number"
              },
              "configId": {
                "type": "string"
              },
              "currTaskIdx": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "endTime": {
                "type": "number"
              },
              "execTime": {
                "type": "number"
              },
              "imageId": {
                "type": "string"
              },
              "instanceType": {
                "type": "string"
              },
              "lastupdateOn": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "tasks": {
                "items": {
                  "properties": {
                    "currWorkItemIdx": {
                      "type": "number"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "taskSeqNo": {
                      "type": "number"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "tenantId": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "useState": {
                "type": "string"
              },
              "version": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "workflowParameters": {
            "properties": {
              "configList": {
                "items": {
                  "properties": {
                    "configId": {
                      "type": "string"
                    },
                    "configParameters": {
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "licenseLevel": {
                "type": "string"
              },
              "licenseType": {
                "type": "string"
              },
              "topOfStackSerialNumber": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "DeviceComplianceStatusResponse": {
        "properties": {
          "response": {
            "properties": {
              "complianceStatus": {
                "type": "string"
              },
              "deviceUuid": {
                "type": "string"
              },
              "lastUpdateTime": {
                "type": "number"
              },
              "message": {
                "type": "string"
              },
              "scheduleTime": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeviceCountDetailsResponse": {
        "properties": {
          "response": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeviceDeregistrationRequest": {
        "properties": {
          "device_uuids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DeviceDeregistrationResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "DeviceFamilyIdentifierResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "deviceFamily": {
                  "type": "string"
                },
                "deviceFamilyIdentifier": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeviceIfListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "adminStatus": {
                  "type": "string"
                },
                "className": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "deviceId": {
                  "type": "string"
                },
                "duplex": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "ifIndex": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "interfaceType": {
                  "type": "string"
                },
                "ipv4Address": {
                  "type": "string"
                },
                "ipv4Mask": {
                  "type": "string"
                },
                "isisSupport": {
                  "type": "string"
                },
                "lastUpdated": {
                  "type": "string"
                },
                "macAddress": {
                  "type": "string"
                },
                "mappedPhysicalInterfaceId": {
                  "type": "string"
                },
                "mappedPhysicalInterfaceName": {
                  "type": "string"
                },
                "mediaType": {
                  "type": "string"
                },
                "nativeVlanId": {
                  "type": "string"
                },
                "ospfSupport": {
                  "type": "string"
                },
                "pid": {
                  "type": "string"
                },
                "portMode": {
                  "type": "string"
                },
                "portName": {
                  "type": "string"
                },
                "portType": {
                  "type": "string"
                },
                "serialNo": {
                  "type": "string"
                },
                "series": {
                  "type": "string"
                },
                "speed": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "vlanId": {
                  "type": "string"
                },
                "voiceVlan": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeviceIfResult": {
        "properties": {
          "response": {
            "properties": {
              "adminStatus": {
                "type": "string"
              },
              "className": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "deviceId": {
                "type": "string"
              },
              "duplex": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "ifIndex": {
                "type": "string"
              },
              "instanceTenantId": {
                "type": "string"
              },
              "instanceUuid": {
                "type": "string"
              },
              "interfaceType": {
                "type": "string"
              },
              "ipv4Address": {
                "type": "string"
              },
              "ipv4Mask": {
                "type": "string"
              },
              "isisSupport": {
                "type": "string"
              },
              "lastUpdated": {
                "type": "string"
              },
              "macAddress": {
                "type": "string"
              },
              "mappedPhysicalInterfaceId": {
                "type": "string"
              },
              "mappedPhysicalInterfaceName": {
                "type": "string"
              },
              "mediaType": {
                "type": "string"
              },
              "nativeVlanId": {
                "type": "string"
              },
              "ospfSupport": {
                "type": "string"
              },
              "pid": {
                "type": "string"
              },
              "portMode": {
                "type": "string"
              },
              "portName": {
                "type": "string"
              },
              "portType": {
                "type": "string"
              },
              "serialNo": {
                "type": "string"
              },
              "series": {
                "type": "string"
              },
              "speed": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "vlanId": {
                "type": "string"
              },
              "voiceVlan": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeviceLicenseDetailsResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "access_points": {
                  "items": {
                    "properties": {
                      "ap_type": {
                        "type": "string"
                      },
                      "count": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "chassis_details": {
                  "properties": {
                    "board_serial_number": {
                      "type": "string"
                    },
                    "modules": {
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "module_name": {
                            "type": "string"
                          },
                          "module_type": {
                            "type": "string"
                          },
                          "serial_number": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "supervisor_cards": {
                      "items": {
                        "properties": {
                          "serial_number": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "supervisor_card_type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "device_name": {
                  "type": "string"
                },
                "device_type": {
                  "type": "string"
                },
                "device_uuid": {
                  "type": "string"
                },
                "dna_level": {
                  "type": "string"
                },
                "evaluation_license_expiry": {
                  "type": "string"
                },
                "feature_license": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "has_sup_cards": {
                  "type": "boolean"
                },
                "ip_address": {
                  "type": "string"
                },
                "is_license_expired": {
                  "type": "boolean"
                },
                "is_stacked_device": {
                  "type": "boolean"
                },
                "license_mode": {
                  "type": "string"
                },
                "mac_address": {
                  "type": "string"
                },
                "model": {
                  "type": "string"
                },
                "network_license": {
                  "type": "string"
                },
                "site": {
                  "type": "string"
                },
                "sntc_status": {
                  "type": "string"
                },
                "software_version": {
                  "type": "string"
                },
                "stacked_devices": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "mac_address": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "serial_number": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "udi": {
                  "type": "string"
                },
                "virtual_account_name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DeviceLicenseSummaryResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "authorization_status": {
                  "type": "string"
                },
                "customer_tag1": {
                  "type": "string"
                },
                "customer_tag2": {
                  "type": "string"
                },
                "customer_tag3": {
                  "type": "string"
                },
                "customer_tag4": {
                  "type": "string"
                },
                "device_name": {
                  "type": "string"
                },
                "device_type": {
                  "type": "string"
                },
                "device_uuid": {
                  "type": "string"
                },
                "dna_level": {
                  "type": "string"
                },
                "evaluation_license_expiry": {
                  "type": "string"
                },
                "hsec_status": {
                  "type": "string"
                },
                "ip_address": {
                  "type": "string"
                },
                "is_license_expired": {
                  "type": "boolean"
                },
                "is_performance_allowed": {
                  "type": "boolean"
                },
                "is_wireless": {
                  "type": "boolean"
                },
                "is_wireless_capable": {
                  "type": "boolean"
                },
                "last_successful_rum_usage_upload_time": {
                  "type": "string"
                },
                "last_updated_time": {
                  "type": "string"
                },
                "license_mode": {
                  "type": "string"
                },
                "mac_address": {
                  "type": "string"
                },
                "model": {
                  "type": "string"
                },
                "network_license": {
                  "type": "string"
                },
                "performance_license": {
                  "type": "string"
                },
                "registration_status": {
                  "type": "string"
                },
                "reservation_status": {
                  "type": "string"
                },
                "site": {
                  "type": "string"
                },
                "sle_auth_code": {
                  "type": "string"
                },
                "sle_state": {
                  "type": "string"
                },
                "smart_account_name": {
                  "type": "string"
                },
                "software_version": {
                  "type": "string"
                },
                "throughput_level": {
                  "type": "string"
                },
                "total_access_point_count": {
                  "type": "integer"
                },
                "virtual_account_name": {
                  "type": "string"
                },
                "wireless_capable_dna_license": {
                  "type": "string"
                },
                "wireless_capable_network_license": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DeviceRegistrationRequest": {
        "properties": {
          "device_uuids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DeviceRegistrationResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "DeviceReplacementDataDTO": {
        "items": {
          "properties": {
            "creationTime": {
              "type": "integer"
            },
            "family": {
              "type": "string"
            },
            "faultyDeviceId": {
              "type": "string"
            },
            "faultyDeviceName": {
              "type": "string"
            },
            "faultyDevicePlatform": {
              "type": "string"
            },
            "faultyDeviceSerialNumber": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "neighbourDeviceId": {
              "type": "string"
            },
            "networkReadinessTaskId": {
              "type": "string"
            },
            "replacementDevicePlatform": {
              "type": "string"
            },
            "replacementDeviceSerialNumber": {
              "type": "string"
            },
            "replacementStatus": {
              "type": "string"
            },
            "replacementTime": {
              "type": "integer"
            },
            "workflowId": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "DeviceReplacementResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "creationTime": {
                  "type": "integer"
                },
                "family": {
                  "type": "string"
                },
                "faultyDeviceId": {
                  "type": "string"
                },
                "faultyDeviceName": {
                  "type": "string"
                },
                "faultyDevicePlatform": {
                  "type": "string"
                },
                "faultyDeviceSerialNumber": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "neighbourDeviceId": {
                  "type": "string"
                },
                "networkReadinessTaskId": {
                  "type": "string"
                },
                "replacementDevicePlatform": {
                  "type": "string"
                },
                "replacementDeviceSerialNumber": {
                  "type": "string"
                },
                "replacementStatus": {
                  "type": "string"
                },
                "replacementTime": {
                  "type": "integer"
                },
                "workflowId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeviceReplacementWorkflowDTO": {
        "properties": {
          "faultyDeviceSerialNumber": {
            "type": "string"
          },
          "replacementDeviceSerialNumber": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DevicesResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "airQualityHealth": {
                  "properties": {
                    "Ghz24": {
                      "type": "integer"
                    },
                    "Ghz50": {
                      "type": "integer"
                    },
                    "radio0": {
                      "type": "integer"
                    },
                    "radio1": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "clientCount": {
                  "properties": {
                    "Ghz24": {
                      "type": "number"
                    },
                    "Ghz50": {
                      "type": "integer"
                    },
                    "radio0": {
                      "type": "number"
                    },
                    "radio1": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "cpuHealth": {
                  "type": "integer"
                },
                "cpuUlitilization": {
                  "type": "integer"
                },
                "deviceFamily": {
                  "type": "string"
                },
                "deviceType": {
                  "type": "string"
                },
                "interDeviceLinkAvailHealth": {
                  "type": "integer"
                },
                "interfaceLinkErrHealth": {
                  "type": "integer"
                },
                "interferenceHealth": {
                  "properties": {
                    "Ghz24": {
                      "type": "integer"
                    },
                    "Ghz50": {
                      "type": "integer"
                    },
                    "radio0": {
                      "type": "integer"
                    },
                    "radio1": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "ipAddress": {
                  "type": "string"
                },
                "issueCount": {
                  "type": "number"
                },
                "location": {
                  "type": "string"
                },
                "macAddress": {
                  "type": "string"
                },
                "memoryUtilization": {
                  "type": "integer"
                },
                "memoryUtilizationHealth": {
                  "type": "integer"
                },
                "model": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "noiseHealth": {
                  "properties": {
                    "Ghz50": {
                      "type": "integer"
                    },
                    "radio1": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "osVersion": {
                  "type": "string"
                },
                "overallHealth": {
                  "type": "integer"
                },
                "reachabilityHealth": {
                  "type": "string"
                },
                "utilizationHealth": {
                  "properties": {
                    "Ghz24": {
                      "type": "integer"
                    },
                    "Ghz50": {
                      "type": "integer"
                    },
                    "radio0": {
                      "type": "integer"
                    },
                    "radio1": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "totalCount": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Dictionary": {
        "items": {
          "properties": {
            "attributes": {
              "items": {
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "description": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "DisassociateResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "properties": {},
                "type": "object"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DisasterRecoveryOperationalStatusResponse": {
        "properties": {
          "endTimestamp": {
            "type": "string"
          },
          "initiated_by": {
            "type": "string"
          },
          "ipconfig": {
            "items": {
              "properties": {
                "interface": {
                  "enum": [
                    "enterprise",
                    "management"
                  ],
                  "type": "string"
                },
                "ip": {
                  "type": "string"
                },
                "vip": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "type": "string"
          },
          "severity": {
            "enum": [
              "error",
              "info"
            ],
            "type": "string"
          },
          "site": {
            "type": "string"
          },
          "startTimestamp": {
            "type": "string"
          },
          "status": {
            "enum": [
              "inprogress",
              "complete",
              "success",
              "failed"
            ],
            "type": "string"
          },
          "tasks": {
            "items": {
              "properties": {
                "endTimestamp": {
                  "type": "string"
                },
                "ipconfig": {
                  "items": {
                    "properties": {
                      "interface": {
                        "enum": [
                          "enterprise",
                          "management"
                        ],
                        "type": "string"
                      },
                      "ip": {
                        "type": "string"
                      },
                      "vip": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "message": {
                  "type": "string"
                },
                "site": {
                  "type": "string"
                },
                "startTimestamp": {
                  "type": "string"
                },
                "status": {
                  "enum": [
                    "inprogress",
                    "complete",
                    "success",
                    "failed"
                  ],
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiscoveryJobNIOListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "attributeInfo": {
                  "properties": {},
                  "type": "object"
                },
                "cliStatus": {
                  "type": "string"
                },
                "discoveryStatus": {
                  "type": "string"
                },
                "endTime": {
                  "type": "string"
                },
                "httpStatus": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "inventoryCollectionStatus": {
                  "type": "string"
                },
                "inventoryReachabilityStatus": {
                  "type": "string"
                },
                "ipAddress": {
                  "type": "string"
                },
                "jobStatus": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "netconfStatus": {
                  "type": "string"
                },
                "pingStatus": {
                  "type": "string"
                },
                "snmpStatus": {
                  "type": "string"
                },
                "startTime": {
                  "type": "string"
                },
                "taskId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiscoveryNIO": {
        "properties": {
          "attributeInfo": {
            "properties": {},
            "type": "object"
          },
          "cdpLevel": {
            "type": "integer"
          },
          "deviceIds": {
            "type": "string"
          },
          "discoveryCondition": {
            "type": "string"
          },
          "discoveryStatus": {
            "type": "string"
          },
          "discoveryType": {
            "type": "string"
          },
          "enablePasswordList": {
            "type": "string"
          },
          "globalCredentialIdList": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "httpReadCredential": {
            "properties": {
              "comments": {
                "type": "string"
              },
              "credentialType": {
                "enum": [
                  "GLOBAL",
                  "APP"
                ],
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "instanceTenantId": {
                "type": "string"
              },
              "instanceUuid": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "integer"
              },
              "secure": {
                "type": "boolean"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "httpWriteCredential": {
            "properties": {
              "comments": {
                "type": "string"
              },
              "credentialType": {
                "enum": [
                  "GLOBAL",
                  "APP"
                ],
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "instanceTenantId": {
                "type": "string"
              },
              "instanceUuid": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "integer"
              },
              "secure": {
                "type": "boolean"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "ipAddressList": {
            "type": "string"
          },
          "ipFilterList": {
            "type": "string"
          },
          "isAutoCdp": {
            "type": "boolean"
          },
          "lldpLevel": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "netconfPort": {
            "type": "string"
          },
          "numDevices": {
            "type": "integer"
          },
          "parentDiscoveryId": {
            "type": "string"
          },
          "passwordList": {
            "type": "string"
          },
          "preferredMgmtIPMethod": {
            "type": "string"
          },
          "protocolOrder": {
            "type": "string"
          },
          "retryCount": {
            "type": "integer"
          },
          "snmpAuthPassphrase": {
            "type": "string"
          },
          "snmpAuthProtocol": {
            "type": "string"
          },
          "snmpMode": {
            "type": "string"
          },
          "snmpPrivPassphrase": {
            "type": "string"
          },
          "snmpPrivProtocol": {
            "type": "string"
          },
          "snmpRoCommunity": {
            "type": "string"
          },
          "snmpRoCommunityDesc": {
            "type": "string"
          },
          "snmpRwCommunity": {
            "type": "string"
          },
          "snmpRwCommunityDesc": {
            "type": "string"
          },
          "snmpUserName": {
            "type": "string"
          },
          "timeOut": {
            "type": "integer"
          },
          "updateMgmtIp": {
            "type": "boolean"
          },
          "userNameList": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiscoveryNIOListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "attributeInfo": {
                  "properties": {},
                  "type": "object"
                },
                "cdpLevel": {
                  "type": "integer"
                },
                "deviceIds": {
                  "type": "string"
                },
                "discoveryCondition": {
                  "type": "string"
                },
                "discoveryStatus": {
                  "type": "string"
                },
                "discoveryType": {
                  "type": "string"
                },
                "enablePasswordList": {
                  "type": "string"
                },
                "globalCredentialIdList": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "httpReadCredential": {
                  "properties": {
                    "comments": {
                      "type": "string"
                    },
                    "credentialType": {
                      "enum": [
                        "GLOBAL",
                        "APP"
                      ],
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceTenantId": {
                      "type": "string"
                    },
                    "instanceUuid": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "secure": {
                      "type": "boolean"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "httpWriteCredential": {
                  "properties": {
                    "comments": {
                      "type": "string"
                    },
                    "credentialType": {
                      "enum": [
                        "GLOBAL",
                        "APP"
                      ],
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceTenantId": {
                      "type": "string"
                    },
                    "instanceUuid": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "secure": {
                      "type": "boolean"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "string"
                },
                "ipAddressList": {
                  "type": "string"
                },
                "ipFilterList": {
                  "type": "string"
                },
                "isAutoCdp": {
                  "type": "boolean"
                },
                "lldpLevel": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "netconfPort": {
                  "type": "string"
                },
                "numDevices": {
                  "type": "integer"
                },
                "parentDiscoveryId": {
                  "type": "string"
                },
                "passwordList": {
                  "type": "string"
                },
                "preferredMgmtIPMethod": {
                  "type": "string"
                },
                "protocolOrder": {
                  "type": "string"
                },
                "retryCount": {
                  "type": "integer"
                },
                "snmpAuthPassphrase": {
                  "type": "string"
                },
                "snmpAuthProtocol": {
                  "type": "string"
                },
                "snmpMode": {
                  "type": "string"
                },
                "snmpPrivPassphrase": {
                  "type": "string"
                },
                "snmpPrivProtocol": {
                  "type": "string"
                },
                "snmpRoCommunity": {
                  "type": "string"
                },
                "snmpRoCommunityDesc": {
                  "type": "string"
                },
                "snmpRwCommunity": {
                  "type": "string"
                },
                "snmpRwCommunityDesc": {
                  "type": "string"
                },
                "snmpUserName": {
                  "type": "string"
                },
                "timeOut": {
                  "type": "integer"
                },
                "updateMgmtIp": {
                  "type": "boolean"
                },
                "userNameList": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiscoveryNIOResult": {
        "properties": {
          "response": {
            "properties": {
              "attributeInfo": {
                "properties": {},
                "type": "object"
              },
              "cdpLevel": {
                "type": "integer"
              },
              "deviceIds": {
                "type": "string"
              },
              "discoveryCondition": {
                "type": "string"
              },
              "discoveryStatus": {
                "type": "string"
              },
              "discoveryType": {
                "type": "string"
              },
              "enablePasswordList": {
                "type": "string"
              },
              "globalCredentialIdList": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "httpReadCredential": {
                "properties": {
                  "comments": {
                    "type": "string"
                  },
                  "credentialType": {
                    "enum": [
                      "GLOBAL",
                      "APP"
                    ],
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "instanceTenantId": {
                    "type": "string"
                  },
                  "instanceUuid": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer"
                  },
                  "secure": {
                    "type": "boolean"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "httpWriteCredential": {
                "properties": {
                  "comments": {
                    "type": "string"
                  },
                  "credentialType": {
                    "enum": [
                      "GLOBAL",
                      "APP"
                    ],
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "instanceTenantId": {
                    "type": "string"
                  },
                  "instanceUuid": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer"
                  },
                  "secure": {
                    "type": "boolean"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "type": "string"
              },
              "ipAddressList": {
                "type": "string"
              },
              "ipFilterList": {
                "type": "string"
              },
              "isAutoCdp": {
                "type": "boolean"
              },
              "lldpLevel": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "netconfPort": {
                "type": "string"
              },
              "numDevices": {
                "type": "integer"
              },
              "parentDiscoveryId": {
                "type": "string"
              },
              "passwordList": {
                "type": "string"
              },
              "preferredMgmtIPMethod": {
                "type": "string"
              },
              "protocolOrder": {
                "type": "string"
              },
              "retryCount": {
                "type": "integer"
              },
              "snmpAuthPassphrase": {
                "type": "string"
              },
              "snmpAuthProtocol": {
                "type": "string"
              },
              "snmpMode": {
                "type": "string"
              },
              "snmpPrivPassphrase": {
                "type": "string"
              },
              "snmpPrivProtocol": {
                "type": "string"
              },
              "snmpRoCommunity": {
                "type": "string"
              },
              "snmpRoCommunityDesc": {
                "type": "string"
              },
              "snmpRwCommunity": {
                "type": "string"
              },
              "snmpRwCommunityDesc": {
                "type": "string"
              },
              "snmpUserName": {
                "type": "string"
              },
              "timeOut": {
                "type": "integer"
              },
              "updateMgmtIp": {
                "type": "boolean"
              },
              "userNameList": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DistributeDTO": {
        "items": {
          "properties": {
            "deviceUuid": {
              "type": "string"
            },
            "imageUuid": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "DownloadAFileByFileIdResponse": {
        "type": "object"
      },
      "DownloadReportContentResponse": {
        "type": "string"
      },
      "DuplicateSensorTestTemplateRequest": {
        "properties": {
          "newTemplateName": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DuplicateSensorTestTemplateResponse": {
        "properties": {
          "response": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "apCoverage": {
                "items": {
                  "properties": {
                    "bands": {
                      "type": "string"
                    },
                    "numberOfApsToTest": {
                      "type": "integer"
                    },
                    "rssiThreshold": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "connection": {
                "type": "string"
              },
              "encryptionMode": {
                "type": "string"
              },
              "frequency": {
                "properties": {},
                "type": "object"
              },
              "lastModifiedTime": {
                "type": "number"
              },
              "legacyTestSuite": {
                "type": "boolean"
              },
              "location": {
                "properties": {},
                "type": "object"
              },
              "locationInfoList": {
                "items": {
                  "properties": {
                    "allSensors": {
                      "type": "boolean"
                    },
                    "locationId": {
                      "type": "string"
                    },
                    "locationType": {
                      "type": "string"
                    },
                    "macAddressList": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "siteHierarchy": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "modelVersion": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "numAssociatedSensor": {
                "type": "number"
              },
              "numNeighborAPThreshold": {
                "type": "integer"
              },
              "radioAsSensorRemoved": {
                "type": "boolean"
              },
              "rssiThreshold": {
                "type": "integer"
              },
              "runNow": {
                "type": "string"
              },
              "schedule": {
                "properties": {
                  "frequency": {
                    "properties": {
                      "unit": {
                        "type": "string"
                      },
                      "value": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "scheduleRange": {
                    "items": {
                      "properties": {
                        "day": {
                          "type": "string"
                        },
                        "timeRange": {
                          "items": {
                            "properties": {
                              "frequency": {
                                "properties": {
                                  "unit": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "from": {
                                "type": "string"
                              },
                              "to": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "startTime": {
                    "type": "number"
                  },
                  "testScheduleMode": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "scheduleInDays": {
                "type": "number"
              },
              "sensors": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "showWlcUpgradeBanner": {
                "type": "boolean"
              },
              "siteHierarchy": {
                "properties": {},
                "type": "object"
              },
              "ssids": {
                "items": {
                  "properties": {
                    "authProtocol": {
                      "properties": {},
                      "type": "object"
                    },
                    "authType": {
                      "type": "string"
                    },
                    "authTypeRcvd": {
                      "properties": {},
                      "type": "object"
                    },
                    "bands": {
                      "properties": {},
                      "type": "object"
                    },
                    "certdownloadurl": {
                      "properties": {},
                      "type": "object"
                    },
                    "certfilename": {
                      "properties": {},
                      "type": "object"
                    },
                    "certpassphrase": {
                      "properties": {},
                      "type": "object"
                    },
                    "certstatus": {
                      "type": "string"
                    },
                    "certxferprotocol": {
                      "type": "string"
                    },
                    "eapMethod": {
                      "properties": {},
                      "type": "object"
                    },
                    "extWebAuth": {
                      "type": "boolean"
                    },
                    "extWebAuthAccessUrl": {
                      "properties": {},
                      "type": "object"
                    },
                    "extWebAuthHtmlTag": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "extWebAuthPortal": {
                      "properties": {},
                      "type": "object"
                    },
                    "extWebAuthVirtualIp": {
                      "properties": {},
                      "type": "object"
                    },
                    "id": {
                      "type": "number"
                    },
                    "layer3webAuthEmailAddress": {
                      "properties": {},
                      "type": "object"
                    },
                    "layer3webAuthpassword": {
                      "properties": {},
                      "type": "object"
                    },
                    "layer3webAuthsecurity": {
                      "properties": {},
                      "type": "object"
                    },
                    "layer3webAuthuserName": {
                      "properties": {},
                      "type": "object"
                    },
                    "numAps": {
                      "type": "number"
                    },
                    "numSensors": {
                      "type": "number"
                    },
                    "password": {
                      "properties": {},
                      "type": "object"
                    },
                    "profileName": {
                      "type": "string"
                    },
                    "psk": {
                      "type": "string"
                    },
                    "qosPolicy": {
                      "type": "string"
                    },
                    "scep": {
                      "type": "boolean"
                    },
                    "ssid": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "tests": {
                      "items": {
                        "properties": {
                          "config": {
                            "items": {
                              "properties": {},
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "thirdParty": {
                      "properties": {
                        "selected": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "username": {
                      "properties": {},
                      "type": "object"
                    },
                    "validFrom": {
                      "type": "number"
                    },
                    "validTo": {
                      "type": "number"
                    },
                    "whiteList": {
                      "type": "boolean"
                    },
                    "wlanId": {
                      "type": "number"
                    },
                    "wlc": {
                      "properties": {},
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "startTime": {
                "type": "number"
              },
              "status": {
                "type": "string"
              },
              "tenantId": {
                "properties": {},
                "type": "object"
              },
              "testDurationEstimate": {
                "type": "integer"
              },
              "testScheduleMode": {
                "type": "string"
              },
              "testTemplate": {
                "type": "boolean"
              },
              "tests": {
                "properties": {},
                "type": "object"
              },
              "version": {
                "type": "number"
              },
              "wlans": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditApplicationRequest": {
        "items": {
          "properties": {
            "applicationSet": {
              "properties": {
                "idRef": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "networkApplications": {
              "items": {
                "properties": {
                  "appProtocol": {
                    "type": "string"
                  },
                  "applicationSubType": {
                    "type": "string"
                  },
                  "applicationType": {
                    "type": "string"
                  },
                  "categoryId": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "dscp": {
                    "type": "string"
                  },
                  "engineId": {
                    "type": "string"
                  },
                  "helpString": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "ignoreConflict": {
                    "type": "string"
                  },
                  "longDescription": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "popularity": {
                    "type": "string"
                  },
                  "rank": {
                    "type": "string"
                  },
                  "serverName": {
                    "type": "string"
                  },
                  "trafficClass": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "networkIdentity": {
              "items": {
                "properties": {
                  "displayName": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "lowerPort": {
                    "type": "string"
                  },
                  "ports": {
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "upperPort": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "EditApplicationResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditSensorTestTemplateRequest": {
        "properties": {
          "locationInfoList": {
            "items": {
              "properties": {
                "allSensors": {
                  "type": "boolean"
                },
                "locationId": {
                  "type": "string"
                },
                "locationType": {
                  "type": "string"
                },
                "siteHierarchy": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "schedule": {
            "properties": {
              "frequency": {
                "properties": {
                  "unit": {
                    "type": "string"
                  },
                  "value": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "scheduleRange": {
                "items": {
                  "properties": {
                    "day": {
                      "type": "string"
                    },
                    "timeRange": {
                      "items": {
                        "properties": {
                          "frequency": {
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "from": {
                            "type": "string"
                          },
                          "to": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "testScheduleMode": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "templateName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditSensorTestTemplateResponse": {
        "properties": {
          "response": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "apCoverage": {
                "items": {
                  "properties": {
                    "bands": {
                      "type": "string"
                    },
                    "numberOfApsToTest": {
                      "type": "integer"
                    },
                    "rssiThreshold": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "connection": {
                "type": "string"
              },
              "encryptionMode": {
                "type": "string"
              },
              "frequency": {
                "properties": {},
                "type": "object"
              },
              "lastModifiedTime": {
                "type": "number"
              },
              "legacyTestSuite": {
                "type": "boolean"
              },
              "location": {
                "properties": {},
                "type": "object"
              },
              "locationInfoList": {
                "items": {
                  "properties": {
                    "allSensors": {
                      "type": "boolean"
                    },
                    "locationId": {
                      "type": "string"
                    },
                    "locationType": {
                      "type": "string"
                    },
                    "macAddressList": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "siteHierarchy": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "modelVersion": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "numAssociatedSensor": {
                "type": "number"
              },
              "numNeighborAPThreshold": {
                "type": "integer"
              },
              "radioAsSensorRemoved": {
                "type": "boolean"
              },
              "rssiThreshold": {
                "type": "integer"
              },
              "runNow": {
                "type": "string"
              },
              "schedule": {
                "properties": {
                  "frequency": {
                    "properties": {
                      "unit": {
                        "type": "string"
                      },
                      "value": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "scheduleRange": {
                    "items": {
                      "properties": {
                        "day": {
                          "type": "string"
                        },
                        "timeRange": {
                          "items": {
                            "properties": {
                              "frequency": {
                                "properties": {
                                  "unit": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "from": {
                                "type": "string"
                              },
                              "to": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "startTime": {
                    "type": "number"
                  },
                  "testScheduleMode": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "scheduleInDays": {
                "type": "number"
              },
              "sensors": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "showWlcUpgradeBanner": {
                "type": "boolean"
              },
              "siteHierarchy": {
                "properties": {},
                "type": "object"
              },
              "ssids": {
                "items": {
                  "properties": {
                    "authProtocol": {
                      "properties": {},
                      "type": "object"
                    },
                    "authType": {
                      "type": "string"
                    },
                    "authTypeRcvd": {
                      "properties": {},
                      "type": "object"
                    },
                    "bands": {
                      "properties": {},
                      "type": "object"
                    },
                    "certdownloadurl": {
                      "properties": {},
                      "type": "object"
                    },
                    "certfilename": {
                      "properties": {},
                      "type": "object"
                    },
                    "certpassphrase": {
                      "properties": {},
                      "type": "object"
                    },
                    "certstatus": {
                      "type": "string"
                    },
                    "certxferprotocol": {
                      "type": "string"
                    },
                    "eapMethod": {
                      "properties": {},
                      "type": "object"
                    },
                    "extWebAuth": {
                      "type": "boolean"
                    },
                    "extWebAuthAccessUrl": {
                      "properties": {},
                      "type": "object"
                    },
                    "extWebAuthHtmlTag": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "extWebAuthPortal": {
                      "properties": {},
                      "type": "object"
                    },
                    "extWebAuthVirtualIp": {
                      "properties": {},
                      "type": "object"
                    },
                    "id": {
                      "type": "number"
                    },
                    "layer3webAuthEmailAddress": {
                      "properties": {},
                      "type": "object"
                    },
                    "layer3webAuthpassword": {
                      "properties": {},
                      "type": "object"
                    },
                    "layer3webAuthsecurity": {
                      "properties": {},
                      "type": "object"
                    },
                    "layer3webAuthuserName": {
                      "properties": {},
                      "type": "object"
                    },
                    "numAps": {
                      "type": "number"
                    },
                    "numSensors": {
                      "type": "number"
                    },
                    "password": {
                      "properties": {},
                      "type": "object"
                    },
                    "profileName": {
                      "type": "string"
                    },
                    "psk": {
                      "type": "string"
                    },
                    "qosPolicy": {
                      "type": "string"
                    },
                    "scep": {
                      "type": "boolean"
                    },
                    "ssid": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "tests": {
                      "items": {
                        "properties": {
                          "config": {
                            "items": {
                              "properties": {},
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "thirdParty": {
                      "properties": {
                        "selected": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "username": {
                      "properties": {},
                      "type": "object"
                    },
                    "validFrom": {
                      "type": "number"
                    },
                    "validTo": {
                      "type": "number"
                    },
                    "whiteList": {
                      "type": "boolean"
                    },
                    "wlanId": {
                      "type": "number"
                    },
                    "wlc": {
                      "properties": {},
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "startTime": {
                "type": "number"
              },
              "status": {
                "type": "string"
              },
              "tenantId": {
                "type": "string"
              },
              "testDurationEstimate": {
                "type": "integer"
              },
              "testScheduleMode": {
                "type": "string"
              },
              "testTemplate": {
                "type": "boolean"
              },
              "tests": {
                "properties": {},
                "type": "object"
              },
              "version": {
                "type": "number"
              },
              "wlans": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Endpoint": {
        "properties": {
          "ancPolicy": {
            "type": "string"
          },
          "attributes": {
            "properties": {},
            "type": "object"
          },
          "deviceType": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "duid": {
            "type": "string"
          },
          "granularAncPolicy": {
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "nasIpAddress": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "hardwareManufacturer": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "hardwareModel": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "lastProbeCollectionTimestamp": {
            "type": "integer"
          },
          "macAddress": {
            "type": "string"
          },
          "operatingSystem": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "randomMac": {
            "type": "boolean"
          },
          "registered": {
            "type": "boolean"
          },
          "trustData": {
            "properties": {
              "aiSpoofingThreatLevel": {
                "enum": [
                  "low",
                  "medium",
                  "high"
                ],
                "type": "string"
              },
              "authMethod": {
                "type": "string"
              },
              "changedProfileThreatLevel": {
                "enum": [
                  "low",
                  "medium",
                  "high"
                ],
                "type": "string"
              },
              "concurrentMacThreatLevel": {
                "enum": [
                  "low",
                  "medium",
                  "high"
                ],
                "type": "string"
              },
              "ipBlocklistDetected": {
                "type": "boolean"
              },
              "natThreatLevel": {
                "enum": [
                  "low",
                  "medium",
                  "high"
                ],
                "type": "string"
              },
              "postureStatus": {
                "enum": [
                  "Compliant",
                  "Non-Compliant",
                  "Grace Compliant",
                  "Pending",
                  "Unknown"
                ],
                "type": "string"
              },
              "trustScore": {
                "type": "integer"
              },
              "unauthPortDetected": {
                "type": "boolean"
              },
              "weakCredDetected": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "EndpointAncPolicy": {
        "properties": {
          "ancPolicy": {
            "type": "string"
          },
          "granularAncPolicy": {
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "nasIpAddress": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EndpointRegistrationCreateRequest": {
        "properties": {
          "deviceType": {
            "type": "string"
          },
          "hardwareManufacturer": {
            "type": "string"
          },
          "hardwareModel": {
            "type": "string"
          },
          "macAddress": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EndpointRegistrationUpdateRequest": {
        "properties": {
          "deviceType": {
            "type": "string"
          },
          "hardwareManufacturer": {
            "type": "string"
          },
          "hardwareModel": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Endpoints": {
        "properties": {
          "hasMoreResults": {
            "type": "boolean"
          },
          "items": {
            "items": {
              "properties": {
                "ancPolicy": {
                  "type": "string"
                },
                "attributes": {
                  "properties": {},
                  "type": "object"
                },
                "deviceType": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "duid": {
                  "type": "string"
                },
                "granularAncPolicy": {
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "nasIpAddress": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "hardwareManufacturer": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "hardwareModel": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "id": {
                  "type": "string"
                },
                "lastProbeCollectionTimestamp": {
                  "type": "integer"
                },
                "macAddress": {
                  "type": "string"
                },
                "operatingSystem": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "randomMac": {
                  "type": "boolean"
                },
                "registered": {
                  "type": "boolean"
                },
                "trustData": {
                  "properties": {
                    "aiSpoofingThreatLevel": {
                      "enum": [
                        "low",
                        "medium",
                        "high"
                      ],
                      "type": "string"
                    },
                    "authMethod": {
                      "type": "string"
                    },
                    "changedProfileThreatLevel": {
                      "enum": [
                        "low",
                        "medium",
                        "high"
                      ],
                      "type": "string"
                    },
                    "concurrentMacThreatLevel": {
                      "enum": [
                        "low",
                        "medium",
                        "high"
                      ],
                      "type": "string"
                    },
                    "ipBlocklistDetected": {
                      "type": "boolean"
                    },
                    "natThreatLevel": {
                      "enum": [
                        "low",
                        "medium",
                        "high"
                      ],
                      "type": "string"
                    },
                    "postureStatus": {
                      "enum": [
                        "Compliant",
                        "Non-Compliant",
                        "Grace Compliant",
                        "Pending",
                        "Unknown"
                      ],
                      "type": "string"
                    },
                    "trustScore": {
                      "type": "integer"
                    },
                    "unauthPortDetected": {
                      "type": "boolean"
                    },
                    "weakCredDetected": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "totalResults": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EventArtifactCountResponse": {
        "properties": {
          "response": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "ExecuteSuggestedActionsCommandsRequest": {
        "properties": {
          "entity_type": {
            "type": "string"
          },
          "entity_value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExecuteSuggestedActionsCommandsResponse": {
        "items": {
          "properties": {
            "actionInfo": {
              "type": "string"
            },
            "command": {
              "type": "string"
            },
            "commandOutput": {
              "properties": {},
              "type": "object"
            },
            "entityId": {
              "type": "string"
            },
            "hostname": {
              "type": "string"
            },
            "stepsCount": {
              "type": "integer"
            },
            "stepsDescription": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "ExportDeviceConfigurationsResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExportDeviceDTO": {
        "properties": {
          "parameters": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "deviceUuids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "operationEnum": {
            "enum": [
              "CREDENTIALDETAILS",
              "DEVICEDETAILS"
            ],
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExportsTheProjectsForAGivenCriteriaRequest": {
        "items": {
          "type": "object"
        },
        "type": "array"
      },
      "ExportsTheTemplatesForAGivenCriteriaRequest": {
        "items": {
          "type": "object"
        },
        "type": "array"
      },
      "FileObjectListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "attributeInfo": {
                  "properties": {},
                  "type": "object"
                },
                "downloadPath": {
                  "type": "string"
                },
                "encrypted": {
                  "type": "boolean"
                },
                "fileFormat": {
                  "type": "string"
                },
                "fileSize": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "md5Checksum": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "nameSpace": {
                  "type": "string"
                },
                "sftpServerList": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "sha1Checksum": {
                  "type": "string"
                },
                "taskId": {
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FlowAnalysisListOutput": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "controlPath": {
                  "type": "boolean"
                },
                "createTime": {
                  "type": "integer"
                },
                "destIP": {
                  "type": "string"
                },
                "destPort": {
                  "type": "string"
                },
                "failureReason": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "inclusions": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "lastUpdateTime": {
                  "type": "integer"
                },
                "periodicRefresh": {
                  "type": "boolean"
                },
                "protocol": {
                  "type": "string"
                },
                "sourceIP": {
                  "type": "string"
                },
                "sourcePort": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FlowAnalysisRequest": {
        "properties": {
          "controlPath": {
            "type": "boolean"
          },
          "destIP": {
            "type": "string"
          },
          "destPort": {
            "type": "string"
          },
          "inclusions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "periodicRefresh": {
            "type": "boolean"
          },
          "protocol": {
            "type": "string"
          },
          "sourceIP": {
            "type": "string"
          },
          "sourcePort": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FlowAnalysisRequestResultOutput": {
        "properties": {
          "response": {
            "properties": {
              "flowAnalysisId": {
                "type": "string"
              },
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FunctionalCapabilityListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "attributeInfo": {
                  "properties": {},
                  "type": "object"
                },
                "deviceId": {
                  "type": "string"
                },
                "functionalCapability": {
                  "items": {
                    "properties": {
                      "attributeInfo": {
                        "properties": {},
                        "type": "object"
                      },
                      "functionDetails": {
                        "items": {
                          "properties": {
                            "attributeInfo": {
                              "properties": {},
                              "type": "object"
                            },
                            "id": {
                              "type": "string"
                            },
                            "propertyName": {
                              "type": "string"
                            },
                            "stringValue": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "functionName": {
                        "type": "string"
                      },
                      "functionOpState": {
                        "enum": [
                          "UNKNOWN",
                          "NOT_APPLICABLE",
                          "DISABLED",
                          "ENABLED"
                        ],
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FunctionalCapabilityResult": {
        "properties": {
          "response": {
            "properties": {
              "attributeInfo": {
                "properties": {},
                "type": "object"
              },
              "functionDetails": {
                "items": {
                  "properties": {
                    "attributeInfo": {
                      "properties": {},
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "propertyName": {
                      "type": "string"
                    },
                    "stringValue": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "functionName": {
                "type": "string"
              },
              "functionOpState": {
                "enum": [
                  "UNKNOWN",
                  "NOT_APPLICABLE",
                  "DISABLED",
                  "ENABLED"
                ],
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAccessPointConfigurationResponse": {
        "properties": {
          "_creationOrderIndex": {
            "type": "number"
          },
          "_isBeingChanged": {
            "type": "boolean"
          },
          "_orderedListOEAssocName": {
            "properties": {},
            "type": "object"
          },
          "_orderedListOEIndex": {
            "type": "number"
          },
          "adminStatus": {
            "type": "string"
          },
          "apHeight": {
            "type": "number"
          },
          "apMode": {
            "type": "string"
          },
          "apName": {
            "type": "string"
          },
          "authEntityClass": {
            "properties": {},
            "type": "object"
          },
          "authEntityId": {
            "properties": {},
            "type": "object"
          },
          "changeLogList": {
            "properties": {},
            "type": "object"
          },
          "deployPending": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "ethMac": {
            "type": "string"
          },
          "failoverPriority": {
            "type": "string"
          },
          "instanceCreatedOn": {
            "properties": {},
            "type": "object"
          },
          "instanceId": {
            "type": "number"
          },
          "instanceOrigin": {
            "properties": {},
            "type": "object"
          },
          "instanceTenantId": {
            "type": "string"
          },
          "instanceUpdatedOn": {
            "properties": {},
            "type": "object"
          },
          "instanceUuid": {
            "properties": {},
            "type": "object"
          },
          "instanceVersion": {
            "type": "number"
          },
          "internalKey": {
            "properties": {
              "id": {
                "type": "number"
              },
              "longType": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "lazyLoadedEntities": {
            "properties": {},
            "type": "object"
          },
          "ledBrightnessLevel": {
            "type": "integer"
          },
          "ledStatus": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "macAddress": {
            "type": "string"
          },
          "meshDTOs": {
            "items": {
              "properties": {},
              "type": "object"
            },
            "type": "array"
          },
          "primaryControllerName": {
            "type": "string"
          },
          "primaryIpAddress": {
            "type": "string"
          },
          "radioDTOs": {
            "items": {
              "properties": {
                "_creationOrderIndex": {
                  "type": "number"
                },
                "_isBeingChanged": {
                  "type": "boolean"
                },
                "_orderedListOEAssocName": {
                  "properties": {},
                  "type": "object"
                },
                "_orderedListOEIndex": {
                  "type": "number"
                },
                "adminStatus": {
                  "type": "string"
                },
                "antennaAngle": {
                  "type": "number"
                },
                "antennaElevAngle": {
                  "type": "number"
                },
                "antennaGain": {
                  "type": "integer"
                },
                "antennaPatternName": {
                  "type": "string"
                },
                "authEntityClass": {
                  "properties": {},
                  "type": "object"
                },
                "authEntityId": {
                  "properties": {},
                  "type": "object"
                },
                "changeLogList": {
                  "properties": {},
                  "type": "object"
                },
                "channelAssignmentMode": {
                  "type": "string"
                },
                "channelNumber": {
                  "type": "integer"
                },
                "channelWidth": {
                  "type": "string"
                },
                "cleanAirSI": {
                  "type": "string"
                },
                "deployPending": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "ifType": {
                  "type": "integer"
                },
                "ifTypeValue": {
                  "type": "string"
                },
                "instanceCreatedOn": {
                  "properties": {},
                  "type": "object"
                },
                "instanceId": {
                  "type": "number"
                },
                "instanceOrigin": {
                  "properties": {},
                  "type": "object"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "instanceUpdatedOn": {
                  "properties": {},
                  "type": "object"
                },
                "instanceUuid": {
                  "properties": {},
                  "type": "object"
                },
                "instanceVersion": {
                  "type": "number"
                },
                "internalKey": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "longType": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "lazyLoadedEntities": {
                  "properties": {},
                  "type": "object"
                },
                "macAddress": {
                  "type": "string"
                },
                "powerAssignmentMode": {
                  "type": "string"
                },
                "powerlevel": {
                  "type": "integer"
                },
                "radioBand": {
                  "properties": {},
                  "type": "object"
                },
                "radioRoleAssignment": {
                  "properties": {},
                  "type": "object"
                },
                "slotId": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "secondaryControllerName": {
            "type": "string"
          },
          "secondaryIpAddress": {
            "type": "string"
          },
          "tertiaryControllerName": {
            "type": "string"
          },
          "tertiaryIpAddress": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAccessPointConfigurationTaskResultResponse": {
        "items": {
          "properties": {
            "_creationOrderIndex": {
              "type": "number"
            },
            "_isBeingChanged": {
              "type": "boolean"
            },
            "_orderedListOEAssocName": {
              "properties": {},
              "type": "object"
            },
            "_orderedListOEIndex": {
              "type": "number"
            },
            "apName": {
              "type": "string"
            },
            "authEntityClass": {
              "properties": {},
              "type": "object"
            },
            "authEntityId": {
              "properties": {},
              "type": "object"
            },
            "changeLogList": {
              "properties": {},
              "type": "object"
            },
            "controllerName": {
              "type": "string"
            },
            "deployPending": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "instanceCreatedOn": {
              "properties": {},
              "type": "object"
            },
            "instanceId": {
              "type": "number"
            },
            "instanceOrigin": {
              "properties": {},
              "type": "object"
            },
            "instanceTenantId": {
              "type": "string"
            },
            "instanceUpdatedOn": {
              "properties": {},
              "type": "object"
            },
            "instanceUuid": {
              "properties": {},
              "type": "object"
            },
            "instanceVersion": {
              "type": "number"
            },
            "internalKey": {
              "properties": {
                "id": {
                  "type": "number"
                },
                "longType": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "lazyLoadedEntities": {
              "properties": {},
              "type": "object"
            },
            "locationHeirarchy": {
              "type": "string"
            },
            "macAddress": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "statusDetails": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetAccessPointRebootTaskResultResponse": {
        "items": {
          "properties": {
            "apList": {
              "items": {
                "properties": {
                  "apName": {
                    "type": "string"
                  },
                  "failureReason": {
                    "properties": {},
                    "type": "object"
                  },
                  "rebootStatus": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "wlcIP": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetAdvisoriesListResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "advisoryId": {
                  "type": "string"
                },
                "cves": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "defaultConfigMatchPattern": {
                  "type": "string"
                },
                "defaultDetectionType": {
                  "type": "string"
                },
                "detectionType": {
                  "type": "string"
                },
                "deviceCount": {
                  "type": "integer"
                },
                "hiddenDeviceCount": {
                  "type": "number"
                },
                "publicationUrl": {
                  "type": "string"
                },
                "sir": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAdvisoriesPerDeviceResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "advisoryId": {
                  "type": "string"
                },
                "cves": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "defaultConfigMatchPattern": {
                  "type": "string"
                },
                "defaultDetectionType": {
                  "type": "string"
                },
                "detectionType": {
                  "type": "string"
                },
                "deviceCount": {
                  "type": "integer"
                },
                "hiddenDeviceCount": {
                  "type": "number"
                },
                "publicationUrl": {
                  "type": "string"
                },
                "sir": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAdvisoriesSummaryResponse": {
        "properties": {
          "response": {
            "properties": {
              "CRITICAL": {
                "properties": {
                  "CONFIG": {
                    "type": "number"
                  },
                  "TOTAL": {
                    "type": "integer"
                  },
                  "VERSION": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "HIGH": {
                "properties": {
                  "CONFIG": {
                    "type": "number"
                  },
                  "TOTAL": {
                    "type": "integer"
                  },
                  "VERSION": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "INFORMATIONAL": {
                "properties": {
                  "CONFIG": {
                    "type": "number"
                  },
                  "TOTAL": {
                    "type": "number"
                  },
                  "VERSION": {
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "LOW": {
                "properties": {
                  "CONFIG": {
                    "type": "number"
                  },
                  "TOTAL": {
                    "type": "number"
                  },
                  "VERSION": {
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "MEDIUM": {
                "properties": {
                  "CONFIG": {
                    "type": "number"
                  },
                  "TOTAL": {
                    "type": "integer"
                  },
                  "VERSION": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "NA": {
                "properties": {
                  "CONFIG": {
                    "type": "number"
                  },
                  "TOTAL": {
                    "type": "number"
                  },
                  "VERSION": {
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAdvisoryIDsPerDeviceResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "advisoryIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "deviceId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAllGlobalCredentialsVResponse": {
        "properties": {
          "response": {
            "properties": {
              "cliCredential": {
                "items": {
                  "properties": {
                    "comments": {
                      "type": "string"
                    },
                    "credentialType": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "enablePassword": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceTenantId": {
                      "type": "string"
                    },
                    "instanceUuid": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "httpsRead": {
                "items": {
                  "properties": {
                    "comments": {
                      "type": "string"
                    },
                    "credentialType": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceTenantId": {
                      "type": "string"
                    },
                    "instanceUuid": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "secure": {
                      "type": "boolean"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "httpsWrite": {
                "items": {
                  "properties": {
                    "comments": {
                      "type": "string"
                    },
                    "credentialType": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceTenantId": {
                      "type": "string"
                    },
                    "instanceUuid": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "secure": {
                      "type": "boolean"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "snmpV2cRead": {
                "items": {
                  "properties": {
                    "comments": {
                      "type": "string"
                    },
                    "credentialType": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceTenantId": {
                      "type": "string"
                    },
                    "instanceUuid": {
                      "type": "string"
                    },
                    "readCommunity": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "snmpV2cWrite": {
                "items": {
                  "properties": {
                    "comments": {
                      "type": "string"
                    },
                    "credentialType": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceTenantId": {
                      "type": "string"
                    },
                    "instanceUuid": {
                      "type": "string"
                    },
                    "writeCommunity": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "snmpV3": {
                "items": {
                  "properties": {
                    "authPassword": {
                      "type": "string"
                    },
                    "authType": {
                      "type": "string"
                    },
                    "comments": {
                      "type": "string"
                    },
                    "credentialType": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceTenantId": {
                      "type": "string"
                    },
                    "instanceUuid": {
                      "type": "string"
                    },
                    "privacyPassword": {
                      "type": "string"
                    },
                    "privacyType": {
                      "type": "string"
                    },
                    "snmpMode": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAllITSMIntegrationSettingsRequest": {
        "properties": {
          "data": {
            "properties": {
              "ConnectionSettings": {
                "properties": {
                  "Auth_Password": {
                    "type": "string"
                  },
                  "Auth_UserName": {
                    "type": "string"
                  },
                  "Url": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "dypId": {
            "type": "string"
          },
          "dypInstanceId": {
            "type": "string"
          },
          "dypMajorVersion": {
            "type": "integer"
          },
          "dypName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAllITSMIntegrationSettingsResponse": {
        "items": {
          "properties": {
            "createdBy": {
              "type": "string"
            },
            "createdDate": {
              "type": "integer"
            },
            "description": {
              "type": "string"
            },
            "dypId": {
              "type": "string"
            },
            "dypMajorVersion": {
              "type": "integer"
            },
            "dypName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "schemaVersion": {
              "type": "number"
            },
            "softwareVersionLog": {
              "items": {
                "type": "object"
              },
              "type": "array"
            },
            "tenantId": {
              "type": "string"
            },
            "uniqueKey": {
              "type": "string"
            },
            "updatedBy": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetAllUserDefinedFieldsResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAllowedMacAddressCountResponse": {
        "properties": {
          "response": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAllowedMacAddressResponse": {
        "items": {
          "properties": {
            "category": {
              "type": "integer"
            },
            "lastModified": {
              "type": "integer"
            },
            "macAddress": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetApplicationPolicyDefaultResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "cfsChangeInfo": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "contractList": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "createTime": {
                  "type": "integer"
                },
                "customProvisions": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "deletePolicyStatus": {
                  "enum": [
                    "NONE",
                    "DELETED",
                    "RESTORED"
                  ],
                  "type": "string"
                },
                "deployed": {
                  "type": "boolean"
                },
                "displayName": {
                  "type": "string"
                },
                "exclusiveContract": {
                  "properties": {
                    "clause": {
                      "items": {
                        "properties": {
                          "displayName": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "instanceCreatedOn": {
                            "type": "integer"
                          },
                          "instanceId": {
                            "type": "integer"
                          },
                          "instanceUpdatedOn": {
                            "type": "integer"
                          },
                          "instanceVersion": {
                            "type": "number"
                          },
                          "priority": {
                            "type": "integer"
                          },
                          "relevanceLevel": {
                            "enum": [
                              "BUSINESS_RELEVANT",
                              "BUSINESS_IRRELEVANT",
                              "DEFAULT"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "BUSINESS_RELEVANCE"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceCreatedOn": {
                      "type": "integer"
                    },
                    "instanceId": {
                      "type": "integer"
                    },
                    "instanceUpdatedOn": {
                      "type": "integer"
                    },
                    "instanceVersion": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "string"
                },
                "identitySource": {
                  "properties": {
                    "displayName": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceCreatedOn": {
                      "type": "integer"
                    },
                    "instanceId": {
                      "type": "integer"
                    },
                    "instanceUpdatedOn": {
                      "type": "integer"
                    },
                    "instanceVersion": {
                      "type": "number"
                    },
                    "state": {
                      "enum": [
                        "INACTIVE",
                        "ACTIVE",
                        "DELETED"
                      ],
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "APIC_EM",
                        "NBAR"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "instanceCreatedOn": {
                  "type": "integer"
                },
                "instanceId": {
                  "type": "integer"
                },
                "instanceUpdatedOn": {
                  "type": "integer"
                },
                "instanceVersion": {
                  "type": "number"
                },
                "internal": {
                  "type": "boolean"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "isEnabled": {
                  "type": "boolean"
                },
                "isScopeStale": {
                  "type": "boolean"
                },
                "isSeeded": {
                  "type": "boolean"
                },
                "isStale": {
                  "type": "boolean"
                },
                "iseReserved": {
                  "type": "boolean"
                },
                "lastUpdateTime": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "policyStatus": {
                  "enum": [
                    "ENABLED",
                    "DISABLED",
                    "MONITOR"
                  ],
                  "type": "string"
                },
                "priority": {
                  "type": "integer"
                },
                "producer": {
                  "properties": {
                    "displayName": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceCreatedOn": {
                      "type": "integer"
                    },
                    "instanceId": {
                      "type": "integer"
                    },
                    "instanceUpdatedOn": {
                      "type": "integer"
                    },
                    "instanceVersion": {
                      "type": "number"
                    },
                    "scalableGroup": {
                      "items": {
                        "properties": {
                          "idRef": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "provisioningState": {
                  "enum": [
                    "UNKNOWN",
                    "DEFINED",
                    "DEPLOYED",
                    "FAILED",
                    "VERIFIED",
                    "DEPLOYING",
                    "SUBMITTED",
                    "PREPROCESSED",
                    "VALIDATED"
                  ],
                  "type": "string"
                },
                "pushed": {
                  "type": "boolean"
                },
                "qualifier": {
                  "type": "string"
                },
                "resourceVersion": {
                  "type": "number"
                },
                "targetIdList": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetApplicationPolicyQueuingProfileCountResponse": {
        "properties": {
          "response": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetApplicationPolicyQueuingProfileResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "cfsChangeInfo": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "clause": {
                  "items": {
                    "properties": {
                      "displayName": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "instanceCreatedOn": {
                        "type": "integer"
                      },
                      "instanceId": {
                        "type": "integer"
                      },
                      "instanceUpdatedOn": {
                        "type": "integer"
                      },
                      "instanceVersion": {
                        "type": "number"
                      },
                      "interfaceSpeedBandwidthClauses": {
                        "items": {
                          "properties": {
                            "displayName": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "instanceCreatedOn": {
                              "type": "integer"
                            },
                            "instanceId": {
                              "type": "integer"
                            },
                            "instanceUpdatedOn": {
                              "type": "integer"
                            },
                            "instanceVersion": {
                              "type": "number"
                            },
                            "interfaceSpeed": {
                              "enum": [
                                "ALL",
                                "HUNDRED_GBPS",
                                "TEN_GBPS",
                                "ONE_GBPS",
                                "HUNDRED_MBPS",
                                "TEN_MBPS",
                                "ONE_MBPS"
                              ],
                              "type": "string"
                            },
                            "tcBandwidthSettings": {
                              "items": {
                                "properties": {
                                  "bandwidthPercentage": {
                                    "type": "integer"
                                  },
                                  "displayName": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "instanceCreatedOn": {
                                    "type": "integer"
                                  },
                                  "instanceId": {
                                    "type": "integer"
                                  },
                                  "instanceUpdatedOn": {
                                    "type": "integer"
                                  },
                                  "instanceVersion": {
                                    "type": "number"
                                  },
                                  "trafficClass": {
                                    "enum": [
                                      "BROADCAST_VIDEO",
                                      "REAL_TIME_INTERACTIVE",
                                      "VOIP_TELEPHONY",
                                      "SCAVENGER",
                                      "TRANSACTIONAL_DATA",
                                      "MULTIMEDIA_CONFERENCING",
                                      "NETWORK_CONTROL",
                                      "MULTIMEDIA_STREAMING",
                                      "BEST_EFFORT",
                                      "SIGNALING",
                                      "BULK_DATA",
                                      "OPS_ADMIN_MGMT"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "isCommonBetweenAllInterfaceSpeeds": {
                        "type": "boolean"
                      },
                      "priority": {
                        "type": "integer"
                      },
                      "tcDscpSettings": {
                        "items": {
                          "properties": {
                            "displayName": {
                              "type": "string"
                            },
                            "dscp": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "instanceCreatedOn": {
                              "type": "integer"
                            },
                            "instanceId": {
                              "type": "integer"
                            },
                            "instanceUpdatedOn": {
                              "type": "integer"
                            },
                            "instanceVersion": {
                              "type": "number"
                            },
                            "trafficClass": {
                              "enum": [
                                "BROADCAST_VIDEO",
                                "REAL_TIME_INTERACTIVE",
                                "VOIP_TELEPHONY",
                                "SCAVENGER",
                                "TRANSACTIONAL_DATA",
                                "MULTIMEDIA_CONFERENCING",
                                "NETWORK_CONTROL",
                                "MULTIMEDIA_STREAMING",
                                "BEST_EFFORT",
                                "SIGNALING",
                                "BULK_DATA",
                                "OPS_ADMIN_MGMT"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "type": {
                        "enum": [
                          "BANDWIDTH",
                          "DSCP_CUSTOMIZATION"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "contractClassifier": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "createTime": {
                  "type": "integer"
                },
                "customProvisions": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "deployed": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "genId": {
                  "type": "number"
                },
                "id": {
                  "type": "string"
                },
                "instanceCreatedOn": {
                  "type": "integer"
                },
                "instanceId": {
                  "type": "integer"
                },
                "instanceUpdatedOn": {
                  "type": "integer"
                },
                "instanceVersion": {
                  "type": "number"
                },
                "internal": {
                  "type": "boolean"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "isSeeded": {
                  "type": "boolean"
                },
                "isStale": {
                  "type": "boolean"
                },
                "iseReserved": {
                  "type": "boolean"
                },
                "lastUpdateTime": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "provisioningState": {
                  "enum": [
                    "UNKNOWN",
                    "DEFINED",
                    "DEPLOYED",
                    "FAILED",
                    "VERIFIED",
                    "DEPLOYING",
                    "SUBMITTED",
                    "PREPROCESSED",
                    "VALIDATED"
                  ],
                  "type": "string"
                },
                "pushed": {
                  "type": "boolean"
                },
                "qualifier": {
                  "type": "string"
                },
                "resourceVersion": {
                  "type": "number"
                },
                "targetIdList": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetApplicationPolicyResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "advancedPolicyScope": {
                  "properties": {
                    "advancedPolicyScopeElement": {
                      "items": {
                        "properties": {
                          "displayName": {
                            "type": "string"
                          },
                          "groupId": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "id": {
                            "type": "string"
                          },
                          "instanceCreatedOn": {
                            "type": "integer"
                          },
                          "instanceId": {
                            "type": "integer"
                          },
                          "instanceUpdatedOn": {
                            "type": "integer"
                          },
                          "instanceVersion": {
                            "type": "number"
                          },
                          "ssid": {
                            "items": {
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceCreatedOn": {
                      "type": "integer"
                    },
                    "instanceId": {
                      "type": "integer"
                    },
                    "instanceUpdatedOn": {
                      "type": "integer"
                    },
                    "instanceVersion": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "cfsChangeInfo": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "consumer": {
                  "properties": {
                    "displayName": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceCreatedOn": {
                      "type": "integer"
                    },
                    "instanceId": {
                      "type": "integer"
                    },
                    "instanceUpdatedOn": {
                      "type": "integer"
                    },
                    "instanceVersion": {
                      "type": "number"
                    },
                    "scalableGroup": {
                      "items": {
                        "properties": {
                          "idRef": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "contractList": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "createTime": {
                  "type": "integer"
                },
                "customProvisions": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "deletePolicyStatus": {
                  "enum": [
                    "NONE",
                    "DELETED",
                    "RESTORED"
                  ],
                  "type": "string"
                },
                "deployed": {
                  "type": "boolean"
                },
                "displayName": {
                  "type": "string"
                },
                "exclusiveContract": {
                  "properties": {
                    "clause": {
                      "items": {
                        "properties": {
                          "deviceRemovalBehavior": {
                            "enum": [
                              "DELETE",
                              "RESTORE",
                              "IGNORE"
                            ],
                            "type": "string"
                          },
                          "displayName": {
                            "type": "string"
                          },
                          "hostTrackingEnabled": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "instanceCreatedOn": {
                            "type": "integer"
                          },
                          "instanceId": {
                            "type": "integer"
                          },
                          "instanceUpdatedOn": {
                            "type": "integer"
                          },
                          "instanceVersion": {
                            "type": "number"
                          },
                          "priority": {
                            "type": "integer"
                          },
                          "relevanceLevel": {
                            "enum": [
                              "BUSINESS_RELEVANT",
                              "BUSINESS_IRRELEVANT",
                              "DEFAULT"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "BUSINESS_RELEVANCE",
                              "APPLICATION_POLICY_KNOBS"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceCreatedOn": {
                      "type": "integer"
                    },
                    "instanceId": {
                      "type": "integer"
                    },
                    "instanceUpdatedOn": {
                      "type": "integer"
                    },
                    "instanceVersion": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "string"
                },
                "identitySource": {
                  "properties": {
                    "displayName": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceCreatedOn": {
                      "type": "integer"
                    },
                    "instanceId": {
                      "type": "integer"
                    },
                    "instanceUpdatedOn": {
                      "type": "integer"
                    },
                    "instanceVersion": {
                      "type": "number"
                    },
                    "state": {
                      "enum": [
                        "INACTIVE",
                        "ACTIVE",
                        "DELETED"
                      ],
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "APIC_EM",
                        "NBAR"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "instanceCreatedOn": {
                  "type": "integer"
                },
                "instanceId": {
                  "type": "integer"
                },
                "instanceUpdatedOn": {
                  "type": "integer"
                },
                "instanceVersion": {
                  "type": "number"
                },
                "internal": {
                  "type": "boolean"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "isEnabled": {
                  "type": "boolean"
                },
                "isScopeStale": {
                  "type": "boolean"
                },
                "isSeeded": {
                  "type": "boolean"
                },
                "isStale": {
                  "type": "boolean"
                },
                "iseReserved": {
                  "type": "boolean"
                },
                "lastUpdateTime": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "policyScope": {
                  "type": "string"
                },
                "policyStatus": {
                  "enum": [
                    "ENABLED",
                    "DISABLED",
                    "MONITOR"
                  ],
                  "type": "string"
                },
                "priority": {
                  "type": "integer"
                },
                "producer": {
                  "properties": {
                    "displayName": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceCreatedOn": {
                      "type": "integer"
                    },
                    "instanceId": {
                      "type": "integer"
                    },
                    "instanceUpdatedOn": {
                      "type": "integer"
                    },
                    "instanceVersion": {
                      "type": "number"
                    },
                    "scalableGroup": {
                      "items": {
                        "properties": {
                          "idRef": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "provisioningState": {
                  "enum": [
                    "UNKNOWN",
                    "DEFINED",
                    "DEPLOYED",
                    "FAILED",
                    "VERIFIED",
                    "DEPLOYING",
                    "SUBMITTED",
                    "PREPROCESSED",
                    "VALIDATED"
                  ],
                  "type": "string"
                },
                "pushed": {
                  "type": "boolean"
                },
                "qualifier": {
                  "type": "string"
                },
                "resourceVersion": {
                  "type": "number"
                },
                "targetIdList": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetApplicationSetsCountResponse": {
        "properties": {
          "response": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetApplicationSetsResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "identitySource": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetApplicationsCountResponse": {
        "properties": {
          "response": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetApplicationsResponse": {
        "items": {
          "properties": {
            "applicationSet": {
              "properties": {
                "idRef": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "networkApplications": {
              "items": {
                "properties": {
                  "appProtocol": {
                    "type": "string"
                  },
                  "applicationSubType": {
                    "type": "string"
                  },
                  "applicationType": {
                    "type": "string"
                  },
                  "categoryId": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "dscp": {
                    "type": "string"
                  },
                  "engineId": {
                    "type": "string"
                  },
                  "helpString": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "ignoreConflict": {
                    "type": "string"
                  },
                  "longDescription": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "popularity": {
                    "type": "string"
                  },
                  "rank": {
                    "type": "string"
                  },
                  "serverName": {
                    "type": "string"
                  },
                  "trafficClass": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "networkIdentity": {
              "items": {
                "properties": {
                  "displayName": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "lowerPort": {
                    "type": "string"
                  },
                  "ports": {
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "upperPort": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetAuditLogParentRecordsResponse": {
        "items": {
          "properties": {
            "tags": {
              "items": {
                "type": "object"
              },
              "type": "array"
            },
            "additionalDetails": {
              "properties": {},
              "type": "object"
            },
            "category": {
              "type": "string"
            },
            "childCount": {
              "type": "number"
            },
            "ciscoDnaEventLink": {
              "type": "string"
            },
            "context": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "details": {
              "properties": {},
              "type": "object"
            },
            "domain": {
              "type": "string"
            },
            "eventHierarchy": {
              "type": "string"
            },
            "eventId": {
              "type": "string"
            },
            "i18n": {
              "type": "string"
            },
            "instanceId": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "messageParams": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "network": {
              "type": "string"
            },
            "note": {
              "type": "string"
            },
            "parentInstanceId": {
              "type": "string"
            },
            "severity": {
              "type": "integer"
            },
            "source": {
              "type": "string"
            },
            "subDomain": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "timestamp": {
              "type": "integer"
            },
            "tntId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "userId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetAuditLogRecordsResponse": {
        "items": {
          "properties": {
            "tags": {
              "items": {
                "type": "object"
              },
              "type": "array"
            },
            "additionalDetails": {
              "properties": {},
              "type": "object"
            },
            "category": {
              "type": "string"
            },
            "childCount": {
              "type": "number"
            },
            "ciscoDnaEventLink": {
              "type": "string"
            },
            "context": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "details": {
              "properties": {},
              "type": "object"
            },
            "domain": {
              "type": "string"
            },
            "eventHierarchy": {
              "type": "string"
            },
            "eventId": {
              "type": "string"
            },
            "i18n": {
              "type": "string"
            },
            "instanceId": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "messageParams": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "network": {
              "type": "string"
            },
            "note": {
              "type": "string"
            },
            "parentInstanceId": {
              "type": "string"
            },
            "severity": {
              "type": "integer"
            },
            "source": {
              "type": "string"
            },
            "subDomain": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "timestamp": {
              "type": "integer"
            },
            "tntId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "userId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetAuditLogSummaryResponse": {
        "items": {
          "properties": {
            "count": {
              "type": "integer"
            },
            "maxTimestamp": {
              "type": "integer"
            },
            "minTimestamp": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetAuthenticationAndPolicyServersResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "accountingPort": {
                  "type": "string"
                },
                "authenticationPort": {
                  "type": "string"
                },
                "ciscoIseDtos": {
                  "items": {
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "externalCiscoIseIpAddrDtos": {
                        "properties": {
                          "externalCiscoIseIpAddresses": {
                            "items": {
                              "properties": {
                                "externalIpAddress": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "failureReason": {
                        "type": "string"
                      },
                      "fqdn": {
                        "type": "string"
                      },
                      "instanceUuid": {
                        "type": "string"
                      },
                      "ipAddress": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "role": {
                        "enum": [
                          "PRIMARY",
                          "SECONDARY",
                          "PXGRID"
                        ],
                        "type": "string"
                      },
                      "sshkey": {
                        "type": "string"
                      },
                      "subscriberName": {
                        "type": "string"
                      },
                      "trustState": {
                        "enum": [
                          "TRUSTED",
                          "UNTRUSTED",
                          "INIT"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "userName": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "encryptionKey": {
                  "type": "string"
                },
                "encryptionScheme": {
                  "enum": [
                    "KEYWRAP",
                    "RADSEC"
                  ],
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "ipAddress": {
                  "type": "string"
                },
                "isIseEnabled": {
                  "type": "boolean"
                },
                "iseEnabled": {
                  "type": "boolean"
                },
                "messageKey": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "protocol": {
                  "enum": [
                    "TACACS",
                    "RADIUS",
                    "RADIUS_TACACS"
                  ],
                  "type": "string"
                },
                "pxgridEnabled": {
                  "type": "boolean"
                },
                "retries": {
                  "type": "integer"
                },
                "role": {
                  "type": "string"
                },
                "sharedSecret": {
                  "type": "string"
                },
                "state": {
                  "enum": [
                    "ACTIVE",
                    "INACTIVE",
                    "RBAC_SUCCESS",
                    "RBAC_FAILURE",
                    "DELETED",
                    "FAILED",
                    "INPROGRESS"
                  ],
                  "type": "string"
                },
                "timeoutSeconds": {
                  "type": "integer"
                },
                "useDnacCertForPxgrid": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetBorderDeviceDetailFromSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "payload": {
            "properties": {
              "akcSettingsCfs": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "authEntityClass": {
                "type": "integer"
              },
              "authEntityId": {
                "type": "integer"
              },
              "cfsChangeInfo": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "configs": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "createTime": {
                "type": "integer"
              },
              "customProvisions": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "deployPending": {
                "type": "string"
              },
              "deployed": {
                "type": "boolean"
              },
              "deviceInterfaceInfo": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "deviceSettings": {
                "properties": {
                  "connectedTo": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "cpu": {
                    "type": "number"
                  },
                  "deployPending": {
                    "type": "string"
                  },
                  "dhcpEnabled": {
                    "type": "boolean"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "extConnectivitySettings": {
                    "items": {
                      "properties": {
                        "deployPending": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        },
                        "externalDomainProtocolNumber": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "instanceId": {
                          "type": "integer"
                        },
                        "instanceTenantId": {
                          "type": "string"
                        },
                        "instanceVersion": {
                          "type": "integer"
                        },
                        "interfaceUuid": {
                          "type": "string"
                        },
                        "l2Handoff": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "l3Handoff": {
                          "items": {
                            "properties": {
                              "deployPending": {
                                "type": "string"
                              },
                              "displayName": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "instanceId": {
                                "type": "integer"
                              },
                              "instanceTenantId": {
                                "type": "string"
                              },
                              "instanceVersion": {
                                "type": "number"
                              },
                              "localIpAddress": {
                                "type": "string"
                              },
                              "remoteIpAddress": {
                                "type": "string"
                              },
                              "virtualNetwork": {
                                "properties": {
                                  "idRef": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "vlanId": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "policyPropagationEnabled": {
                          "type": "boolean"
                        },
                        "policySgtTag": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "externalConnectivityIpPool": {
                    "type": "string"
                  },
                  "externalDomainRoutingProtocol": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "instanceId": {
                    "type": "integer"
                  },
                  "instanceTenantId": {
                    "type": "string"
                  },
                  "instanceVersion": {
                    "type": "integer"
                  },
                  "internalDomainProtocolNumber": {
                    "type": "string"
                  },
                  "memory": {
                    "type": "number"
                  },
                  "nodeType": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "storage": {
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "displayName": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "instanceId": {
                "type": "integer"
              },
              "instanceTenantId": {
                "type": "string"
              },
              "instanceVersion": {
                "type": "integer"
              },
              "isSeeded": {
                "type": "boolean"
              },
              "isStale": {
                "type": "boolean"
              },
              "lastUpdateTime": {
                "type": "integer"
              },
              "managedSites": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "namespace": {
                "type": "string"
              },
              "networkDeviceId": {
                "type": "string"
              },
              "networkWideSettings": {
                "properties": {
                  "aaa": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "cmx": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "deployPending": {
                    "type": "string"
                  },
                  "dhcp": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "ipAddress": {
                          "properties": {
                            "address": {
                              "type": "string"
                            },
                            "addressType": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "paddedAddress": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "dns": {
                    "items": {
                      "properties": {
                        "domainName": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "ip": {
                          "properties": {
                            "address": {
                              "type": "string"
                            },
                            "addressType": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "paddedAddress": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "id": {
                    "type": "string"
                  },
                  "instanceId": {
                    "type": "integer"
                  },
                  "instanceTenantId": {
                    "type": "string"
                  },
                  "instanceVersion": {
                    "type": "integer"
                  },
                  "ldap": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "nativeVlan": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "netflow": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "ntp": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "snmp": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "syslogs": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "otherDevice": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "provisioningState": {
                "type": "string"
              },
              "resourceVersion": {
                "type": "integer"
              },
              "roles": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "saveWanConnectivityDetailsOnly": {
                "type": "boolean"
              },
              "siteId": {
                "type": "string"
              },
              "targetIdList": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "transitNetworks": {
                "items": {
                  "properties": {
                    "idRef": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "type": {
                "type": "string"
              },
              "virtualNetwork": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "wlan": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetBusinessAPIExecutionDetailsResponse": {
        "properties": {
          "bapiExecutionId": {
            "type": "string"
          },
          "bapiKey": {
            "type": "string"
          },
          "bapiName": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "endTimeEpoch": {
            "type": "integer"
          },
          "runtimeInstanceId": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "startTimeEpoch": {
            "type": "integer"
          },
          "status": {
            "enum": [
              "SUCCESS",
              "FAILURE",
              "IN_PROGRESS",
              "PENDING_FOR_EXECUTION"
            ],
            "type": "string"
          },
          "timeDuration": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetCMDBSyncStatusRequest": {
        "type": "string"
      },
      "GetCMDBSyncStatusResponse": {
        "items": {
          "properties": {
            "devices": {
              "items": {
                "properties": {
                  "deviceId": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "failureCount": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "successCount": {
              "type": "string"
            },
            "syncTime": {
              "type": "string"
            },
            "unknownErrorCount": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetClientDetailResponse": {
        "properties": {
          "connectionInfo": {
            "properties": {
              "band": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "channelWidth": {
                "type": "string"
              },
              "hostType": {
                "type": "string"
              },
              "nwDeviceMac": {
                "type": "string"
              },
              "nwDeviceName": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "spatialStream": {
                "type": "string"
              },
              "timestamp": {
                "type": "integer"
              },
              "uapsd": {
                "type": "string"
              },
              "wmm": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "detail": {
            "properties": {
              "apGroup": {
                "properties": {},
                "type": "object"
              },
              "authType": {
                "type": "string"
              },
              "avgRssi": {
                "properties": {},
                "type": "object"
              },
              "avgSnr": {
                "properties": {},
                "type": "object"
              },
              "channel": {
                "type": "string"
              },
              "clientConnection": {
                "type": "string"
              },
              "clientType": {
                "type": "string"
              },
              "connectedDevice": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "connectionStatus": {
                "type": "string"
              },
              "dataRate": {
                "type": "string"
              },
              "dnsFailure": {
                "properties": {},
                "type": "object"
              },
              "dnsSuccess": {
                "properties": {},
                "type": "object"
              },
              "frequency": {
                "type": "string"
              },
              "healthScore": {
                "items": {
                  "properties": {
                    "healthType": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "score": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "hostIpV4": {
                "type": "string"
              },
              "hostIpV6": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "hostMac": {
                "type": "string"
              },
              "hostName": {
                "type": "string"
              },
              "hostOs": {
                "properties": {},
                "type": "object"
              },
              "hostType": {
                "type": "string"
              },
              "hostVersion": {
                "properties": {},
                "type": "object"
              },
              "id": {
                "type": "string"
              },
              "iosCapable": {
                "type": "boolean"
              },
              "issueCount": {
                "type": "number"
              },
              "lastUpdated": {
                "type": "integer"
              },
              "location": {
                "properties": {},
                "type": "object"
              },
              "onboarding": {
                "properties": {
                  "aaaRootcauseList": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "aaaServerIp": {
                    "type": "string"
                  },
                  "assocDoneTime": {
                    "properties": {},
                    "type": "object"
                  },
                  "assocRootcauseList": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "authDoneTime": {
                    "properties": {},
                    "type": "object"
                  },
                  "averageAssocDuration": {
                    "properties": {},
                    "type": "object"
                  },
                  "averageAuthDuration": {
                    "properties": {},
                    "type": "object"
                  },
                  "averageDhcpDuration": {
                    "properties": {},
                    "type": "object"
                  },
                  "averageRunDuration": {
                    "properties": {},
                    "type": "object"
                  },
                  "dhcpDoneTime": {
                    "properties": {},
                    "type": "object"
                  },
                  "dhcpRootcauseList": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "dhcpServerIp": {
                    "properties": {},
                    "type": "object"
                  },
                  "maxAssocDuration": {
                    "properties": {},
                    "type": "object"
                  },
                  "maxAuthDuration": {
                    "properties": {},
                    "type": "object"
                  },
                  "maxDhcpDuration": {
                    "properties": {},
                    "type": "object"
                  },
                  "maxRunDuration": {
                    "properties": {},
                    "type": "object"
                  },
                  "otherRootcauseList": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "onboardingTime": {
                "properties": {},
                "type": "object"
              },
              "port": {
                "properties": {},
                "type": "object"
              },
              "rssi": {
                "type": "string"
              },
              "rxBytes": {
                "type": "string"
              },
              "snr": {
                "type": "string"
              },
              "ssid": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              },
              "txBytes": {
                "type": "string"
              },
              "userId": {
                "properties": {},
                "type": "object"
              },
              "vlanId": {
                "type": "string"
              },
              "vnid": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "topology": {
            "properties": {
              "links": {
                "items": {
                  "properties": {
                    "id": {
                      "properties": {},
                      "type": "object"
                    },
                    "label": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "linkStatus": {
                      "type": "string"
                    },
                    "portUtilization": {
                      "properties": {},
                      "type": "object"
                    },
                    "source": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "nodes": {
                "items": {
                  "properties": {
                    "clients": {
                      "properties": {},
                      "type": "object"
                    },
                    "connectedDevice": {
                      "properties": {},
                      "type": "object"
                    },
                    "count": {
                      "properties": {},
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "deviceType": {
                      "type": "string"
                    },
                    "fabricGroup": {
                      "properties": {},
                      "type": "object"
                    },
                    "family": {
                      "properties": {},
                      "type": "object"
                    },
                    "healthScore": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "level": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "nodeType": {
                      "type": "string"
                    },
                    "platformId": {
                      "properties": {},
                      "type": "object"
                    },
                    "radioFrequency": {
                      "properties": {},
                      "type": "object"
                    },
                    "role": {
                      "type": "string"
                    },
                    "softwareVersion": {
                      "properties": {},
                      "type": "object"
                    },
                    "userId": {
                      "properties": {},
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "GetClientEnrichmentDetailsResponse": {
        "items": {
          "properties": {
            "connectedDevice": {
              "items": {
                "properties": {
                  "deviceDetails": {
                    "properties": {
                      "apManagerInterfaceIp": {
                        "type": "string"
                      },
                      "associatedWlcIp": {
                        "type": "string"
                      },
                      "bootDateTime": {
                        "properties": {},
                        "type": "object"
                      },
                      "cisco360view": {
                        "type": "string"
                      },
                      "collectionInterval": {
                        "type": "string"
                      },
                      "collectionStatus": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "errorDescription": {
                        "properties": {},
                        "type": "object"
                      },
                      "family": {
                        "type": "string"
                      },
                      "hostname": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "instanceUuid": {
                        "type": "string"
                      },
                      "interfaceCount": {
                        "properties": {},
                        "type": "object"
                      },
                      "inventoryStatusDetail": {
                        "type": "string"
                      },
                      "lastUpdateTime": {
                        "type": "integer"
                      },
                      "lastUpdated": {
                        "type": "string"
                      },
                      "lineCardCount": {
                        "properties": {},
                        "type": "object"
                      },
                      "lineCardId": {
                        "properties": {},
                        "type": "object"
                      },
                      "location": {
                        "properties": {},
                        "type": "object"
                      },
                      "locationName": {
                        "properties": {},
                        "type": "object"
                      },
                      "macAddress": {
                        "type": "string"
                      },
                      "managementIpAddress": {
                        "type": "string"
                      },
                      "memorySize": {
                        "type": "string"
                      },
                      "neighborTopology": {
                        "items": {
                          "properties": {
                            "links": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "label": {
                                    "items": {
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "linkStatus": {
                                    "type": "string"
                                  },
                                  "portUtilization": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "source": {
                                    "type": "string"
                                  },
                                  "target": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "nodes": {
                              "items": {
                                "properties": {
                                  "clients": {
                                    "type": "number"
                                  },
                                  "count": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "deviceType": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "fabricGroup": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "family": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "healthScore": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "ip": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "level": {
                                    "type": "number"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "nodeType": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "platformId": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "radioFrequency": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "softwareVersion": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "userId": {
                                    "properties": {},
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "platformId": {
                        "type": "string"
                      },
                      "reachabilityFailureReason": {
                        "type": "string"
                      },
                      "reachabilityStatus": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "roleSource": {
                        "type": "string"
                      },
                      "serialNumber": {
                        "type": "string"
                      },
                      "series": {
                        "type": "string"
                      },
                      "snmpContact": {
                        "type": "string"
                      },
                      "snmpLocation": {
                        "type": "string"
                      },
                      "softwareVersion": {
                        "type": "string"
                      },
                      "tagCount": {
                        "type": "string"
                      },
                      "tunnelUdpPort": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "upTime": {
                        "type": "string"
                      },
                      "waasDeviceMode": {
                        "properties": {},
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "issueDetails": {
              "properties": {
                "issue": {
                  "items": {
                    "properties": {
                      "impactedHosts": {
                        "items": {
                          "properties": {
                            "connectedInterface": {
                              "type": "string"
                            },
                            "failedAttempts": {
                              "type": "integer"
                            },
                            "hostName": {
                              "type": "string"
                            },
                            "hostOs": {
                              "type": "string"
                            },
                            "hostType": {
                              "type": "string"
                            },
                            "location": {
                              "properties": {
                                "apsImpacted": {
                                  "items": {
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "area": {
                                  "type": "string"
                                },
                                "building": {
                                  "type": "string"
                                },
                                "floor": {
                                  "properties": {},
                                  "type": "object"
                                },
                                "siteId": {
                                  "type": "string"
                                },
                                "siteType": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "macAddress": {
                              "type": "string"
                            },
                            "ssid": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "issueCategory": {
                        "type": "string"
                      },
                      "issueDescription": {
                        "type": "string"
                      },
                      "issueEntity": {
                        "type": "string"
                      },
                      "issueEntityValue": {
                        "type": "string"
                      },
                      "issueId": {
                        "type": "string"
                      },
                      "issueName": {
                        "type": "string"
                      },
                      "issuePriority": {
                        "type": "string"
                      },
                      "issueSeverity": {
                        "type": "string"
                      },
                      "issueSource": {
                        "type": "string"
                      },
                      "issueSummary": {
                        "type": "string"
                      },
                      "issueTimestamp": {
                        "type": "integer"
                      },
                      "suggestedActions": {
                        "items": {
                          "properties": {
                            "message": {
                              "type": "string"
                            },
                            "steps": {
                              "items": {
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "userDetails": {
              "properties": {
                "authType": {
                  "properties": {},
                  "type": "object"
                },
                "clientConnection": {
                  "type": "string"
                },
                "connectedDevice": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "connectionStatus": {
                  "type": "string"
                },
                "dataRate": {
                  "properties": {},
                  "type": "object"
                },
                "healthScore": {
                  "items": {
                    "properties": {
                      "healthType": {
                        "type": "string"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "score": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "hostIpV4": {
                  "type": "string"
                },
                "hostIpV6": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "hostMac": {
                  "type": "string"
                },
                "hostName": {
                  "properties": {},
                  "type": "object"
                },
                "hostOs": {
                  "properties": {},
                  "type": "object"
                },
                "hostType": {
                  "type": "string"
                },
                "hostVersion": {
                  "properties": {},
                  "type": "object"
                },
                "id": {
                  "type": "string"
                },
                "issueCount": {
                  "type": "number"
                },
                "lastUpdated": {
                  "type": "integer"
                },
                "location": {
                  "properties": {},
                  "type": "object"
                },
                "port": {
                  "properties": {},
                  "type": "object"
                },
                "rssi": {
                  "properties": {},
                  "type": "object"
                },
                "snr": {
                  "properties": {},
                  "type": "object"
                },
                "ssid": {
                  "properties": {},
                  "type": "object"
                },
                "subType": {
                  "properties": {},
                  "type": "object"
                },
                "userId": {
                  "type": "string"
                },
                "vlanId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetComplianceDetailCountResponse": {
        "properties": {
          "response": {
            "type": "number"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetComplianceDetailResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "category": {
                  "type": "string"
                },
                "complianceType": {
                  "type": "string"
                },
                "deviceUuid": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "lastSyncTime": {
                  "type": "string"
                },
                "lastUpdateTime": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetComplianceStatusCountResponse": {
        "properties": {
          "response": {
            "type": "number"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetComplianceStatusResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "complianceStatus": {
                  "type": "string"
                },
                "deviceUuid": {
                  "type": "string"
                },
                "lastUpdateTime": {
                  "type": "number"
                },
                "message": {
                  "type": "string"
                },
                "scheduleTime": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetConnectorTypesResponse": {
        "items": {
          "properties": {
            "connectorType": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "isCustomConnector": {
              "type": "string"
            },
            "isDefaultSupported": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetControlPlaneDeviceFromSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "deviceManagementIpAddress": {
            "type": "string"
          },
          "deviceName": {
            "type": "string"
          },
          "roles": {
            "type": "string"
          },
          "routeDistributionProtocol": {
            "enum": [
              "LISP_BGP",
              "LISP_PUB_SUB"
            ],
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDefaultAuthenticationProfileFromSDAFabricResponse": {
        "items": {
          "properties": {
            "authenticateTemplateName": {
              "type": "string"
            },
            "authenticationOrder": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "dot1xToMabFallbackTimeout": {
              "type": "string"
            },
            "numberOfHosts": {
              "type": "string"
            },
            "siteNameHierarchy": {
              "type": "string"
            },
            "status": {
              "enum": [
                "success",
                "failed"
              ],
              "type": "string"
            },
            "wakeOnLan": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetDeviceByIdResponse": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "dayZeroConfig": {
            "properties": {
              "config": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dayZeroConfigPreview": {
            "properties": {},
            "type": "object"
          },
          "deviceInfo": {
            "properties": {
              "tags": {
                "properties": {},
                "type": "object"
              },
              "aaaCredentials": {
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "addedOn": {
                "type": "number"
              },
              "addnMacAddrs": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "agentType": {
                "type": "string"
              },
              "authStatus": {
                "type": "string"
              },
              "authenticatedMicNumber": {
                "type": "string"
              },
              "authenticatedSudiSerialNo": {
                "type": "string"
              },
              "capabilitiesSupported": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cmState": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "deviceSudiSerialNos": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "deviceType": {
                "type": "string"
              },
              "featuresSupported": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "fileSystemList": {
                "items": {
                  "properties": {
                    "freespace": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "readable": {
                      "type": "boolean"
                    },
                    "size": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "writeable": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "firstContact": {
                "type": "number"
              },
              "hostname": {
                "type": "string"
              },
              "httpHeaders": {
                "items": {
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "imageFile": {
                "type": "string"
              },
              "imageVersion": {
                "type": "string"
              },
              "ipInterfaces": {
                "items": {
                  "properties": {
                    "ipv4Address": {
                      "properties": {},
                      "type": "object"
                    },
                    "ipv6AddressList": {
                      "items": {
                        "properties": {},
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "macAddress": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "lastContact": {
                "type": "number"
              },
              "lastSyncTime": {
                "type": "number"
              },
              "lastUpdateOn": {
                "type": "number"
              },
              "location": {
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "altitude": {
                    "type": "string"
                  },
                  "latitude": {
                    "type": "string"
                  },
                  "longitude": {
                    "type": "string"
                  },
                  "siteId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "macAddress": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "neighborLinks": {
                "items": {
                  "properties": {
                    "localInterfaceName": {
                      "type": "string"
                    },
                    "localMacAddress": {
                      "type": "string"
                    },
                    "localShortInterfaceName": {
                      "type": "string"
                    },
                    "remoteDeviceName": {
                      "type": "string"
                    },
                    "remoteInterfaceName": {
                      "type": "string"
                    },
                    "remoteMacAddress": {
                      "type": "string"
                    },
                    "remotePlatform": {
                      "type": "string"
                    },
                    "remoteShortInterfaceName": {
                      "type": "string"
                    },
                    "remoteVersion": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "onbState": {
                "type": "string"
              },
              "pid": {
                "type": "string"
              },
              "pnpProfileList": {
                "items": {
                  "properties": {
                    "createdBy": {
                      "type": "string"
                    },
                    "discoveryCreated": {
                      "type": "boolean"
                    },
                    "primaryEndpoint": {
                      "properties": {
                        "certificate": {
                          "type": "string"
                        },
                        "fqdn": {
                          "type": "string"
                        },
                        "ipv4Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "ipv6Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "port": {
                          "type": "number"
                        },
                        "protocol": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "profileName": {
                      "type": "string"
                    },
                    "secondaryEndpoint": {
                      "properties": {
                        "certificate": {
                          "type": "string"
                        },
                        "fqdn": {
                          "type": "string"
                        },
                        "ipv4Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "ipv6Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "port": {
                          "type": "number"
                        },
                        "protocol": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "populateInventory": {
                "type": "boolean"
              },
              "preWorkflowCliOuputs": {
                "items": {
                  "properties": {
                    "cli": {
                      "type": "string"
                    },
                    "cliOutput": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "projectId": {
                "type": "string"
              },
              "projectName": {
                "type": "string"
              },
              "reloadRequested": {
                "type": "boolean"
              },
              "serialNumber": {
                "type": "string"
              },
              "siteId": {
                "type": "string"
              },
              "siteName": {
                "type": "string"
              },
              "smartAccountId": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "stack": {
                "type": "boolean"
              },
              "stackInfo": {
                "properties": {
                  "isFullRing": {
                    "type": "boolean"
                  },
                  "stackMemberList": {
                    "items": {
                      "properties": {
                        "hardwareVersion": {
                          "type": "string"
                        },
                        "licenseLevel": {
                          "type": "string"
                        },
                        "licenseType": {
                          "type": "string"
                        },
                        "macAddress": {
                          "type": "string"
                        },
                        "pid": {
                          "type": "string"
                        },
                        "priority": {
                          "type": "number"
                        },
                        "role": {
                          "type": "string"
                        },
                        "serialNumber": {
                          "type": "string"
                        },
                        "softwareVersion": {
                          "type": "string"
                        },
                        "stackNumber": {
                          "type": "number"
                        },
                        "state": {
                          "type": "string"
                        },
                        "sudiSerialNumber": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "stackRingProtocol": {
                    "type": "string"
                  },
                  "supportsStackWorkflows": {
                    "type": "boolean"
                  },
                  "totalMemberCount": {
                    "type": "number"
                  },
                  "validLicenseLevels": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "state": {
                "type": "string"
              },
              "sudiRequired": {
                "type": "boolean"
              },
              "userMicNumbers": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "userSudiSerialNos": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "virtualAccountId": {
                "type": "string"
              },
              "workflowId": {
                "type": "string"
              },
              "workflowName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "runSummaryList": {
            "items": {
              "properties": {
                "details": {
                  "type": "string"
                },
                "errorFlag": {
                  "type": "boolean"
                },
                "historyTaskInfo": {
                  "properties": {
                    "addnDetails": {
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "type": "string"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "timestamp": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "systemResetWorkflow": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "addToInventory": {
                "type": "boolean"
              },
              "addedOn": {
                "type": "number"
              },
              "configId": {
                "type": "string"
              },
              "currTaskIdx": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "endTime": {
                "type": "number"
              },
              "execTime": {
                "type": "number"
              },
              "imageId": {
                "type": "string"
              },
              "instanceType": {
                "type": "string"
              },
              "lastupdateOn": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "tasks": {
                "items": {
                  "properties": {
                    "currWorkItemIdx": {
                      "type": "number"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "taskSeqNo": {
                      "type": "number"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "tenantId": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "useState": {
                "type": "string"
              },
              "version": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "systemWorkflow": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "addToInventory": {
                "type": "boolean"
              },
              "addedOn": {
                "type": "number"
              },
              "configId": {
                "type": "string"
              },
              "currTaskIdx": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "endTime": {
                "type": "number"
              },
              "execTime": {
                "type": "number"
              },
              "imageId": {
                "type": "string"
              },
              "instanceType": {
                "type": "string"
              },
              "lastupdateOn": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "tasks": {
                "items": {
                  "properties": {
                    "currWorkItemIdx": {
                      "type": "number"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "taskSeqNo": {
                      "type": "number"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "tenantId": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "useState": {
                "type": "string"
              },
              "version": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "tenantId": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "workflow": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "addToInventory": {
                "type": "boolean"
              },
              "addedOn": {
                "type": "number"
              },
              "configId": {
                "type": "string"
              },
              "currTaskIdx": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "endTime": {
                "type": "number"
              },
              "execTime": {
                "type": "number"
              },
              "imageId": {
                "type": "string"
              },
              "instanceType": {
                "type": "string"
              },
              "lastupdateOn": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "tasks": {
                "items": {
                  "properties": {
                    "currWorkItemIdx": {
                      "type": "number"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "taskSeqNo": {
                      "type": "number"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "tenantId": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "useState": {
                "type": "string"
              },
              "version": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "workflowParameters": {
            "properties": {
              "configList": {
                "items": {
                  "properties": {
                    "configId": {
                      "type": "string"
                    },
                    "configParameters": {
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "licenseLevel": {
                "type": "string"
              },
              "licenseType": {
                "type": "string"
              },
              "topOfStackSerialNumber": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "GetDeviceCountResponse": {
        "properties": {
          "response": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "GetDeviceCredentialDetailsResponse": {
        "properties": {
          "cli": {
            "items": {
              "properties": {
                "comments": {
                  "type": "string"
                },
                "credentialType": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "enablePassword": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "http_read": {
            "items": {
              "properties": {
                "comments": {
                  "type": "string"
                },
                "credentialType": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "port": {
                  "type": "string"
                },
                "secure": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "http_write": {
            "items": {
              "properties": {
                "comments": {
                  "type": "string"
                },
                "credentialType": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "port": {
                  "type": "string"
                },
                "secure": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "snmp_v2_read": {
            "items": {
              "properties": {
                "comments": {
                  "type": "string"
                },
                "credentialType": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "readCommunity": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "snmp_v2_write": {
            "items": {
              "properties": {
                "comments": {
                  "type": "string"
                },
                "credentialType": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "writeCommunity": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "snmp_v3": {
            "items": {
              "properties": {
                "authPassword": {
                  "type": "string"
                },
                "authType": {
                  "type": "string"
                },
                "comments": {
                  "type": "string"
                },
                "credentialType": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "privacyPassword": {
                  "type": "string"
                },
                "privacyType": {
                  "type": "string"
                },
                "snmpMode": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetDeviceDetailResponse": {
        "properties": {
          "response": {
            "properties": {
              "HALastResetReason": {
                "type": "string"
              },
              "HAPrimaryPowerStatus": {
                "type": "string"
              },
              "HASecondaryPowerStatus": {
                "type": "string"
              },
              "airQuality": {
                "type": "string"
              },
              "airQualityScore": {
                "type": "integer"
              },
              "clientCount": {
                "type": "string"
              },
              "collectionStatus": {
                "type": "string"
              },
              "communicationState": {
                "type": "string"
              },
              "cpu": {
                "type": "string"
              },
              "cpuScore": {
                "type": "integer"
              },
              "deviceSeries": {
                "type": "string"
              },
              "freeMbuf": {
                "type": "string"
              },
              "freeMbufScore": {
                "type": "integer"
              },
              "freeTimer": {
                "type": "string"
              },
              "freeTimerScore": {
                "type": "integer"
              },
              "interference": {
                "type": "string"
              },
              "interferenceScore": {
                "type": "integer"
              },
              "location": {
                "type": "string"
              },
              "macAddress": {
                "type": "string"
              },
              "managementIpAddr": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              },
              "memoryScore": {
                "type": "integer"
              },
              "noise": {
                "type": "string"
              },
              "noiseScore": {
                "type": "integer"
              },
              "nwDeviceFamily": {
                "type": "string"
              },
              "nwDeviceId": {
                "type": "string"
              },
              "nwDeviceName": {
                "type": "string"
              },
              "nwDeviceRole": {
                "type": "string"
              },
              "nwDeviceType": {
                "type": "string"
              },
              "osType": {
                "type": "string"
              },
              "overallHealth": {
                "type": "integer"
              },
              "packetPool": {
                "type": "string"
              },
              "packetPoolScore": {
                "type": "integer"
              },
              "platformId": {
                "type": "string"
              },
              "redundancyMode": {
                "type": "string"
              },
              "redundancyPeerState": {
                "type": "string"
              },
              "redundancyState": {
                "type": "string"
              },
              "redundancyUnit": {
                "type": "string"
              },
              "softwareVersion": {
                "type": "string"
              },
              "timestamp": {
                "type": "string"
              },
              "utilization": {
                "type": "string"
              },
              "utilizationScore": {
                "type": "integer"
              },
              "wqe": {
                "type": "string"
              },
              "wqeScore": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "GetDeviceDetailsByIPRequest": {
        "properties": {
          "device_ip": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDeviceDetailsByIPResponse": {
        "properties": {
          "provisionDetails": {
            "properties": {
              "beginStep": {
                "type": "string"
              },
              "duration": {
                "type": "string"
              },
              "endTime": {
                "type": "string"
              },
              "startTime": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "statusMessage": {
                "type": "string"
              },
              "taskNodes": {
                "items": {
                  "properties": {
                    "cliTemplateUserMessageDTO": {
                      "properties": {},
                      "type": "object"
                    },
                    "duration": {
                      "type": "string"
                    },
                    "endTime": {
                      "type": "string"
                    },
                    "errorPayload": {
                      "properties": {},
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "nextTask": {
                      "type": "string"
                    },
                    "parentTask": {
                      "properties": {},
                      "type": "object"
                    },
                    "payload": {
                      "type": "string"
                    },
                    "provisionedNames": {
                      "properties": {},
                      "type": "object"
                    },
                    "startTime": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "stepRan": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "topology": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "GetDeviceEnrichmentDetailsResponse": {
        "items": {
          "properties": {
            "deviceDetails": {
              "properties": {
                "apManagerInterfaceIp": {
                  "type": "string"
                },
                "associatedWlcIp": {
                  "type": "string"
                },
                "bootDateTime": {
                  "type": "string"
                },
                "collectionInterval": {
                  "type": "string"
                },
                "collectionStatus": {
                  "type": "string"
                },
                "errorCode": {
                  "type": "string"
                },
                "errorDescription": {
                  "type": "string"
                },
                "family": {
                  "type": "string"
                },
                "hostname": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "interfaceCount": {
                  "type": "string"
                },
                "inventoryStatusDetail": {
                  "type": "string"
                },
                "lastUpdateTime": {
                  "type": "integer"
                },
                "lastUpdated": {
                  "type": "string"
                },
                "lineCardCount": {
                  "type": "string"
                },
                "lineCardId": {
                  "type": "string"
                },
                "location": {
                  "properties": {},
                  "type": "object"
                },
                "locationName": {
                  "properties": {},
                  "type": "object"
                },
                "macAddress": {
                  "type": "string"
                },
                "managementIpAddress": {
                  "type": "string"
                },
                "memorySize": {
                  "type": "string"
                },
                "neighborTopology": {
                  "items": {
                    "properties": {
                      "links": {
                        "items": {
                          "properties": {
                            "id": {
                              "properties": {},
                              "type": "object"
                            },
                            "label": {
                              "items": {
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "linkStatus": {
                              "type": "string"
                            },
                            "portUtilization": {
                              "properties": {},
                              "type": "object"
                            },
                            "source": {
                              "type": "string"
                            },
                            "target": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "nodes": {
                        "items": {
                          "properties": {
                            "clients": {
                              "properties": {},
                              "type": "object"
                            },
                            "connectedDevice": {
                              "properties": {},
                              "type": "object"
                            },
                            "count": {
                              "properties": {},
                              "type": "object"
                            },
                            "description": {
                              "type": "string"
                            },
                            "deviceType": {
                              "type": "string"
                            },
                            "fabricGroup": {
                              "properties": {},
                              "type": "object"
                            },
                            "family": {
                              "type": "string"
                            },
                            "healthScore": {
                              "type": "integer"
                            },
                            "id": {
                              "type": "string"
                            },
                            "ip": {
                              "type": "string"
                            },
                            "level": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "nodeType": {
                              "type": "string"
                            },
                            "platformId": {
                              "type": "string"
                            },
                            "radioFrequency": {
                              "properties": {},
                              "type": "object"
                            },
                            "role": {
                              "type": "string"
                            },
                            "softwareVersion": {
                              "type": "string"
                            },
                            "userId": {
                              "properties": {},
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "platformId": {
                  "type": "string"
                },
                "reachabilityFailureReason": {
                  "type": "string"
                },
                "reachabilityStatus": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "roleSource": {
                  "type": "string"
                },
                "serialNumber": {
                  "type": "string"
                },
                "series": {
                  "type": "string"
                },
                "snmpContact": {
                  "type": "string"
                },
                "snmpLocation": {
                  "type": "string"
                },
                "softwareVersion": {
                  "type": "string"
                },
                "tagCount": {
                  "type": "string"
                },
                "tunnelUdpPort": {
                  "properties": {},
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "upTime": {
                  "type": "string"
                },
                "waasDeviceMode": {
                  "properties": {},
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetDeviceHistoryResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "details": {
                  "type": "string"
                },
                "errorFlag": {
                  "type": "boolean"
                },
                "historyTaskInfo": {
                  "properties": {
                    "addnDetails": {
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "type": "string"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "timestamp": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "GetDeviceInfoFromSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "deviceManagementIpAddress": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "siteHierarchy": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDeviceRoleInSDAFabricResponse": {
        "properties": {
          "response": {
            "properties": {
              "description": {
                "type": "string"
              },
              "roles": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "status": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDeviceValuesThatMatchFullyOrPartiallyAnAttributeResponse": {
        "properties": {},
        "type": "object"
      },
      "GetDevicesPerAdvisoryResponse": {
        "properties": {
          "response": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDynamicInterfaceResponse": {
        "items": {
          "properties": {
            "interfaceName": {
              "type": "string"
            },
            "vlanId": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetEdgeDeviceFromSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "deviceManagementIpAddress": {
            "type": "string"
          },
          "deviceName": {
            "type": "string"
          },
          "fabricSiteNameHierarchy": {
            "type": "string"
          },
          "roles": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetEmailDestinationResponse": {
        "items": {
          "properties": {
            "emailConfigId": {
              "type": "string"
            },
            "fromEmail": {
              "type": "string"
            },
            "primarySMTPConfig": {
              "properties": {
                "security": {
                  "type": "string"
                },
                "hostName": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "port": {
                  "type": "string"
                },
                "userName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "secondarySMTPConfig": {
              "properties": {
                "security": {
                  "type": "string"
                },
                "hostName": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "port": {
                  "type": "string"
                },
                "userName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "subject": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "toEmail": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetEmailEventSubscriptionsResponse": {
        "items": {
          "properties": {
            "description": {
              "type": "string"
            },
            "filter": {
              "properties": {
                "categories": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "domainsSubdomains": {
                  "items": {
                    "properties": {
                      "domain": {
                        "type": "string"
                      },
                      "subDomains": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "eventIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "others": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "severities": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "siteIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sources": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "isPrivate": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "subscriptionEndpoints": {
              "items": {
                "properties": {
                  "connectorType": {
                    "type": "string"
                  },
                  "instanceId": {
                    "type": "string"
                  },
                  "subscriptionDetails": {
                    "properties": {
                      "connectorType": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "fromEmailAddress": {
                        "type": "string"
                      },
                      "instanceId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "subject": {
                        "type": "string"
                      },
                      "toEmailAddresses": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "subscriptionId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetEmailSubscriptionDetailsResponse": {
        "items": {
          "properties": {
            "connectorType": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "fromEmailAddress": {
              "type": "string"
            },
            "instanceId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "subject": {
              "type": "string"
            },
            "toEmailAddresses": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetEnterpriseSSIDResponse": {
        "items": {
          "properties": {
            "groupUuid": {
              "type": "string"
            },
            "inheritedGroupName": {
              "type": "string"
            },
            "inheritedGroupUuid": {
              "type": "string"
            },
            "instanceUuid": {
              "type": "string"
            },
            "ssidDetails": {
              "items": {
                "properties": {
                  "aaaOverride": {
                    "type": "boolean"
                  },
                  "authServer": {
                    "type": "string"
                  },
                  "clientRateLimit": {
                    "type": "number"
                  },
                  "coverageHoleDetectionEnable": {
                    "type": "boolean"
                  },
                  "enableBroadcastSSID": {
                    "type": "boolean"
                  },
                  "enableFastLane": {
                    "type": "boolean"
                  },
                  "enableMACFiltering": {
                    "type": "boolean"
                  },
                  "fastTransition": {
                    "type": "string"
                  },
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "isFabric": {
                    "type": "boolean"
                  },
                  "multiPSKSettings": {
                    "items": {
                      "properties": {
                        "passphrase": {
                          "type": "string"
                        },
                        "passphraseType": {
                          "enum": [
                            "ASCII",
                            "HEX"
                          ],
                          "type": "string"
                        },
                        "priority": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nasOptions": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "passphrase": {
                    "type": "string"
                  },
                  "protectedManagementFrame": {
                    "enum": [
                      "Optional",
                      "Disabled",
                      "Required"
                    ],
                    "type": "string"
                  },
                  "radioPolicy": {
                    "type": "string"
                  },
                  "securityLevel": {
                    "type": "string"
                  },
                  "trafficType": {
                    "type": "string"
                  },
                  "wlanType": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "version": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetEoXDetailsPerDeviceResponse": {
        "properties": {
          "response": {
            "properties": {
              "alertCount": {
                "type": "integer"
              },
              "comments": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "deviceId": {
                "type": "string"
              },
              "eoxDetails": {
                "items": {
                  "properties": {
                    "bulletinHeadline": {
                      "type": "string"
                    },
                    "bulletinNumber": {
                      "type": "string"
                    },
                    "bulletinURL": {
                      "type": "string"
                    },
                    "endOfHardwareNewServiceAttachmentDate": {
                      "type": "integer"
                    },
                    "endOfHardwareServiceContractRenewalDate": {
                      "type": "integer"
                    },
                    "endOfLastHardwareShipDate": {
                      "type": "integer"
                    },
                    "endOfLifeDate": {
                      "type": "integer"
                    },
                    "endOfLifeExternalAnnouncementDate": {
                      "type": "integer"
                    },
                    "endOfSaleDate": {
                      "type": "integer"
                    },
                    "endOfSignatureReleasesDate": {
                      "type": "integer"
                    },
                    "endOfSoftwareMaintenanceReleasesDate": {
                      "type": "integer"
                    },
                    "endOfSoftwareVulnerabilityOrSecuritySupportDate": {
                      "type": "integer"
                    },
                    "endOfSoftwareVulnerabilityOrSecuritySupportDateHw": {
                      "type": "integer"
                    },
                    "eoxAlertType": {
                      "type": "string"
                    },
                    "lastDateOfSupport": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "lastScanTime": {
                "type": "integer"
              },
              "scanStatus": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetEoXStatusForAllDevicesResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "alertCount": {
                  "type": "integer"
                },
                "deviceId": {
                  "type": "string"
                },
                "lastScanTime": {
                  "type": "integer"
                },
                "scanStatus": {
                  "type": "string"
                },
                "summary": {
                  "items": {
                    "properties": {
                      "eoxType": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetEoXSummaryResponse": {
        "properties": {
          "response": {
            "properties": {
              "hardwareCount": {
                "type": "integer"
              },
              "moduleCount": {
                "type": "integer"
              },
              "softwareCount": {
                "type": "integer"
              },
              "totalCount": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetEventArtifactsResponse": {
        "items": {
          "properties": {
            "tags": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "artifactId": {
              "type": "string"
            },
            "ciscoDNAEventLink": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "domain": {
              "type": "string"
            },
            "eventPayload": {
              "properties": {
                "additionalDetails": {
                  "properties": {},
                  "type": "object"
                },
                "category": {
                  "type": "string"
                },
                "details": {
                  "properties": {
                    "device_ip": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "eventId": {
                  "type": "string"
                },
                "severity": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "eventTemplates": {
              "items": {
                "type": "object"
              },
              "type": "array"
            },
            "isPrivate": {
              "type": "string"
            },
            "isTemplateEnabled": {
              "type": "string"
            },
            "isTenantAware": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "note": {
              "type": "string"
            },
            "subDomain": {
              "type": "string"
            },
            "supportedConnectorTypes": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "tenantId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetEventSubscriptionsResponse": {
        "items": {
          "properties": {
            "description": {
              "type": "string"
            },
            "filter": {
              "properties": {
                "categories": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "domainsSubdomains": {
                  "items": {
                    "properties": {
                      "domain": {
                        "type": "string"
                      },
                      "subDomains": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "eventIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "others": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "severities": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "siteIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sources": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "isPrivate": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "subscriptionEndpoints": {
              "items": {
                "properties": {
                  "connectorType": {
                    "type": "string"
                  },
                  "instanceId": {
                    "type": "string"
                  },
                  "subscriptionDetails": {
                    "properties": {
                      "basePath": {
                        "type": "string"
                      },
                      "body": {
                        "type": "string"
                      },
                      "connectTimeout": {
                        "type": "string"
                      },
                      "connectorType": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "headers": {
                        "items": {
                          "properties": {
                            "string": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "instanceId": {
                        "type": "string"
                      },
                      "method": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "pathParams": {
                        "items": {
                          "properties": {
                            "string": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "queryParams": {
                        "items": {
                          "properties": {
                            "string": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "readTimeout": {
                        "type": "string"
                      },
                      "resource": {
                        "type": "string"
                      },
                      "trustCert": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "subscriptionId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetEventsResponse": {
        "items": {
          "properties": {
            "tags": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "category": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "details": {
              "properties": {},
              "type": "object"
            },
            "domain": {
              "type": "string"
            },
            "eventId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "nameSpace": {
              "type": "string"
            },
            "severity": {
              "type": "number"
            },
            "subDomain": {
              "type": "string"
            },
            "subscriptionTypes": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetExternalAuthenticationServersAPIResponse": {
        "properties": {
          "response": {
            "properties": {
              "aaa-servers": {
                "items": {
                  "properties": {
                    "aaaAttribute": {
                      "type": "string"
                    },
                    "accountingPort": {
                      "type": "integer"
                    },
                    "authenticationPort": {
                      "type": "integer"
                    },
                    "protocol": {
                      "type": "string"
                    },
                    "retries": {
                      "type": "integer"
                    },
                    "role": {
                      "type": "string"
                    },
                    "serverId": {
                      "type": "string"
                    },
                    "serverIp": {
                      "type": "string"
                    },
                    "sharedSecret": {
                      "type": "string"
                    },
                    "socketTimeout": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "GetFailedITSMEventsResponse": {
        "items": {
          "properties": {
            "category": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "domain": {
              "type": "string"
            },
            "enrichmentInfo": {
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorDescription": {
                  "type": "string"
                },
                "eventStatus": {
                  "type": "string"
                },
                "responseReceivedFromITSMSystem": {
                  "properties": {},
                  "type": "object"
                }
              },
              "type": "object"
            },
            "eventId": {
              "type": "string"
            },
            "instanceId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "severity": {
              "type": "string"
            },
            "source": {
              "type": "string"
            },
            "subDomain": {
              "type": "string"
            },
            "timestamp": {
              "type": "integer"
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetGlobalPoolResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "clientOptions": {
                  "properties": {},
                  "type": "object"
                },
                "configureExternalDhcp": {
                  "type": "string"
                },
                "context": {
                  "items": {
                    "properties": {
                      "contextKey": {
                        "type": "string"
                      },
                      "contextValue": {
                        "type": "string"
                      },
                      "owner": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "createTime": {
                  "type": "string"
                },
                "dhcpServerIps": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "dnsServerIps": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "gateways": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "id": {
                  "type": "string"
                },
                "ipPoolCidr": {
                  "type": "string"
                },
                "ipPoolName": {
                  "type": "string"
                },
                "ipv6": {
                  "type": "string"
                },
                "lastUpdateTime": {
                  "type": "string"
                },
                "overlapping": {
                  "type": "string"
                },
                "owner": {
                  "type": "string"
                },
                "parentUuid": {
                  "type": "string"
                },
                "shared": {
                  "type": "string"
                },
                "totalIpAddressCount": {
                  "type": "string"
                },
                "usedIpAddressCount": {
                  "type": "string"
                },
                "usedPercentage": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetIPPoolFromSDAVirtualNetworkResponse": {
        "properties": {
          "authenticationPolicyName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "ipPoolName": {
            "type": "string"
          },
          "isL2FloodingEnabled": {
            "type": "boolean"
          },
          "isThisCriticalPool": {
            "type": "boolean"
          },
          "scalableGroupName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "trafficType": {
            "type": "string"
          },
          "virtualNetworkName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetITSMIntegrationSettingByIdRequest": {
        "properties": {
          "data": {
            "properties": {
              "ConnectionSettings": {
                "properties": {
                  "Auth_Password": {
                    "type": "string"
                  },
                  "Auth_UserName": {
                    "type": "string"
                  },
                  "Url": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "dypId": {
            "type": "string"
          },
          "dypInstanceId": {
            "type": "string"
          },
          "dypMajorVersion": {
            "type": "integer"
          },
          "dypName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetITSMIntegrationSettingByIdResponse": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "data": {
            "properties": {
              "ConnectionSettings": {
                "properties": {
                  "Auth_Password": {
                    "type": "string"
                  },
                  "Auth_UserName": {
                    "type": "string"
                  },
                  "Url": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "dypId": {
            "type": "string"
          },
          "dypMajorVersion": {
            "type": "integer"
          },
          "dypName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "uniqueKey": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetIssueEnrichmentDetailsResponse": {
        "properties": {
          "issueDetails": {
            "properties": {
              "issue": {
                "items": {
                  "properties": {
                    "impactedHosts": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "issueCategory": {
                      "type": "string"
                    },
                    "issueDescription": {
                      "type": "string"
                    },
                    "issueEntity": {
                      "type": "string"
                    },
                    "issueEntityValue": {
                      "type": "string"
                    },
                    "issueId": {
                      "type": "string"
                    },
                    "issueName": {
                      "type": "string"
                    },
                    "issuePriority": {
                      "type": "string"
                    },
                    "issueSeverity": {
                      "type": "string"
                    },
                    "issueSource": {
                      "type": "string"
                    },
                    "issueSummary": {
                      "type": "string"
                    },
                    "issueTimestamp": {
                      "type": "integer"
                    },
                    "suggestedActions": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "steps": {
                            "items": {
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "GetLinecardDetailsResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "partno": {
                  "type": "string"
                },
                "serialno": {
                  "type": "string"
                },
                "slotno": {
                  "type": "string"
                },
                "switchno": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetMembershipResponse": {
        "properties": {
          "device": {
            "items": {
              "properties": {
                "response": {
                  "items": {
                    "properties": {},
                    "type": "object"
                  },
                  "type": "array"
                },
                "siteId": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "site": {
            "properties": {
              "response": {
                "items": {
                  "properties": {},
                  "type": "object"
                },
                "type": "array"
              },
              "version": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "GetMulticastDetailsFromSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "multicastMethod": {
            "type": "string"
          },
          "multicastType": {
            "type": "string"
          },
          "multicastVnInfo": {
            "items": {
              "properties": {
                "externalRpIpAddress": {
                  "type": "string"
                },
                "internalRpIpAddress": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "ipPoolName": {
                  "type": "string"
                },
                "ssmInfo": {
                  "items": {
                    "properties": {
                      "ssmGroupRange": {
                        "type": "string"
                      },
                      "ssmWildcardMask": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "virtualNetworkName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetNFVProfileResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "device": {
                  "items": {
                    "properties": {
                      "customNetworks": {
                        "items": {
                          "properties": {
                            "connectionType": {
                              "type": "string"
                            },
                            "networkName": {
                              "type": "string"
                            },
                            "servicesToConnect": {
                              "items": {
                                "properties": {
                                  "serviceName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "vlanId": {
                              "type": "string"
                            },
                            "vlanMode": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "customTemplate": {
                        "items": {
                          "properties": {
                            "deviceType": {
                              "type": "string"
                            },
                            "template": {
                              "type": "string"
                            },
                            "templateType": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "deviceTag": {
                        "type": "string"
                      },
                      "deviceType": {
                        "type": "string"
                      },
                      "directInternetAccessForFirewall": {
                        "type": "boolean"
                      },
                      "serviceProviderProfile": {
                        "items": {
                          "properties": {
                            "connect": {
                              "type": "boolean"
                            },
                            "connectDefaultGatewayOnWan": {
                              "type": "boolean"
                            },
                            "linkType": {
                              "type": "string"
                            },
                            "serviceProvider": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "services": {
                        "items": {
                          "properties": {
                            "firewallMode": {
                              "type": "string"
                            },
                            "imageName": {
                              "type": "string"
                            },
                            "profileType": {
                              "type": "string"
                            },
                            "serviceName": {
                              "type": "string"
                            },
                            "serviceType": {
                              "type": "string"
                            },
                            "vNicMapping": {
                              "items": {
                                "properties": {
                                  "assignIpAddressToNetwork": {
                                    "type": "boolean"
                                  },
                                  "networkType": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "vlanForL2": {
                        "items": {
                          "properties": {
                            "vlanDescription": {
                              "type": "string"
                            },
                            "vlanId": {
                              "type": "string"
                            },
                            "vlanType": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "type": "string"
                },
                "profileName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetNetworkResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "groupUuid": {
                  "type": "string"
                },
                "inheritedGroupName": {
                  "type": "string"
                },
                "inheritedGroupUuid": {
                  "type": "string"
                },
                "instanceType": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "items": {
                    "properties": {
                      "configureDnacIP": {
                        "type": "boolean"
                      },
                      "ipAddresses": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "version": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetNetworkVResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "groupUuid": {
                  "type": "string"
                },
                "inheritedGroupName": {
                  "type": "string"
                },
                "inheritedGroupUuid": {
                  "type": "string"
                },
                "instanceType": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "version": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetNotificationsResponse": {
        "items": {
          "properties": {
            "category": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "details": {
              "type": "string"
            },
            "domain": {
              "type": "string"
            },
            "eventHierarchy": {
              "type": "string"
            },
            "eventId": {
              "type": "string"
            },
            "instanceId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "network": {
              "properties": {
                "deviceId": {
                  "type": "string"
                },
                "siteId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "severity": {
              "type": "string"
            },
            "source": {
              "type": "string"
            },
            "subDomain": {
              "type": "string"
            },
            "timestamp": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetOverallClientHealthResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "scoreDetail": {
                  "items": {
                    "properties": {
                      "clientCount": {
                        "type": "integer"
                      },
                      "clientUniqueCount": {
                        "type": "integer"
                      },
                      "endtime": {
                        "type": "integer"
                      },
                      "scoreCategory": {
                        "properties": {
                          "scoreCategory": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "scoreList": {
                        "items": {
                          "properties": {
                            "clientCount": {
                              "type": "integer"
                            },
                            "clientUniqueCount": {
                              "type": "number"
                            },
                            "endtime": {
                              "type": "integer"
                            },
                            "scoreCategory": {
                              "properties": {
                                "scoreCategory": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "scoreList": {
                              "items": {
                                "properties": {
                                  "clientCount": {
                                    "type": "integer"
                                  },
                                  "clientUniqueCount": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "endtime": {
                                    "type": "integer"
                                  },
                                  "scoreCategory": {
                                    "properties": {
                                      "scoreCategory": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "scoreValue": {
                                    "type": "integer"
                                  },
                                  "starttime": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "scoreValue": {
                              "type": "integer"
                            },
                            "starttime": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "scoreValue": {
                        "type": "integer"
                      },
                      "starttime": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "siteId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetOverallNetworkHealthResponse": {
        "properties": {
          "healthDistirubution": {
            "items": {
              "properties": {
                "badCount": {
                  "type": "number"
                },
                "badPercentage": {
                  "type": "number"
                },
                "category": {
                  "type": "string"
                },
                "fairCount": {
                  "type": "number"
                },
                "fairPercentage": {
                  "type": "number"
                },
                "goodCount": {
                  "type": "integer"
                },
                "goodPercentage": {
                  "type": "integer"
                },
                "healthScore": {
                  "type": "integer"
                },
                "kpiMetrics": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "totalCount": {
                  "type": "integer"
                },
                "unmonCount": {
                  "type": "number"
                },
                "unmonPercentage": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "latestHealthScore": {
            "type": "integer"
          },
          "latestMeasuredByEntity": {
            "properties": {},
            "type": "object"
          },
          "measuredBy": {
            "type": "string"
          },
          "monitoredDevices": {
            "type": "integer"
          },
          "monitoredHealthyDevices": {
            "type": "integer"
          },
          "monitoredUnHealthyDevices": {
            "type": "integer"
          },
          "response": {
            "items": {
              "properties": {
                "badCount": {
                  "type": "number"
                },
                "entity": {
                  "properties": {},
                  "type": "object"
                },
                "fairCount": {
                  "type": "integer"
                },
                "goodCount": {
                  "type": "integer"
                },
                "healthScore": {
                  "type": "integer"
                },
                "time": {
                  "type": "string"
                },
                "timeinMillis": {
                  "type": "integer"
                },
                "totalCount": {
                  "type": "integer"
                },
                "unmonCount": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "unMonitoredDevices": {
            "type": "number"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetPermissionsAPIResponse": {
        "properties": {
          "response": {
            "properties": {
              "resource-types": {
                "items": {
                  "properties": {
                    "defaultPermission": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "GetPlannedAccessPointsForBuildingResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "attributes": {
                  "properties": {
                    "createDate": {
                      "type": "integer"
                    },
                    "domain": {
                      "type": "string"
                    },
                    "heirarchyName": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "instanceUuid": {
                      "type": "string"
                    },
                    "macaddress": {
                      "properties": {},
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "typeString": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "isSensor": {
                  "type": "boolean"
                },
                "location": {
                  "properties": {},
                  "type": "object"
                },
                "position": {
                  "properties": {
                    "x": {
                      "type": "number"
                    },
                    "y": {
                      "type": "number"
                    },
                    "z": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "radioCount": {
                  "type": "integer"
                },
                "radios": {
                  "items": {
                    "properties": {
                      "antenna": {
                        "properties": {
                          "azimuthAngle": {
                            "type": "number"
                          },
                          "elevationAngle": {
                            "type": "number"
                          },
                          "gain": {
                            "type": "number"
                          },
                          "mode": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "attributes": {
                        "properties": {
                          "channel": {
                            "properties": {},
                            "type": "object"
                          },
                          "channelString": {
                            "properties": {},
                            "type": "object"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "ifMode": {
                            "type": "string"
                          },
                          "ifTypeString": {
                            "type": "string"
                          },
                          "ifTypeSubband": {
                            "type": "string"
                          },
                          "instanceUuid": {
                            "type": "string"
                          },
                          "slotId": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "isSensor": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "total": {
            "type": "integer"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetPlannedAccessPointsForFloorResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "attributes": {
                  "properties": {
                    "createDate": {
                      "type": "integer"
                    },
                    "domain": {
                      "type": "string"
                    },
                    "heirarchyName": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "instanceUuid": {
                      "type": "string"
                    },
                    "macaddress": {
                      "properties": {},
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "typeString": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "isSensor": {
                  "type": "boolean"
                },
                "location": {
                  "properties": {},
                  "type": "object"
                },
                "position": {
                  "properties": {
                    "x": {
                      "type": "number"
                    },
                    "y": {
                      "type": "number"
                    },
                    "z": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "radioCount": {
                  "type": "integer"
                },
                "radios": {
                  "items": {
                    "properties": {
                      "antenna": {
                        "properties": {
                          "azimuthAngle": {
                            "type": "number"
                          },
                          "elevationAngle": {
                            "type": "number"
                          },
                          "gain": {
                            "type": "number"
                          },
                          "mode": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "attributes": {
                        "properties": {
                          "channel": {
                            "properties": {},
                            "type": "object"
                          },
                          "channelString": {
                            "properties": {},
                            "type": "object"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "ifMode": {
                            "type": "string"
                          },
                          "ifTypeString": {
                            "type": "string"
                          },
                          "ifTypeSubband": {
                            "type": "string"
                          },
                          "instanceUuid": {
                            "type": "string"
                          },
                          "slotId": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "isSensor": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "total": {
            "type": "integer"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetPnPGlobalSettingsResponse": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "aaaCredentials": {
            "properties": {
              "password": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "acceptEula": {
            "type": "boolean"
          },
          "defaultProfile": {
            "properties": {
              "cert": {
                "type": "string"
              },
              "fqdnAddresses": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "ipAddresses": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "port": {
                "type": "number"
              },
              "proxy": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "savaMappingList": {
            "items": {
              "properties": {
                "autoSyncPeriod": {
                  "type": "number"
                },
                "ccoUser": {
                  "type": "string"
                },
                "expiry": {
                  "type": "number"
                },
                "lastSync": {
                  "type": "number"
                },
                "profile": {
                  "properties": {
                    "addressFqdn": {
                      "type": "string"
                    },
                    "addressIpV4": {
                      "type": "string"
                    },
                    "cert": {
                      "type": "string"
                    },
                    "makeDefault": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "port": {
                      "type": "number"
                    },
                    "profileId": {
                      "type": "string"
                    },
                    "proxy": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "smartAccountId": {
                  "type": "string"
                },
                "syncResult": {
                  "properties": {
                    "syncList": {
                      "items": {
                        "properties": {
                          "deviceSnList": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "syncType": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "syncMsg": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "syncResultStr": {
                  "type": "string"
                },
                "syncStartTime": {
                  "type": "number"
                },
                "syncStatus": {
                  "type": "string"
                },
                "tenantId": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                },
                "virtualAccountId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "taskTimeOuts": {
            "properties": {
              "configTimeOut": {
                "type": "number"
              },
              "generalTimeOut": {
                "type": "number"
              },
              "imageDownloadTimeOut": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "tenantId": {
            "type": "string"
          },
          "version": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "GetPortAssignmentForAccessPointInSDAFabricResponse": {
        "properties": {
          "authenticateTemplateName": {
            "type": "string"
          },
          "dataIpAddressPoolName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deviceManagementIpAddress": {
            "type": "string"
          },
          "interfaceName": {
            "type": "string"
          },
          "scalableGroupName": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "voiceIpAddressPoolName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetPortAssignmentForUserDeviceInSDAFabricResponse": {
        "properties": {
          "authenticateTemplateName": {
            "type": "string"
          },
          "dataIpAddressPoolName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deviceManagementIpAddress": {
            "type": "string"
          },
          "interfaceName": {
            "type": "string"
          },
          "scalableGroupName": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "voiceIpAddressPoolName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetProvisionedWiredDeviceResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "deviceManagementIpAddress": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetQosDeviceInterfaceInfoCountResponse": {
        "properties": {
          "response": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetQosDeviceInterfaceInfoResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "cfsChangeInfo": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "createTime": {
                  "type": "integer"
                },
                "customProvisions": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "deployed": {
                  "type": "boolean"
                },
                "displayName": {
                  "type": "string"
                },
                "excludedInterfaces": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "id": {
                  "type": "string"
                },
                "instanceCreatedOn": {
                  "type": "integer"
                },
                "instanceId": {
                  "type": "integer"
                },
                "instanceUpdatedOn": {
                  "type": "integer"
                },
                "instanceVersion": {
                  "type": "integer"
                },
                "isExcluded": {
                  "type": "boolean"
                },
                "isSeeded": {
                  "type": "boolean"
                },
                "isStale": {
                  "type": "boolean"
                },
                "lastUpdateTime": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "networkDeviceId": {
                  "type": "string"
                },
                "provisioningState": {
                  "enum": [
                    "UNKNOWN",
                    "DEFINED",
                    "DEPLOYED",
                    "FAILED",
                    "VERIFIED",
                    "DEPLOYING",
                    "SUBMITTED",
                    "PREPROCESSED",
                    "VALIDATED"
                  ],
                  "type": "string"
                },
                "qosDeviceInterfaceInfo": {
                  "items": {
                    "properties": {
                      "displayName": {
                        "type": "string"
                      },
                      "dmvpnRemoteSitesBw": {
                        "items": {
                          "type": "integer"
                        },
                        "type": "array"
                      },
                      "downloadBW": {
                        "type": "number"
                      },
                      "id": {
                        "type": "string"
                      },
                      "instanceCreatedOn": {
                        "type": "integer"
                      },
                      "instanceId": {
                        "type": "integer"
                      },
                      "instanceUpdatedOn": {
                        "type": "integer"
                      },
                      "instanceVersion": {
                        "type": "number"
                      },
                      "interfaceId": {
                        "type": "string"
                      },
                      "interfaceName": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "role": {
                        "enum": [
                          "WAN",
                          "DMVPN_HUB",
                          "DMVPN_SPOKE"
                        ],
                        "type": "string"
                      },
                      "uploadBW": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "qualifier": {
                  "type": "string"
                },
                "resourceVersion": {
                  "type": "integer"
                },
                "targetIdList": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetReserveIPSubpoolResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "groupName": {
                  "type": "string"
                },
                "groupOwner": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "ipPools": {
                  "items": {
                    "properties": {
                      "clientOptions": {
                        "properties": {},
                        "type": "object"
                      },
                      "configureExternalDhcp": {
                        "type": "boolean"
                      },
                      "context": {
                        "items": {
                          "properties": {
                            "contextKey": {
                              "type": "string"
                            },
                            "contextValue": {
                              "type": "string"
                            },
                            "owner": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "createTime": {
                        "type": "integer"
                      },
                      "dhcpServerIps": {
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "dnsServerIps": {
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "gateways": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "groupUuid": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "ipPoolCidr": {
                        "type": "string"
                      },
                      "ipPoolName": {
                        "type": "string"
                      },
                      "ipv6": {
                        "type": "boolean"
                      },
                      "lastUpdateTime": {
                        "type": "integer"
                      },
                      "overlapping": {
                        "type": "boolean"
                      },
                      "owner": {
                        "type": "string"
                      },
                      "parentUuid": {
                        "type": "string"
                      },
                      "shared": {
                        "type": "boolean"
                      },
                      "totalIpAddressCount": {
                        "type": "integer"
                      },
                      "usedIpAddressCount": {
                        "type": "integer"
                      },
                      "usedPercentage": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "siteHierarchy": {
                  "type": "string"
                },
                "siteId": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetRestWebhookEventSubscriptionsResponse": {
        "items": {
          "properties": {
            "description": {
              "type": "string"
            },
            "filter": {
              "properties": {
                "categories": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "domainsSubdomains": {
                  "items": {
                    "properties": {
                      "domain": {
                        "type": "string"
                      },
                      "subDomains": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "eventIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "others": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "severities": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "siteIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sources": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "isPrivate": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "subscriptionEndpoints": {
              "items": {
                "properties": {
                  "connectorType": {
                    "type": "string"
                  },
                  "instanceId": {
                    "type": "string"
                  },
                  "subscriptionDetails": {
                    "properties": {
                      "basePath": {
                        "type": "string"
                      },
                      "body": {
                        "type": "string"
                      },
                      "connectTimeout": {
                        "type": "string"
                      },
                      "connectorType": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "headers": {
                        "items": {
                          "properties": {
                            "string": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "instanceId": {
                        "type": "string"
                      },
                      "method": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "pathParams": {
                        "items": {
                          "properties": {
                            "string": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "queryParams": {
                        "items": {
                          "properties": {
                            "string": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "readTimeout": {
                        "type": "string"
                      },
                      "resource": {
                        "type": "string"
                      },
                      "trustCert": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "subscriptionId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetRestWebhookSubscriptionDetailsResponse": {
        "items": {
          "properties": {
            "connectorType": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "headers": {
              "items": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "instanceId": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "pathParams": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "queryParams": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "trustCert": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetSNMPDestinationResponse": {
        "properties": {
          "apiStatus": {
            "type": "string"
          },
          "errorMessage": {
            "properties": {
              "errors": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "statusMessage": {
            "items": {
              "properties": {
                "authPassword": {
                  "type": "string"
                },
                "community": {
                  "type": "string"
                },
                "configId": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "ipAddress": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "privacyPassword": {
                  "type": "string"
                },
                "snmpAuthType": {
                  "type": "string"
                },
                "snmpMode": {
                  "type": "string"
                },
                "snmpPrivacyType": {
                  "type": "string"
                },
                "snmpVersion": {
                  "type": "string"
                },
                "tenantId": {
                  "type": "string"
                },
                "userName": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetSSIDToIPPoolMappingRequest": {
        "properties": {
          "scalableGroupName": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          },
          "ssidNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "vlanName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetSSIDToIPPoolMappingResponse": {
        "properties": {
          "ssidDetails": {
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "scalableGroupName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "vlanName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetServiceProviderDetailsResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "groupUuid": {
                  "type": "string"
                },
                "inheritedGroupName": {
                  "type": "string"
                },
                "inheritedGroupUuid": {
                  "type": "string"
                },
                "instanceType": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "items": {
                    "properties": {
                      "slaProfileName": {
                        "type": "string"
                      },
                      "spProfileName": {
                        "type": "string"
                      },
                      "wanProvider": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetServiceProviderDetailsVResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "groupUuid": {
                  "type": "string"
                },
                "inheritedGroupName": {
                  "type": "string"
                },
                "inheritedGroupUuid": {
                  "type": "string"
                },
                "instanceType": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "items": {
                    "properties": {
                      "slaProfileName": {
                        "type": "string"
                      },
                      "spProfileName": {
                        "type": "string"
                      },
                      "wanProvider": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "version": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetSiteCountResponse": {
        "properties": {
          "response": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetSiteFromSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "fabricDomainType": {
            "type": "string"
          },
          "fabricName": {
            "type": "string"
          },
          "fabricType": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetSiteHealthResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "accessGoodCount": {
                  "properties": {},
                  "type": "object"
                },
                "accessTotalCount": {
                  "properties": {},
                  "type": "object"
                },
                "applicationBytesTotalCount": {
                  "properties": {},
                  "type": "object"
                },
                "applicationGoodCount": {
                  "properties": {},
                  "type": "object"
                },
                "applicationHealth": {
                  "properties": {},
                  "type": "object"
                },
                "applicationHealthStats": {
                  "properties": {
                    "appTotalCount": {
                      "type": "number"
                    },
                    "businessIrrelevantAppCount": {
                      "properties": {
                        "fair": {
                          "type": "number"
                        },
                        "good": {
                          "type": "number"
                        },
                        "poor": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "businessRelevantAppCount": {
                      "properties": {
                        "fair": {
                          "type": "number"
                        },
                        "good": {
                          "type": "number"
                        },
                        "poor": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "defaultHealthAppCount": {
                      "properties": {
                        "fair": {
                          "type": "number"
                        },
                        "good": {
                          "type": "number"
                        },
                        "poor": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "applicationTotalCount": {
                  "properties": {},
                  "type": "object"
                },
                "clientHealthWired": {
                  "properties": {},
                  "type": "object"
                },
                "clientHealthWireless": {
                  "properties": {},
                  "type": "object"
                },
                "coreGoodCount": {
                  "properties": {},
                  "type": "object"
                },
                "coreTotalCount": {
                  "properties": {},
                  "type": "object"
                },
                "distributionGoodCount": {
                  "properties": {},
                  "type": "object"
                },
                "distributionTotalCount": {
                  "properties": {},
                  "type": "object"
                },
                "dnacInfo": {
                  "properties": {},
                  "type": "object"
                },
                "healthyClientsPercentage": {
                  "properties": {},
                  "type": "object"
                },
                "healthyNetworkDevicePercentage": {
                  "properties": {},
                  "type": "object"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                },
                "networkHealthAccess": {
                  "properties": {},
                  "type": "object"
                },
                "networkHealthAverage": {
                  "properties": {},
                  "type": "object"
                },
                "networkHealthCore": {
                  "properties": {},
                  "type": "object"
                },
                "networkHealthDistribution": {
                  "properties": {},
                  "type": "object"
                },
                "networkHealthOthers": {
                  "properties": {},
                  "type": "object"
                },
                "networkHealthRouter": {
                  "properties": {},
                  "type": "object"
                },
                "networkHealthWireless": {
                  "properties": {},
                  "type": "object"
                },
                "numberOfClients": {
                  "properties": {},
                  "type": "object"
                },
                "numberOfNetworkDevice": {
                  "properties": {},
                  "type": "object"
                },
                "numberOfWiredClients": {
                  "properties": {},
                  "type": "object"
                },
                "numberOfWirelessClients": {
                  "properties": {},
                  "type": "object"
                },
                "overallGoodDevices": {
                  "properties": {},
                  "type": "object"
                },
                "parentSiteId": {
                  "type": "string"
                },
                "parentSiteName": {
                  "type": "string"
                },
                "routerGoodCount": {
                  "properties": {},
                  "type": "object"
                },
                "routerTotalCount": {
                  "properties": {},
                  "type": "object"
                },
                "siteId": {
                  "type": "string"
                },
                "siteName": {
                  "type": "string"
                },
                "siteType": {
                  "type": "string"
                },
                "totalNumberOfActiveWirelessClients": {
                  "properties": {},
                  "type": "object"
                },
                "totalNumberOfConnectedWiredClients": {
                  "properties": {},
                  "type": "object"
                },
                "wiredGoodClients": {
                  "properties": {},
                  "type": "object"
                },
                "wirelessDeviceGoodCount": {
                  "properties": {},
                  "type": "object"
                },
                "wirelessDeviceTotalCount": {
                  "properties": {},
                  "type": "object"
                },
                "wirelessGoodClients": {
                  "properties": {},
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetSiteResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "additionalInfo": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "id": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "parentId": {
                  "type": "string"
                },
                "siteHierarchy": {
                  "type": "string"
                },
                "siteNameHierarchy": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetSmartAccountListResponse": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "GetStatusAPIForEventsResponse": {
        "properties": {
          "apiStatus": {
            "type": "string"
          },
          "errorMessage": {
            "properties": {},
            "type": "object"
          },
          "statusMessage": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetSupervisorCardDetailResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "partno": {
                  "type": "string"
                },
                "serialno": {
                  "type": "string"
                },
                "slotno": {
                  "type": "string"
                },
                "switchno": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetSyncResultForVirtualAccountResponse": {
        "properties": {
          "autoSyncPeriod": {
            "type": "number"
          },
          "ccoUser": {
            "type": "string"
          },
          "expiry": {
            "type": "number"
          },
          "lastSync": {
            "type": "number"
          },
          "profile": {
            "properties": {
              "addressFqdn": {
                "type": "string"
              },
              "addressIpV4": {
                "type": "string"
              },
              "cert": {
                "type": "string"
              },
              "makeDefault": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "port": {
                "type": "number"
              },
              "profileId": {
                "type": "string"
              },
              "proxy": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "smartAccountId": {
            "type": "string"
          },
          "syncResult": {
            "properties": {
              "syncList": {
                "items": {
                  "properties": {
                    "deviceSnList": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "syncType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "syncMsg": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "syncResultStr": {
            "type": "string"
          },
          "syncStartTime": {
            "type": "number"
          },
          "syncStatus": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "virtualAccountId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetSyslogDestinationResponse": {
        "properties": {
          "apiStatus": {
            "type": "string"
          },
          "errorMessage": {
            "properties": {
              "errors": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "statusMessage": {
            "items": {
              "properties": {
                "host": {
                  "type": "string"
                },
                "configId": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "protocol": {
                  "enum": [
                    "TCP",
                    "UDP"
                  ],
                  "type": "string"
                },
                "tenantId": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetSyslogEventSubscriptionsResponse": {
        "items": {
          "properties": {
            "description": {
              "type": "string"
            },
            "filter": {
              "properties": {
                "categories": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "domainsSubdomains": {
                  "items": {
                    "properties": {
                      "domain": {
                        "type": "string"
                      },
                      "subDomains": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "eventIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "others": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "severities": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "siteIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sources": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "isPrivate": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "subscriptionEndpoints": {
              "items": {
                "properties": {
                  "connectorType": {
                    "type": "string"
                  },
                  "instanceId": {
                    "type": "string"
                  },
                  "subscriptionDetails": {
                    "properties": {
                      "connectorType": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "instanceId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "syslogConfig": {
                        "properties": {
                          "host": {
                            "type": "string"
                          },
                          "configId": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "port": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "subscriptionId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetSyslogSubscriptionDetailsResponse": {
        "items": {
          "properties": {
            "connectorType": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "instanceId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "syslogConfig": {
              "properties": {
                "host": {
                  "type": "string"
                },
                "configId": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "port": {
                  "type": "string"
                },
                "protocol": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetThreatLevelsResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetThreatTypesResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "isCustom": {
                  "type": "boolean"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "label": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetTransitPeerNetworkInfoResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "ipTransitSettings": {
            "properties": {
              "autonomousSystemNumber": {
                "type": "string"
              },
              "routingProtocolName": {
                "enum": [
                  "BGP"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "sdaTransitSettings": {
            "properties": {
              "transitControlPlaneSettings": {
                "items": {
                  "properties": {
                    "deviceManagementIpAddress": {
                      "type": "string"
                    },
                    "siteNameHierarchy": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "status": {
            "enum": [
              "success",
              "failed"
            ],
            "type": "string"
          },
          "transitPeerNetworkName": {
            "type": "string"
          },
          "transitPeerNetworkType": {
            "enum": [
              "ip_transit",
              "sda_transit_with_pub_sub",
              "sda_transit_with_lisp_bgp"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetUserEnrichmentDetailsResponse": {
        "items": {
          "properties": {
            "connectedDevice": {
              "items": {
                "properties": {
                  "deviceDetails": {
                    "properties": {
                      "apManagerInterfaceIp": {
                        "type": "string"
                      },
                      "associatedWlcIp": {
                        "type": "string"
                      },
                      "bootDateTime": {
                        "type": "string"
                      },
                      "collectionInterval": {
                        "type": "string"
                      },
                      "collectionStatus": {
                        "type": "string"
                      },
                      "errorCode": {
                        "properties": {},
                        "type": "object"
                      },
                      "errorDescription": {
                        "properties": {},
                        "type": "object"
                      },
                      "family": {
                        "type": "string"
                      },
                      "hostname": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "instanceUuid": {
                        "type": "string"
                      },
                      "interfaceCount": {
                        "type": "string"
                      },
                      "inventoryStatusDetail": {
                        "type": "string"
                      },
                      "lastUpdateTime": {
                        "type": "integer"
                      },
                      "lastUpdated": {
                        "type": "string"
                      },
                      "lineCardCount": {
                        "type": "string"
                      },
                      "lineCardId": {
                        "type": "string"
                      },
                      "location": {
                        "properties": {},
                        "type": "object"
                      },
                      "locationName": {
                        "properties": {},
                        "type": "object"
                      },
                      "macAddress": {
                        "type": "string"
                      },
                      "managementIpAddress": {
                        "type": "string"
                      },
                      "memorySize": {
                        "type": "string"
                      },
                      "neighborTopology": {
                        "items": {
                          "properties": {
                            "detail": {
                              "type": "string"
                            },
                            "errorCode": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "platformId": {
                        "type": "string"
                      },
                      "reachabilityFailureReason": {
                        "type": "string"
                      },
                      "reachabilityStatus": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "roleSource": {
                        "type": "string"
                      },
                      "serialNumber": {
                        "type": "string"
                      },
                      "series": {
                        "type": "string"
                      },
                      "snmpContact": {
                        "type": "string"
                      },
                      "snmpLocation": {
                        "type": "string"
                      },
                      "softwareVersion": {
                        "type": "string"
                      },
                      "tagCount": {
                        "type": "string"
                      },
                      "tunnelUdpPort": {
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "type": "string"
                      },
                      "upTime": {
                        "type": "string"
                      },
                      "waasDeviceMode": {
                        "properties": {},
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "userDetails": {
              "properties": {
                "apGroup": {
                  "properties": {},
                  "type": "object"
                },
                "authType": {
                  "properties": {},
                  "type": "object"
                },
                "avgRssi": {
                  "properties": {},
                  "type": "object"
                },
                "avgSnr": {
                  "properties": {},
                  "type": "object"
                },
                "channel": {
                  "properties": {},
                  "type": "object"
                },
                "clientConnection": {
                  "type": "string"
                },
                "connectedDevice": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "connectionStatus": {
                  "type": "string"
                },
                "dataRate": {
                  "properties": {},
                  "type": "object"
                },
                "dnsFailure": {
                  "properties": {},
                  "type": "object"
                },
                "dnsSuccess": {
                  "properties": {},
                  "type": "object"
                },
                "frequency": {
                  "properties": {},
                  "type": "object"
                },
                "healthScore": {
                  "items": {
                    "properties": {
                      "healthType": {
                        "type": "string"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "score": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "hostIpV4": {
                  "type": "string"
                },
                "hostIpV6": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "hostMac": {
                  "type": "string"
                },
                "hostName": {
                  "properties": {},
                  "type": "object"
                },
                "hostOs": {
                  "properties": {},
                  "type": "object"
                },
                "hostType": {
                  "type": "string"
                },
                "hostVersion": {
                  "properties": {},
                  "type": "object"
                },
                "id": {
                  "type": "string"
                },
                "issueCount": {
                  "type": "number"
                },
                "lastUpdated": {
                  "type": "integer"
                },
                "location": {
                  "properties": {},
                  "type": "object"
                },
                "onboarding": {
                  "properties": {
                    "aaaServerIp": {
                      "properties": {},
                      "type": "object"
                    },
                    "averageAssocDuration": {
                      "properties": {},
                      "type": "object"
                    },
                    "averageAuthDuration": {
                      "properties": {},
                      "type": "object"
                    },
                    "averageDhcpDuration": {
                      "properties": {},
                      "type": "object"
                    },
                    "averageRunDuration": {
                      "properties": {},
                      "type": "object"
                    },
                    "dhcpServerIp": {
                      "properties": {},
                      "type": "object"
                    },
                    "maxAssocDuration": {
                      "properties": {},
                      "type": "object"
                    },
                    "maxAuthDuration": {
                      "properties": {},
                      "type": "object"
                    },
                    "maxDhcpDuration": {
                      "properties": {},
                      "type": "object"
                    },
                    "maxRunDuration": {
                      "properties": {},
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "onboardingTime": {
                  "properties": {},
                  "type": "object"
                },
                "port": {
                  "properties": {},
                  "type": "object"
                },
                "rssi": {
                  "properties": {},
                  "type": "object"
                },
                "rxBytes": {
                  "properties": {},
                  "type": "object"
                },
                "snr": {
                  "properties": {},
                  "type": "object"
                },
                "ssid": {
                  "properties": {},
                  "type": "object"
                },
                "subType": {
                  "type": "string"
                },
                "txBytes": {
                  "properties": {},
                  "type": "object"
                },
                "userId": {
                  "properties": {},
                  "type": "object"
                },
                "vlanId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetUsersAPIResponse": {
        "properties": {
          "response": {
            "properties": {
              "users": {
                "items": {
                  "properties": {
                    "authSource": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "passphraseUpdateTime": {
                      "type": "string"
                    },
                    "roleList": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "GetVNFromSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "fabricName": {
            "type": "string"
          },
          "isDefaultVN": {
            "type": "string"
          },
          "isInfraVN": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          },
          "status": {
            "enum": [
              "status",
              "failed"
            ],
            "type": "string"
          },
          "virtualNetworkName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetVirtualAccountListResponse": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "GetVirtualNetworkSummaryResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "virtualNetworkCount": {
            "type": "integer"
          },
          "virtualNetworkSummary": {
            "items": {
              "properties": {
                "siteNameHierarchy": {
                  "type": "string"
                },
                "virtualNetworkName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetVirtualNetworkWithScalableGroupsResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "isGuestVirtualNetwork": {
            "type": "boolean"
          },
          "scalableGroupNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "status": {
            "enum": [
              "success",
              "failed"
            ],
            "type": "string"
          },
          "vManageVpnId": {
            "type": "string"
          },
          "virtualNetworkName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetWebhookDestinationResponse": {
        "properties": {
          "apiStatus": {
            "type": "string"
          },
          "errorMessage": {
            "properties": {
              "errors": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "statusMessage": {
            "items": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "headers": {
                  "items": {
                    "properties": {
                      "defaultValue": {
                        "type": "string"
                      },
                      "encrypt": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "method": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "tenantId": {
                  "type": "string"
                },
                "trustCert": {
                  "type": "boolean"
                },
                "url": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                },
                "webhookId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetWirelessProfileResponse": {
        "items": {
          "properties": {
            "profileDetails": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "sites": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "ssidDetails": {
                  "items": {
                    "properties": {
                      "enableFabric": {
                        "type": "boolean"
                      },
                      "flexConnect": {
                        "properties": {
                          "enableFlexConnect": {
                            "type": "boolean"
                          },
                          "localToVlan": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "interfaceName": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "Guest",
                          "Enterprise"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GetWorkflowByIdResponse": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "addToInventory": {
            "type": "boolean"
          },
          "addedOn": {
            "type": "number"
          },
          "configId": {
            "type": "string"
          },
          "currTaskIdx": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "endTime": {
            "type": "number"
          },
          "execTime": {
            "type": "number"
          },
          "imageId": {
            "type": "string"
          },
          "instanceType": {
            "type": "string"
          },
          "lastupdateOn": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "startTime": {
            "type": "number"
          },
          "state": {
            "type": "string"
          },
          "tasks": {
            "items": {
              "properties": {
                "currWorkItemIdx": {
                  "type": "number"
                },
                "endTime": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "startTime": {
                  "type": "number"
                },
                "state": {
                  "type": "string"
                },
                "taskSeqNo": {
                  "type": "number"
                },
                "timeTaken": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "workItemList": {
                  "items": {
                    "properties": {
                      "command": {
                        "type": "string"
                      },
                      "endTime": {
                        "type": "number"
                      },
                      "outputStr": {
                        "type": "string"
                      },
                      "startTime": {
                        "type": "number"
                      },
                      "state": {
                        "type": "string"
                      },
                      "timeTaken": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "tenantId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "useState": {
            "type": "string"
          },
          "version": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "GetWorkflowCountResponse": {
        "properties": {
          "response": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "GetWorkflowsResponse": {
        "items": {
          "properties": {
            "_id": {
              "type": "string"
            },
            "addToInventory": {
              "type": "boolean"
            },
            "addedOn": {
              "type": "number"
            },
            "configId": {
              "type": "string"
            },
            "currTaskIdx": {
              "type": "number"
            },
            "description": {
              "type": "string"
            },
            "endTime": {
              "type": "number"
            },
            "execTime": {
              "type": "number"
            },
            "imageId": {
              "type": "string"
            },
            "instanceType": {
              "type": "string"
            },
            "lastupdateOn": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "startTime": {
              "type": "number"
            },
            "state": {
              "type": "string"
            },
            "tasks": {
              "items": {
                "properties": {
                  "currWorkItemIdx": {
                    "type": "number"
                  },
                  "endTime": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "number"
                  },
                  "state": {
                    "type": "string"
                  },
                  "taskSeqNo": {
                    "type": "number"
                  },
                  "timeTaken": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string"
                  },
                  "workItemList": {
                    "items": {
                      "properties": {
                        "command": {
                          "type": "string"
                        },
                        "endTime": {
                          "type": "number"
                        },
                        "outputStr": {
                          "type": "string"
                        },
                        "startTime": {
                          "type": "number"
                        },
                        "state": {
                          "type": "string"
                        },
                        "timeTaken": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "tenantId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "useState": {
              "type": "string"
            },
            "version": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "GlobalCredentialListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "comments": {
                  "type": "string"
                },
                "credentialType": {
                  "enum": [
                    "GLOBAL",
                    "APP"
                  ],
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GlobalCredentialSubTypeResult": {
        "properties": {
          "response": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "HTTPReadCredentialDTO": {
        "items": {
          "properties": {
            "comments": {
              "type": "string"
            },
            "credentialType": {
              "enum": [
                "GLOBAL",
                "APP"
              ],
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "instanceTenantId": {
              "type": "string"
            },
            "instanceUuid": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "port": {
              "type": "integer"
            },
            "secure": {
              "type": "boolean"
            },
            "username": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "HTTPWriteCredentialDTO": {
        "properties": {
          "comments": {
            "type": "string"
          },
          "credentialType": {
            "enum": [
              "GLOBAL",
              "APP"
            ],
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instanceTenantId": {
            "type": "string"
          },
          "instanceUuid": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "secure": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImageImportFromUrlDTO": {
        "items": {
          "properties": {
            "applicationType": {
              "type": "string"
            },
            "imageFamily": {
              "type": "string"
            },
            "sourceURL": {
              "type": "string"
            },
            "thirdParty": {
              "type": "boolean"
            },
            "vendor": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "ImageInfoListResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "applicableDevicesForImage": {
                  "items": {
                    "properties": {
                      "mdfId": {
                        "type": "string"
                      },
                      "productId": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "productName": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "applicationType": {
                  "type": "string"
                },
                "createdTime": {
                  "type": "string"
                },
                "extendedAttributes": {
                  "properties": {},
                  "type": "object"
                },
                "family": {
                  "type": "string"
                },
                "feature": {
                  "type": "string"
                },
                "fileServiceId": {
                  "type": "string"
                },
                "fileSize": {
                  "type": "string"
                },
                "imageIntegrityStatus": {
                  "type": "string"
                },
                "imageName": {
                  "type": "string"
                },
                "imageSeries": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "imageSource": {
                  "type": "string"
                },
                "imageType": {
                  "type": "string"
                },
                "imageUuid": {
                  "type": "string"
                },
                "importSourceType": {
                  "enum": [
                    "DEVICE",
                    "REMOTEURL",
                    "CCO",
                    "FILESYSTEM"
                  ],
                  "type": "string"
                },
                "isTaggedGolden": {
                  "type": "boolean"
                },
                "md5Checksum": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "profileInfo": {
                  "items": {
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "extendedAttributes": {
                        "properties": {},
                        "type": "object"
                      },
                      "memory": {
                        "type": "integer"
                      },
                      "productType": {
                        "type": "string"
                      },
                      "profileName": {
                        "type": "string"
                      },
                      "shares": {
                        "type": "integer"
                      },
                      "vCpu": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "shaCheckSum": {
                  "type": "string"
                },
                "vendor": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImportDevicesInBulkResponse": {
        "properties": {
          "failureList": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "index": {
                  "type": "number"
                },
                "msg": {
                  "type": "string"
                },
                "serialNum": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "successList": {
            "items": {
              "properties": {
                "_id": {
                  "type": "string"
                },
                "dayZeroConfig": {
                  "properties": {
                    "config": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "dayZeroConfigPreview": {
                  "properties": {},
                  "type": "object"
                },
                "deviceInfo": {
                  "properties": {
                    "tags": {
                      "properties": {},
                      "type": "object"
                    },
                    "aaaCredentials": {
                      "properties": {
                        "password": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "addedOn": {
                      "type": "number"
                    },
                    "addnMacAddrs": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "agentType": {
                      "type": "string"
                    },
                    "authStatus": {
                      "type": "string"
                    },
                    "authenticatedMicNumber": {
                      "type": "string"
                    },
                    "authenticatedSudiSerialNo": {
                      "type": "string"
                    },
                    "capabilitiesSupported": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cmState": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "deviceSudiSerialNos": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "deviceType": {
                      "type": "string"
                    },
                    "featuresSupported": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "fileSystemList": {
                      "items": {
                        "properties": {
                          "freespace": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "readable": {
                            "type": "boolean"
                          },
                          "size": {
                            "type": "number"
                          },
                          "type": {
                            "type": "string"
                          },
                          "writeable": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "firstContact": {
                      "type": "number"
                    },
                    "hostname": {
                      "type": "string"
                    },
                    "httpHeaders": {
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "imageFile": {
                      "type": "string"
                    },
                    "imageVersion": {
                      "type": "string"
                    },
                    "ipInterfaces": {
                      "items": {
                        "properties": {
                          "ipv4Address": {
                            "properties": {},
                            "type": "object"
                          },
                          "ipv6AddressList": {
                            "items": {
                              "properties": {},
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "macAddress": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "lastContact": {
                      "type": "number"
                    },
                    "lastSyncTime": {
                      "type": "number"
                    },
                    "lastUpdateOn": {
                      "type": "number"
                    },
                    "location": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "altitude": {
                          "type": "string"
                        },
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        },
                        "siteId": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "macAddress": {
                      "type": "string"
                    },
                    "mode": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "neighborLinks": {
                      "items": {
                        "properties": {
                          "localInterfaceName": {
                            "type": "string"
                          },
                          "localMacAddress": {
                            "type": "string"
                          },
                          "localShortInterfaceName": {
                            "type": "string"
                          },
                          "remoteDeviceName": {
                            "type": "string"
                          },
                          "remoteInterfaceName": {
                            "type": "string"
                          },
                          "remoteMacAddress": {
                            "type": "string"
                          },
                          "remotePlatform": {
                            "type": "string"
                          },
                          "remoteShortInterfaceName": {
                            "type": "string"
                          },
                          "remoteVersion": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "onbState": {
                      "type": "string"
                    },
                    "pid": {
                      "type": "string"
                    },
                    "pnpProfileList": {
                      "items": {
                        "properties": {
                          "createdBy": {
                            "type": "string"
                          },
                          "discoveryCreated": {
                            "type": "boolean"
                          },
                          "primaryEndpoint": {
                            "properties": {
                              "certificate": {
                                "type": "string"
                              },
                              "fqdn": {
                                "type": "string"
                              },
                              "ipv4Address": {
                                "properties": {},
                                "type": "object"
                              },
                              "ipv6Address": {
                                "properties": {},
                                "type": "object"
                              },
                              "port": {
                                "type": "number"
                              },
                              "protocol": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "secondaryEndpoint": {
                            "properties": {
                              "certificate": {
                                "type": "string"
                              },
                              "fqdn": {
                                "type": "string"
                              },
                              "ipv4Address": {
                                "properties": {},
                                "type": "object"
                              },
                              "ipv6Address": {
                                "properties": {},
                                "type": "object"
                              },
                              "port": {
                                "type": "number"
                              },
                              "protocol": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "populateInventory": {
                      "type": "boolean"
                    },
                    "preWorkflowCliOuputs": {
                      "items": {
                        "properties": {
                          "cli": {
                            "type": "string"
                          },
                          "cliOutput": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "projectId": {
                      "type": "string"
                    },
                    "projectName": {
                      "type": "string"
                    },
                    "reloadRequested": {
                      "type": "boolean"
                    },
                    "serialNumber": {
                      "type": "string"
                    },
                    "siteId": {
                      "type": "string"
                    },
                    "siteName": {
                      "type": "string"
                    },
                    "smartAccountId": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "stack": {
                      "type": "boolean"
                    },
                    "stackInfo": {
                      "properties": {
                        "isFullRing": {
                          "type": "boolean"
                        },
                        "stackMemberList": {
                          "items": {
                            "properties": {
                              "hardwareVersion": {
                                "type": "string"
                              },
                              "licenseLevel": {
                                "type": "string"
                              },
                              "licenseType": {
                                "type": "string"
                              },
                              "macAddress": {
                                "type": "string"
                              },
                              "pid": {
                                "type": "string"
                              },
                              "priority": {
                                "type": "number"
                              },
                              "role": {
                                "type": "string"
                              },
                              "serialNumber": {
                                "type": "string"
                              },
                              "softwareVersion": {
                                "type": "string"
                              },
                              "stackNumber": {
                                "type": "number"
                              },
                              "state": {
                                "type": "string"
                              },
                              "sudiSerialNumber": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "stackRingProtocol": {
                          "type": "string"
                        },
                        "supportsStackWorkflows": {
                          "type": "boolean"
                        },
                        "totalMemberCount": {
                          "type": "number"
                        },
                        "validLicenseLevels": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "state": {
                      "type": "string"
                    },
                    "sudiRequired": {
                      "type": "boolean"
                    },
                    "userMicNumbers": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "userSudiSerialNos": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "virtualAccountId": {
                      "type": "string"
                    },
                    "workflowId": {
                      "type": "string"
                    },
                    "workflowName": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "runSummaryList": {
                  "items": {
                    "properties": {
                      "details": {
                        "type": "string"
                      },
                      "errorFlag": {
                        "type": "boolean"
                      },
                      "historyTaskInfo": {
                        "properties": {
                          "addnDetails": {
                            "items": {
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          },
                          "type": {
                            "type": "string"
                          },
                          "workItemList": {
                            "items": {
                              "properties": {
                                "command": {
                                  "type": "string"
                                },
                                "endTime": {
                                  "type": "number"
                                },
                                "outputStr": {
                                  "type": "string"
                                },
                                "startTime": {
                                  "type": "number"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "timeTaken": {
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "timestamp": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "systemResetWorkflow": {
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "addToInventory": {
                      "type": "boolean"
                    },
                    "addedOn": {
                      "type": "number"
                    },
                    "configId": {
                      "type": "string"
                    },
                    "currTaskIdx": {
                      "type": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "execTime": {
                      "type": "number"
                    },
                    "imageId": {
                      "type": "string"
                    },
                    "instanceType": {
                      "type": "string"
                    },
                    "lastupdateOn": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "tasks": {
                      "items": {
                        "properties": {
                          "currWorkItemIdx": {
                            "type": "number"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "taskSeqNo": {
                            "type": "number"
                          },
                          "timeTaken": {
                            "type": "number"
                          },
                          "type": {
                            "type": "string"
                          },
                          "workItemList": {
                            "items": {
                              "properties": {
                                "command": {
                                  "type": "string"
                                },
                                "endTime": {
                                  "type": "number"
                                },
                                "outputStr": {
                                  "type": "string"
                                },
                                "startTime": {
                                  "type": "number"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "timeTaken": {
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "useState": {
                      "type": "string"
                    },
                    "version": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "systemWorkflow": {
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "addToInventory": {
                      "type": "boolean"
                    },
                    "addedOn": {
                      "type": "number"
                    },
                    "configId": {
                      "type": "string"
                    },
                    "currTaskIdx": {
                      "type": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "execTime": {
                      "type": "number"
                    },
                    "imageId": {
                      "type": "string"
                    },
                    "instanceType": {
                      "type": "string"
                    },
                    "lastupdateOn": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "tasks": {
                      "items": {
                        "properties": {
                          "currWorkItemIdx": {
                            "type": "number"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "taskSeqNo": {
                            "type": "number"
                          },
                          "timeTaken": {
                            "type": "number"
                          },
                          "type": {
                            "type": "string"
                          },
                          "workItemList": {
                            "items": {
                              "properties": {
                                "command": {
                                  "type": "string"
                                },
                                "endTime": {
                                  "type": "number"
                                },
                                "outputStr": {
                                  "type": "string"
                                },
                                "startTime": {
                                  "type": "number"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "timeTaken": {
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "useState": {
                      "type": "string"
                    },
                    "version": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "tenantId": {
                  "type": "string"
                },
                "version": {
                  "type": "number"
                },
                "workflow": {
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "addToInventory": {
                      "type": "boolean"
                    },
                    "addedOn": {
                      "type": "number"
                    },
                    "configId": {
                      "type": "string"
                    },
                    "currTaskIdx": {
                      "type": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "execTime": {
                      "type": "number"
                    },
                    "imageId": {
                      "type": "string"
                    },
                    "instanceType": {
                      "type": "string"
                    },
                    "lastupdateOn": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "tasks": {
                      "items": {
                        "properties": {
                          "currWorkItemIdx": {
                            "type": "number"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "taskSeqNo": {
                            "type": "number"
                          },
                          "timeTaken": {
                            "type": "number"
                          },
                          "type": {
                            "type": "string"
                          },
                          "workItemList": {
                            "items": {
                              "properties": {
                                "command": {
                                  "type": "string"
                                },
                                "endTime": {
                                  "type": "number"
                                },
                                "outputStr": {
                                  "type": "string"
                                },
                                "startTime": {
                                  "type": "number"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "timeTaken": {
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "useState": {
                      "type": "string"
                    },
                    "version": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "workflowParameters": {
                  "properties": {
                    "configList": {
                      "items": {
                        "properties": {
                          "configId": {
                            "type": "string"
                          },
                          "configParameters": {
                            "items": {
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "licenseLevel": {
                      "type": "string"
                    },
                    "licenseType": {
                      "type": "string"
                    },
                    "topOfStackSerialNumber": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ImportsTheProjectsProvidedRequest": {
        "type": "string"
      },
      "InterfacePoeDetailResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "adminStatus": {
                  "type": "string"
                },
                "allocatedPower": {
                  "type": "string"
                },
                "interfaceName": {
                  "type": "string"
                },
                "maxPortPower": {
                  "type": "string"
                },
                "operStatus": {
                  "type": "string"
                },
                "portPowerDrawn": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "InventoryDeviceInfo": {
        "properties": {
          "cliTransport": {
            "type": "string"
          },
          "computeDevice": {
            "type": "boolean"
          },
          "enablePassword": {
            "type": "string"
          },
          "extendedDiscoveryInfo": {
            "type": "string"
          },
          "httpPassword": {
            "type": "string"
          },
          "httpPort": {
            "type": "string"
          },
          "httpSecure": {
            "type": "boolean"
          },
          "httpUserName": {
            "type": "string"
          },
          "ipAddress": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "merakiOrgId": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "netconfPort": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "snmpAuthPassphrase": {
            "type": "string"
          },
          "snmpAuthProtocol": {
            "type": "string"
          },
          "snmpMode": {
            "type": "string"
          },
          "snmpPrivPassphrase": {
            "type": "string"
          },
          "snmpPrivProtocol": {
            "type": "string"
          },
          "snmpROCommunity": {
            "type": "string"
          },
          "snmpRWCommunity": {
            "type": "string"
          },
          "snmpRetry": {
            "type": "integer"
          },
          "snmpTimeout": {
            "type": "integer"
          },
          "snmpUserName": {
            "type": "string"
          },
          "snmpVersion": {
            "type": "string"
          },
          "type": {
            "enum": [
              "COMPUTE_DEVICE",
              "MERAKI_DASHBOARD",
              "NETWORK_DEVICE",
              "NODATACHANGE"
            ],
            "type": "string"
          },
          "updateMgmtIPaddressList": {
            "items": {
              "properties": {
                "existMgmtIpAddress": {
                  "type": "string"
                },
                "newMgmtIpAddress": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "userName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "InventoryInsightDeviceLinkMismatchAPIResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "avgUpdateFrequency": {
                  "type": "number"
                },
                "endDeviceHostName": {
                  "type": "string"
                },
                "endDeviceId": {
                  "type": "string"
                },
                "endDeviceIpAddress": {
                  "type": "string"
                },
                "endPortAddress": {
                  "type": "string"
                },
                "endPortAllowedVlanIds": {
                  "type": "string"
                },
                "endPortDuplex": {
                  "type": "string"
                },
                "endPortId": {
                  "type": "string"
                },
                "endPortMask": {
                  "type": "string"
                },
                "endPortName": {
                  "type": "string"
                },
                "endPortNativeVlanId": {
                  "type": "string"
                },
                "endPortPepId": {
                  "type": "string"
                },
                "endPortSpeed": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "lastUpdated": {
                  "type": "string"
                },
                "linkStatus": {
                  "type": "string"
                },
                "numUpdates": {
                  "type": "number"
                },
                "startDeviceHostName": {
                  "type": "string"
                },
                "startDeviceId": {
                  "type": "string"
                },
                "startDeviceIpAddress": {
                  "type": "string"
                },
                "startPortAddress": {
                  "type": "string"
                },
                "startPortAllowedVlanIds": {
                  "type": "string"
                },
                "startPortDuplex": {
                  "type": "string"
                },
                "startPortId": {
                  "type": "string"
                },
                "startPortMask": {
                  "type": "string"
                },
                "startPortName": {
                  "type": "string"
                },
                "startPortNativeVlanId": {
                  "type": "string"
                },
                "startPortPepId": {
                  "type": "string"
                },
                "startPortSpeed": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "InventoryRequest": {
        "properties": {
          "cdpLevel": {
            "type": "integer"
          },
          "discoveryType": {
            "type": "string"
          },
          "enablePasswordList": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "globalCredentialIdList": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "httpReadCredential": {
            "properties": {
              "password": {
                "type": "string"
              },
              "port": {
                "type": "integer"
              },
              "secure": {
                "type": "boolean"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "httpWriteCredential": {
            "properties": {
              "password": {
                "type": "string"
              },
              "port": {
                "type": "integer"
              },
              "secure": {
                "type": "boolean"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "ipAddressList": {
            "type": "string"
          },
          "ipFilterList": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lldpLevel": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "netconfPort": {
            "type": "string"
          },
          "passwordList": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "preferredMgmtIPMethod": {
            "type": "string"
          },
          "protocolOrder": {
            "type": "string"
          },
          "retry": {
            "type": "integer"
          },
          "snmpAuthPassphrase": {
            "type": "string"
          },
          "snmpAuthProtocol": {
            "type": "string"
          },
          "snmpMode": {
            "type": "string"
          },
          "snmpPrivPassphrase": {
            "type": "string"
          },
          "snmpPrivProtocol": {
            "type": "string"
          },
          "snmpROCommunity": {
            "type": "string"
          },
          "snmpROCommunityDesc": {
            "type": "string"
          },
          "snmpRWCommunity": {
            "type": "string"
          },
          "snmpRWCommunityDesc": {
            "type": "string"
          },
          "snmpUserName": {
            "type": "string"
          },
          "snmpVersion": {
            "type": "string"
          },
          "timeout": {
            "type": "integer"
          },
          "userNameList": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IsGoldenTaggedResponse": {
        "properties": {
          "response": {
            "properties": {
              "deviceRole": {
                "type": "string"
              },
              "inheritedSiteId": {
                "type": "string"
              },
              "inheritedSiteName": {
                "type": "string"
              },
              "taggedGolden": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "IssuesResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "aiDriven": {
                  "type": "boolean"
                },
                "category": {
                  "type": "string"
                },
                "clientMac": {
                  "type": "string"
                },
                "deviceId": {
                  "type": "string"
                },
                "deviceRole": {
                  "type": "string"
                },
                "issueId": {
                  "type": "string"
                },
                "issue_occurence_count": {
                  "type": "integer"
                },
                "last_occurence_time": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "priority": {
                  "type": "string"
                },
                "siteId": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "totalCount": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LANAutomationActiveSession": {
        "properties": {
          "response": {
            "properties": {
              "activeSessionIds": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "activeSessions": {
                "type": "string"
              },
              "maxSupportedCount": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LANAutomationLogByIdResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "entry": {
                  "items": {
                    "properties": {
                      "deviceId": {
                        "type": "string"
                      },
                      "logLevel": {
                        "type": "string"
                      },
                      "record": {
                        "type": "string"
                      },
                      "timeStamp": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "nwOrchId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LANAutomationLogResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "entry": {
                  "items": {
                    "properties": {
                      "deviceId": {
                        "type": "string"
                      },
                      "logLevel": {
                        "type": "string"
                      },
                      "record": {
                        "type": "string"
                      },
                      "timeStamp": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "nwOrchId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LANAutomationLogsForIndividualDevicesResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "logs": {
                  "items": {
                    "properties": {
                      "logLevel": {
                        "type": "string"
                      },
                      "record": {
                        "type": "string"
                      },
                      "timeStamp": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "nwOrchId": {
                  "type": "string"
                },
                "serialNumber": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LANAutomationSessionCountResponse": {
        "properties": {
          "response": {
            "properties": {
              "sessionCount": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "LANAutomationStartRequest": {
        "items": {
          "properties": {
            "discoveredDeviceSiteNameHierarchy": {
              "type": "string"
            },
            "hostNameFileId": {
              "type": "string"
            },
            "hostNamePrefix": {
              "type": "string"
            },
            "ipPools": {
              "items": {
                "properties": {
                  "ipPoolName": {
                    "type": "string"
                  },
                  "ipPoolRole": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "isisDomainPwd": {
              "type": "string"
            },
            "mulitcastEnabled": {
              "type": "boolean"
            },
            "peerDeviceManagmentIPAddress": {
              "type": "string"
            },
            "primaryDeviceInterfaceNames": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "primaryDeviceManagmentIPAddress": {
              "type": "string"
            },
            "redistributeIsisToBgp": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "LANAutomationStartResponse": {
        "properties": {
          "response": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LANAutomationStatusByIdResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "action": {
                  "type": "string"
                },
                "creationTime": {
                  "type": "string"
                },
                "discoveredDeviceList": {
                  "items": {
                    "properties": {
                      "ipAddressInUseList": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "serialNumber": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "discoveredDeviceSiteNameHierarchy": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "ipPoolList": {
                  "items": {
                    "properties": {
                      "ipPoolName": {
                        "type": "string"
                      },
                      "ipPoolRole": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "multicastEnabled": {
                  "type": "boolean"
                },
                "peerDeviceManagmentIPAddress": {
                  "type": "string"
                },
                "primaryDeviceInterfaceNames": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "primaryDeviceManagmentIPAddress": {
                  "type": "string"
                },
                "redistributeIsisToBgp": {
                  "type": "boolean"
                },
                "status": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LANAutomationStatusResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "action": {
                  "type": "string"
                },
                "creationTime": {
                  "type": "string"
                },
                "discoveredDeviceList": {
                  "items": {
                    "properties": {
                      "ipAddressInUseList": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "serialNumber": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "discoveredDeviceSiteNameHierarchy": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "ipPoolList": {
                  "items": {
                    "properties": {
                      "ipPoolName": {
                        "type": "string"
                      },
                      "ipPoolRole": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "multicastEnabled": {
                  "type": "boolean"
                },
                "peerDeviceManagmentIPAddress": {
                  "type": "string"
                },
                "primaryDeviceInterfaceNames": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "primaryDeviceManagmentIPAddress": {
                  "type": "string"
                },
                "redistributeIsisToBgp": {
                  "type": "boolean"
                },
                "status": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LANAutomationStopRequest": {
        "type": "string"
      },
      "LANAutomationStopResponse": {
        "properties": {
          "response": {
            "properties": {
              "detail": {
                "type": "string"
              },
              "errorCode": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LegitCliKeyResult": {
        "properties": {
          "response": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LegitOperationsForInterfaceResponse": {
        "properties": {
          "response": {
            "properties": {
              "properties": {
                "properties": {
                  "interfaceUuid": {
                    "properties": {
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "operations": {
                    "properties": {
                      "items": {
                        "items": {
                          "properties": {
                            "properties": {
                              "properties": {
                                "applicable": {
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "failureReason": {
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "name": {
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "required": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "properties": {
                    "properties": {
                      "items": {
                        "items": {
                          "properties": {
                            "properties": {
                              "properties": {
                                "applicable": {
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "failureReason": {
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "name": {
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "required": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "required": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "properties": {
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "LicenseTermDetailsResponse": {
        "properties": {
          "license_details": {
            "items": {
              "properties": {
                "dna_level": {
                  "type": "string"
                },
                "is_license_expired": {
                  "type": "string"
                },
                "license_term_end_date": {
                  "type": "string"
                },
                "license_term_start_date": {
                  "type": "string"
                },
                "model": {
                  "type": "string"
                },
                "purchased_dna_license_count": {
                  "type": "string"
                },
                "virtual_account_name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LicenseUsageDetailsResponse": {
        "properties": {
          "purchased_dna_license": {
            "properties": {
              "license_count_by_type": {
                "items": {
                  "properties": {
                    "license_count": {
                      "type": "integer"
                    },
                    "license_type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "total_license_count": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "purchased_network_license": {
            "properties": {
              "license_count_by_type": {
                "items": {
                  "properties": {
                    "license_count": {
                      "type": "integer"
                    },
                    "license_type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "total_license_count": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "used_dna_license": {
            "properties": {
              "license_count_by_type": {
                "items": {
                  "properties": {
                    "license_count": {
                      "type": "integer"
                    },
                    "license_type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "total_license_count": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "used_network_license": {
            "properties": {
              "license_count_by_type": {
                "items": {
                  "properties": {
                    "license_count": {
                      "type": "integer"
                    },
                    "license_type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "total_license_count": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Listentrystringliststring": {
        "properties": {},
        "type": "object"
      },
      "ModuleListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "assemblyNumber": {
                  "type": "string"
                },
                "assemblyRevision": {
                  "type": "string"
                },
                "attributeInfo": {
                  "properties": {},
                  "type": "object"
                },
                "containmentEntity": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "entityPhysicalIndex": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "isFieldReplaceable": {
                  "enum": [
                    "UNKNOWN",
                    "TRUE",
                    "FALSE",
                    "NOT_APPLICABLE"
                  ],
                  "type": "string"
                },
                "isReportingAlarmsAllowed": {
                  "enum": [
                    "UNKNOWN",
                    "TRUE",
                    "FALSE",
                    "NOT_APPLICABLE"
                  ],
                  "type": "string"
                },
                "manufacturer": {
                  "type": "string"
                },
                "moduleIndex": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "operationalStateCode": {
                  "type": "string"
                },
                "partNumber": {
                  "type": "string"
                },
                "serialNumber": {
                  "type": "string"
                },
                "vendorEquipmentType": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ModuleResult": {
        "properties": {
          "response": {
            "properties": {
              "assemblyNumber": {
                "type": "string"
              },
              "assemblyRevision": {
                "type": "string"
              },
              "attributeInfo": {
                "properties": {},
                "type": "object"
              },
              "containmentEntity": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "entityPhysicalIndex": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "isFieldReplaceable": {
                "enum": [
                  "UNKNOWN",
                  "TRUE",
                  "FALSE",
                  "NOT_APPLICABLE"
                ],
                "type": "string"
              },
              "isReportingAlarmsAllowed": {
                "enum": [
                  "UNKNOWN",
                  "TRUE",
                  "FALSE",
                  "NOT_APPLICABLE"
                ],
                "type": "string"
              },
              "manufacturer": {
                "type": "string"
              },
              "moduleIndex": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "operationalStateCode": {
                "type": "string"
              },
              "partNumber": {
                "type": "string"
              },
              "serialNumber": {
                "type": "string"
              },
              "vendorEquipmentType": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NFVProvisioningDetailRequest": {
        "properties": {
          "device_ip": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NFVProvisioningDetailResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NameSpaceListResult": {
        "properties": {
          "response": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NeighborResult": {
        "properties": {
          "response": {
            "properties": {
              "capabilities": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "neighborDevice": {
                "type": "string"
              },
              "neighborPort": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetconfCredentialDTO": {
        "properties": {
          "comments": {
            "type": "string"
          },
          "credentialType": {
            "enum": [
              "GLOBAL",
              "APP"
            ],
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instanceTenantId": {
            "type": "string"
          },
          "instanceUuid": {
            "type": "string"
          },
          "netconfPort": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkDeviceBriefNIO": {
        "properties": {
          "id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "roleSource": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkDeviceBriefNIOResult": {
        "properties": {
          "response": {
            "properties": {
              "id": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "roleSource": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkDeviceListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "apManagerInterfaceIp": {
                  "type": "string"
                },
                "associatedWlcIp": {
                  "type": "string"
                },
                "bootDateTime": {
                  "type": "string"
                },
                "collectionInterval": {
                  "type": "string"
                },
                "collectionStatus": {
                  "type": "string"
                },
                "errorCode": {
                  "type": "string"
                },
                "errorDescription": {
                  "type": "string"
                },
                "family": {
                  "type": "string"
                },
                "hostname": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "interfaceCount": {
                  "type": "string"
                },
                "inventoryStatusDetail": {
                  "type": "string"
                },
                "lastUpdateTime": {
                  "type": "string"
                },
                "lastUpdated": {
                  "type": "string"
                },
                "lineCardCount": {
                  "type": "string"
                },
                "lineCardId": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "locationName": {
                  "type": "string"
                },
                "macAddress": {
                  "type": "string"
                },
                "managementIpAddress": {
                  "type": "string"
                },
                "memorySize": {
                  "type": "string"
                },
                "platformId": {
                  "type": "string"
                },
                "reachabilityFailureReason": {
                  "type": "string"
                },
                "reachabilityStatus": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "roleSource": {
                  "type": "string"
                },
                "serialNumber": {
                  "type": "string"
                },
                "series": {
                  "type": "string"
                },
                "snmpContact": {
                  "type": "string"
                },
                "snmpLocation": {
                  "type": "string"
                },
                "softwareType": {
                  "type": "string"
                },
                "softwareVersion": {
                  "type": "string"
                },
                "tagCount": {
                  "type": "string"
                },
                "tunnelUdpPort": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "upTime": {
                  "type": "string"
                },
                "waasDeviceMode": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkDeviceNIOListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "anchorWlcForAp": {
                  "type": "string"
                },
                "authModelId": {
                  "type": "string"
                },
                "avgUpdateFrequency": {
                  "type": "integer"
                },
                "bootDateTime": {
                  "type": "string"
                },
                "cliStatus": {
                  "type": "string"
                },
                "duplicateDeviceId": {
                  "type": "string"
                },
                "errorCode": {
                  "type": "string"
                },
                "errorDescription": {
                  "type": "string"
                },
                "family": {
                  "type": "string"
                },
                "hostname": {
                  "type": "string"
                },
                "httpStatus": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "imageName": {
                  "type": "string"
                },
                "ingressQueueConfig": {
                  "type": "string"
                },
                "interfaceCount": {
                  "type": "string"
                },
                "inventoryCollectionStatus": {
                  "type": "string"
                },
                "inventoryReachabilityStatus": {
                  "type": "string"
                },
                "lastUpdated": {
                  "type": "string"
                },
                "lineCardCount": {
                  "type": "string"
                },
                "lineCardId": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "locationName": {
                  "type": "string"
                },
                "macAddress": {
                  "type": "string"
                },
                "managementIpAddress": {
                  "type": "string"
                },
                "memorySize": {
                  "type": "string"
                },
                "netconfStatus": {
                  "type": "string"
                },
                "numUpdates": {
                  "type": "integer"
                },
                "pingStatus": {
                  "type": "string"
                },
                "platformId": {
                  "type": "string"
                },
                "portRange": {
                  "type": "string"
                },
                "qosStatus": {
                  "type": "string"
                },
                "reachabilityFailureReason": {
                  "type": "string"
                },
                "reachabilityStatus": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "roleSource": {
                  "type": "string"
                },
                "serialNumber": {
                  "type": "string"
                },
                "snmpContact": {
                  "type": "string"
                },
                "snmpLocation": {
                  "type": "string"
                },
                "snmpStatus": {
                  "type": "string"
                },
                "softwareVersion": {
                  "type": "string"
                },
                "tag": {
                  "type": "string"
                },
                "tagCount": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "upTime": {
                  "type": "string"
                },
                "vendor": {
                  "type": "string"
                },
                "wlcApDeviceStatus": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkDeviceResult": {
        "properties": {
          "response": {
            "properties": {
              "apManagerInterfaceIp": {
                "type": "string"
              },
              "associatedWlcIp": {
                "type": "string"
              },
              "bootDateTime": {
                "type": "string"
              },
              "collectionInterval": {
                "type": "string"
              },
              "collectionStatus": {
                "type": "string"
              },
              "errorCode": {
                "type": "string"
              },
              "errorDescription": {
                "type": "string"
              },
              "family": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "instanceTenantId": {
                "type": "string"
              },
              "instanceUuid": {
                "type": "string"
              },
              "interfaceCount": {
                "type": "string"
              },
              "inventoryStatusDetail": {
                "type": "string"
              },
              "lastUpdateTime": {
                "type": "string"
              },
              "lastUpdated": {
                "type": "string"
              },
              "lineCardCount": {
                "type": "string"
              },
              "lineCardId": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "locationName": {
                "type": "string"
              },
              "macAddress": {
                "type": "string"
              },
              "managementIpAddress": {
                "type": "string"
              },
              "memorySize": {
                "type": "string"
              },
              "platformId": {
                "type": "string"
              },
              "reachabilityFailureReason": {
                "type": "string"
              },
              "reachabilityStatus": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "roleSource": {
                "type": "string"
              },
              "serialNumber": {
                "type": "string"
              },
              "series": {
                "type": "string"
              },
              "snmpContact": {
                "type": "string"
              },
              "snmpLocation": {
                "type": "string"
              },
              "softwareType": {
                "type": "string"
              },
              "softwareVersion": {
                "type": "string"
              },
              "tagCount": {
                "type": "string"
              },
              "tunnelUdpPort": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "upTime": {
                "type": "string"
              },
              "waasDeviceMode": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "POSTREQUEST": {
        "properties": {
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "deviceUuids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "triggerFull": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PSKOverrideRequest": {
        "items": {
          "properties": {
            "passPhrase": {
              "type": "string"
            },
            "site": {
              "type": "string"
            },
            "ssid": {
              "type": "string"
            },
            "wlanProfileName": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "PSKOverrideResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PathResponseResult": {
        "properties": {
          "response": {
            "properties": {
              "detailedStatus": {
                "properties": {
                  "aclTraceCalculation": {
                    "type": "string"
                  },
                  "aclTraceCalculationFailureReason": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "lastUpdate": {
                "type": "string"
              },
              "networkElements": {
                "items": {
                  "properties": {
                    "accuracyList": {
                      "items": {
                        "properties": {
                          "percent": {
                            "type": "integer"
                          },
                          "reason": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "detailedStatus": {
                      "properties": {
                        "aclTraceCalculation": {
                          "type": "string"
                        },
                        "aclTraceCalculationFailureReason": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "deviceStatistics": {
                      "properties": {
                        "cpuStatistics": {
                          "properties": {
                            "fiveMinUsageInPercentage": {
                              "type": "number"
                            },
                            "fiveSecsUsageInPercentage": {
                              "type": "number"
                            },
                            "oneMinUsageInPercentage": {
                              "type": "number"
                            },
                            "refreshedAt": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "memoryStatistics": {
                          "properties": {
                            "memoryUsage": {
                              "type": "integer"
                            },
                            "refreshedAt": {
                              "type": "integer"
                            },
                            "totalMemory": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "deviceStatsCollection": {
                      "type": "string"
                    },
                    "deviceStatsCollectionFailureReason": {
                      "type": "string"
                    },
                    "egressPhysicalInterface": {
                      "properties": {
                        "aclAnalysis": {
                          "properties": {
                            "aclName": {
                              "type": "string"
                            },
                            "matchingAces": {
                              "items": {
                                "properties": {
                                  "ace": {
                                    "type": "string"
                                  },
                                  "matchingPorts": {
                                    "items": {
                                      "properties": {
                                        "ports": {
                                          "items": {
                                            "properties": {
                                              "destPorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "sourcePorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "protocol": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "result": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "result": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "type": "string"
                        },
                        "interfaceStatistics": {
                          "properties": {
                            "adminStatus": {
                              "type": "string"
                            },
                            "inputPackets": {
                              "type": "integer"
                            },
                            "inputQueueCount": {
                              "type": "integer"
                            },
                            "inputQueueDrops": {
                              "type": "integer"
                            },
                            "inputQueueFlushes": {
                              "type": "integer"
                            },
                            "inputQueueMaxDepth": {
                              "type": "integer"
                            },
                            "inputRatebps": {
                              "type": "integer"
                            },
                            "operationalStatus": {
                              "type": "string"
                            },
                            "outputDrop": {
                              "type": "integer"
                            },
                            "outputPackets": {
                              "type": "integer"
                            },
                            "outputQueueCount": {
                              "type": "integer"
                            },
                            "outputQueueDepth": {
                              "type": "integer"
                            },
                            "outputRatebps": {
                              "type": "integer"
                            },
                            "refreshedAt": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "interfaceStatsCollection": {
                          "type": "string"
                        },
                        "interfaceStatsCollectionFailureReason": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "pathOverlayInfo": {
                          "items": {
                            "properties": {
                              "controlPlane": {
                                "type": "string"
                              },
                              "dataPacketEncapsulation": {
                                "type": "string"
                              },
                              "destIp": {
                                "type": "string"
                              },
                              "destPort": {
                                "type": "string"
                              },
                              "protocol": {
                                "type": "string"
                              },
                              "sourceIp": {
                                "type": "string"
                              },
                              "sourcePort": {
                                "type": "string"
                              },
                              "vxlanInfo": {
                                "properties": {
                                  "dscp": {
                                    "type": "string"
                                  },
                                  "vnid": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "qosStatistics": {
                          "items": {
                            "properties": {
                              "classMapName": {
                                "type": "string"
                              },
                              "dropRate": {
                                "type": "integer"
                              },
                              "numBytes": {
                                "type": "integer"
                              },
                              "numPackets": {
                                "type": "integer"
                              },
                              "offeredRate": {
                                "type": "integer"
                              },
                              "queueBandwidthbps": {
                                "type": "string"
                              },
                              "queueDepth": {
                                "type": "integer"
                              },
                              "queueNoBufferDrops": {
                                "type": "integer"
                              },
                              "queueTotalDrops": {
                                "type": "integer"
                              },
                              "refreshedAt": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "qosStatsCollection": {
                          "type": "string"
                        },
                        "qosStatsCollectionFailureReason": {
                          "type": "string"
                        },
                        "usedVlan": {
                          "type": "string"
                        },
                        "vrfName": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "egressVirtualInterface": {
                      "properties": {
                        "aclAnalysis": {
                          "properties": {
                            "aclName": {
                              "type": "string"
                            },
                            "matchingAces": {
                              "items": {
                                "properties": {
                                  "ace": {
                                    "type": "string"
                                  },
                                  "matchingPorts": {
                                    "items": {
                                      "properties": {
                                        "ports": {
                                          "items": {
                                            "properties": {
                                              "destPorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "sourcePorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "protocol": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "result": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "result": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "type": "string"
                        },
                        "interfaceStatistics": {
                          "properties": {
                            "adminStatus": {
                              "type": "string"
                            },
                            "inputPackets": {
                              "type": "integer"
                            },
                            "inputQueueCount": {
                              "type": "integer"
                            },
                            "inputQueueDrops": {
                              "type": "integer"
                            },
                            "inputQueueFlushes": {
                              "type": "integer"
                            },
                            "inputQueueMaxDepth": {
                              "type": "integer"
                            },
                            "inputRatebps": {
                              "type": "integer"
                            },
                            "operationalStatus": {
                              "type": "string"
                            },
                            "outputDrop": {
                              "type": "integer"
                            },
                            "outputPackets": {
                              "type": "integer"
                            },
                            "outputQueueCount": {
                              "type": "integer"
                            },
                            "outputQueueDepth": {
                              "type": "integer"
                            },
                            "outputRatebps": {
                              "type": "integer"
                            },
                            "refreshedAt": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "interfaceStatsCollection": {
                          "type": "string"
                        },
                        "interfaceStatsCollectionFailureReason": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "pathOverlayInfo": {
                          "items": {
                            "properties": {
                              "controlPlane": {
                                "type": "string"
                              },
                              "dataPacketEncapsulation": {
                                "type": "string"
                              },
                              "destIp": {
                                "type": "string"
                              },
                              "destPort": {
                                "type": "string"
                              },
                              "protocol": {
                                "type": "string"
                              },
                              "sourceIp": {
                                "type": "string"
                              },
                              "sourcePort": {
                                "type": "string"
                              },
                              "vxlanInfo": {
                                "properties": {
                                  "dscp": {
                                    "type": "string"
                                  },
                                  "vnid": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "qosStatistics": {
                          "items": {
                            "properties": {
                              "classMapName": {
                                "type": "string"
                              },
                              "dropRate": {
                                "type": "integer"
                              },
                              "numBytes": {
                                "type": "integer"
                              },
                              "numPackets": {
                                "type": "integer"
                              },
                              "offeredRate": {
                                "type": "integer"
                              },
                              "queueBandwidthbps": {
                                "type": "string"
                              },
                              "queueDepth": {
                                "type": "integer"
                              },
                              "queueNoBufferDrops": {
                                "type": "integer"
                              },
                              "queueTotalDrops": {
                                "type": "integer"
                              },
                              "refreshedAt": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "qosStatsCollection": {
                          "type": "string"
                        },
                        "qosStatsCollectionFailureReason": {
                          "type": "string"
                        },
                        "usedVlan": {
                          "type": "string"
                        },
                        "vrfName": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "flexConnect": {
                      "properties": {
                        "authentication": {
                          "enum": [
                            "LOCAL",
                            "CENTRAL"
                          ],
                          "type": "string"
                        },
                        "dataSwitching": {
                          "enum": [
                            "LOCAL",
                            "CENTRAL"
                          ],
                          "type": "string"
                        },
                        "egressAclAnalysis": {
                          "properties": {
                            "aclName": {
                              "type": "string"
                            },
                            "matchingAces": {
                              "items": {
                                "properties": {
                                  "ace": {
                                    "type": "string"
                                  },
                                  "matchingPorts": {
                                    "items": {
                                      "properties": {
                                        "ports": {
                                          "items": {
                                            "properties": {
                                              "destPorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "sourcePorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "protocol": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "result": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "result": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "ingressAclAnalysis": {
                          "properties": {
                            "aclName": {
                              "type": "string"
                            },
                            "matchingAces": {
                              "items": {
                                "properties": {
                                  "ace": {
                                    "type": "string"
                                  },
                                  "matchingPorts": {
                                    "items": {
                                      "properties": {
                                        "ports": {
                                          "items": {
                                            "properties": {
                                              "destPorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "sourcePorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "protocol": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "result": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "result": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "wirelessLanControllerId": {
                          "type": "string"
                        },
                        "wirelessLanControllerName": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "ingressPhysicalInterface": {
                      "properties": {
                        "aclAnalysis": {
                          "properties": {
                            "aclName": {
                              "type": "string"
                            },
                            "matchingAces": {
                              "items": {
                                "properties": {
                                  "ace": {
                                    "type": "string"
                                  },
                                  "matchingPorts": {
                                    "items": {
                                      "properties": {
                                        "ports": {
                                          "items": {
                                            "properties": {
                                              "destPorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "sourcePorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "protocol": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "result": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "result": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "type": "string"
                        },
                        "interfaceStatistics": {
                          "properties": {
                            "adminStatus": {
                              "type": "string"
                            },
                            "inputPackets": {
                              "type": "integer"
                            },
                            "inputQueueCount": {
                              "type": "integer"
                            },
                            "inputQueueDrops": {
                              "type": "integer"
                            },
                            "inputQueueFlushes": {
                              "type": "integer"
                            },
                            "inputQueueMaxDepth": {
                              "type": "integer"
                            },
                            "inputRatebps": {
                              "type": "integer"
                            },
                            "operationalStatus": {
                              "type": "string"
                            },
                            "outputDrop": {
                              "type": "integer"
                            },
                            "outputPackets": {
                              "type": "integer"
                            },
                            "outputQueueCount": {
                              "type": "integer"
                            },
                            "outputQueueDepth": {
                              "type": "integer"
                            },
                            "outputRatebps": {
                              "type": "integer"
                            },
                            "refreshedAt": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "interfaceStatsCollection": {
                          "type": "string"
                        },
                        "interfaceStatsCollectionFailureReason": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "pathOverlayInfo": {
                          "items": {
                            "properties": {
                              "controlPlane": {
                                "type": "string"
                              },
                              "dataPacketEncapsulation": {
                                "type": "string"
                              },
                              "destIp": {
                                "type": "string"
                              },
                              "destPort": {
                                "type": "string"
                              },
                              "protocol": {
                                "type": "string"
                              },
                              "sourceIp": {
                                "type": "string"
                              },
                              "sourcePort": {
                                "type": "string"
                              },
                              "vxlanInfo": {
                                "properties": {
                                  "dscp": {
                                    "type": "string"
                                  },
                                  "vnid": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "qosStatistics": {
                          "items": {
                            "properties": {
                              "classMapName": {
                                "type": "string"
                              },
                              "dropRate": {
                                "type": "integer"
                              },
                              "numBytes": {
                                "type": "integer"
                              },
                              "numPackets": {
                                "type": "integer"
                              },
                              "offeredRate": {
                                "type": "integer"
                              },
                              "queueBandwidthbps": {
                                "type": "string"
                              },
                              "queueDepth": {
                                "type": "integer"
                              },
                              "queueNoBufferDrops": {
                                "type": "integer"
                              },
                              "queueTotalDrops": {
                                "type": "integer"
                              },
                              "refreshedAt": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "qosStatsCollection": {
                          "type": "string"
                        },
                        "qosStatsCollectionFailureReason": {
                          "type": "string"
                        },
                        "usedVlan": {
                          "type": "string"
                        },
                        "vrfName": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "ingressVirtualInterface": {
                      "properties": {
                        "aclAnalysis": {
                          "properties": {
                            "aclName": {
                              "type": "string"
                            },
                            "matchingAces": {
                              "items": {
                                "properties": {
                                  "ace": {
                                    "type": "string"
                                  },
                                  "matchingPorts": {
                                    "items": {
                                      "properties": {
                                        "ports": {
                                          "items": {
                                            "properties": {
                                              "destPorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "sourcePorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "protocol": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "result": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "result": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "type": "string"
                        },
                        "interfaceStatistics": {
                          "properties": {
                            "adminStatus": {
                              "type": "string"
                            },
                            "inputPackets": {
                              "type": "integer"
                            },
                            "inputQueueCount": {
                              "type": "integer"
                            },
                            "inputQueueDrops": {
                              "type": "integer"
                            },
                            "inputQueueFlushes": {
                              "type": "integer"
                            },
                            "inputQueueMaxDepth": {
                              "type": "integer"
                            },
                            "inputRatebps": {
                              "type": "integer"
                            },
                            "operationalStatus": {
                              "type": "string"
                            },
                            "outputDrop": {
                              "type": "integer"
                            },
                            "outputPackets": {
                              "type": "integer"
                            },
                            "outputQueueCount": {
                              "type": "integer"
                            },
                            "outputQueueDepth": {
                              "type": "integer"
                            },
                            "outputRatebps": {
                              "type": "integer"
                            },
                            "refreshedAt": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "interfaceStatsCollection": {
                          "type": "string"
                        },
                        "interfaceStatsCollectionFailureReason": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "pathOverlayInfo": {
                          "items": {
                            "properties": {
                              "controlPlane": {
                                "type": "string"
                              },
                              "dataPacketEncapsulation": {
                                "type": "string"
                              },
                              "destIp": {
                                "type": "string"
                              },
                              "destPort": {
                                "type": "string"
                              },
                              "protocol": {
                                "type": "string"
                              },
                              "sourceIp": {
                                "type": "string"
                              },
                              "sourcePort": {
                                "type": "string"
                              },
                              "vxlanInfo": {
                                "properties": {
                                  "dscp": {
                                    "type": "string"
                                  },
                                  "vnid": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "qosStatistics": {
                          "items": {
                            "properties": {
                              "classMapName": {
                                "type": "string"
                              },
                              "dropRate": {
                                "type": "integer"
                              },
                              "numBytes": {
                                "type": "integer"
                              },
                              "numPackets": {
                                "type": "integer"
                              },
                              "offeredRate": {
                                "type": "integer"
                              },
                              "queueBandwidthbps": {
                                "type": "string"
                              },
                              "queueDepth": {
                                "type": "integer"
                              },
                              "queueNoBufferDrops": {
                                "type": "integer"
                              },
                              "queueTotalDrops": {
                                "type": "integer"
                              },
                              "refreshedAt": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "qosStatsCollection": {
                          "type": "string"
                        },
                        "qosStatsCollectionFailureReason": {
                          "type": "string"
                        },
                        "usedVlan": {
                          "type": "string"
                        },
                        "vrfName": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "linkInformationSource": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "perfMonCollection": {
                      "type": "string"
                    },
                    "perfMonCollectionFailureReason": {
                      "type": "string"
                    },
                    "perfMonStatistics": {
                      "items": {
                        "properties": {
                          "byteRate": {
                            "type": "integer"
                          },
                          "destIpAddress": {
                            "type": "string"
                          },
                          "destPort": {
                            "type": "string"
                          },
                          "inputInterface": {
                            "type": "string"
                          },
                          "ipv4DSCP": {
                            "type": "string"
                          },
                          "ipv4TTL": {
                            "type": "integer"
                          },
                          "outputInterface": {
                            "type": "string"
                          },
                          "packetBytes": {
                            "type": "integer"
                          },
                          "packetCount": {
                            "type": "integer"
                          },
                          "packetLoss": {
                            "type": "integer"
                          },
                          "packetLossPercentage": {
                            "type": "number"
                          },
                          "protocol": {
                            "type": "string"
                          },
                          "refreshedAt": {
                            "type": "integer"
                          },
                          "rtpJitterMax": {
                            "type": "integer"
                          },
                          "rtpJitterMean": {
                            "type": "integer"
                          },
                          "rtpJitterMin": {
                            "type": "integer"
                          },
                          "sourceIpAddress": {
                            "type": "string"
                          },
                          "sourcePort": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "role": {
                      "type": "string"
                    },
                    "ssid": {
                      "type": "string"
                    },
                    "tunnels": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "type": {
                      "type": "string"
                    },
                    "wlanId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "networkElementsInfo": {
                "items": {
                  "properties": {
                    "accuracyList": {
                      "items": {
                        "properties": {
                          "percent": {
                            "type": "integer"
                          },
                          "reason": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "detailedStatus": {
                      "properties": {
                        "aclTraceCalculation": {
                          "type": "string"
                        },
                        "aclTraceCalculationFailureReason": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "deviceStatistics": {
                      "properties": {
                        "cpuStatistics": {
                          "properties": {
                            "fiveMinUsageInPercentage": {
                              "type": "number"
                            },
                            "fiveSecsUsageInPercentage": {
                              "type": "number"
                            },
                            "oneMinUsageInPercentage": {
                              "type": "number"
                            },
                            "refreshedAt": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "memoryStatistics": {
                          "properties": {
                            "memoryUsage": {
                              "type": "integer"
                            },
                            "refreshedAt": {
                              "type": "integer"
                            },
                            "totalMemory": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "deviceStatsCollection": {
                      "type": "string"
                    },
                    "deviceStatsCollectionFailureReason": {
                      "type": "string"
                    },
                    "egressInterface": {
                      "properties": {
                        "physicalInterface": {
                          "properties": {
                            "aclAnalysis": {
                              "properties": {
                                "aclName": {
                                  "type": "string"
                                },
                                "matchingAces": {
                                  "items": {
                                    "properties": {
                                      "ace": {
                                        "type": "string"
                                      },
                                      "matchingPorts": {
                                        "items": {
                                          "properties": {
                                            "ports": {
                                              "items": {
                                                "properties": {
                                                  "destPorts": {
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "sourcePorts": {
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "type": "array"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": "array"
                                            },
                                            "protocol": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "result": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "result": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "id": {
                              "type": "string"
                            },
                            "interfaceStatistics": {
                              "properties": {
                                "adminStatus": {
                                  "type": "string"
                                },
                                "inputPackets": {
                                  "type": "integer"
                                },
                                "inputQueueCount": {
                                  "type": "integer"
                                },
                                "inputQueueDrops": {
                                  "type": "integer"
                                },
                                "inputQueueFlushes": {
                                  "type": "integer"
                                },
                                "inputQueueMaxDepth": {
                                  "type": "integer"
                                },
                                "inputRatebps": {
                                  "type": "integer"
                                },
                                "operationalStatus": {
                                  "type": "string"
                                },
                                "outputDrop": {
                                  "type": "integer"
                                },
                                "outputPackets": {
                                  "type": "integer"
                                },
                                "outputQueueCount": {
                                  "type": "integer"
                                },
                                "outputQueueDepth": {
                                  "type": "integer"
                                },
                                "outputRatebps": {
                                  "type": "integer"
                                },
                                "refreshedAt": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "interfaceStatsCollection": {
                              "type": "string"
                            },
                            "interfaceStatsCollectionFailureReason": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "pathOverlayInfo": {
                              "items": {
                                "properties": {
                                  "controlPlane": {
                                    "type": "string"
                                  },
                                  "dataPacketEncapsulation": {
                                    "type": "string"
                                  },
                                  "destIp": {
                                    "type": "string"
                                  },
                                  "destPort": {
                                    "type": "string"
                                  },
                                  "protocol": {
                                    "type": "string"
                                  },
                                  "sourceIp": {
                                    "type": "string"
                                  },
                                  "sourcePort": {
                                    "type": "string"
                                  },
                                  "vxlanInfo": {
                                    "properties": {
                                      "dscp": {
                                        "type": "string"
                                      },
                                      "vnid": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "qosStatistics": {
                              "items": {
                                "properties": {
                                  "classMapName": {
                                    "type": "string"
                                  },
                                  "dropRate": {
                                    "type": "integer"
                                  },
                                  "numBytes": {
                                    "type": "integer"
                                  },
                                  "numPackets": {
                                    "type": "integer"
                                  },
                                  "offeredRate": {
                                    "type": "integer"
                                  },
                                  "queueBandwidthbps": {
                                    "type": "string"
                                  },
                                  "queueDepth": {
                                    "type": "integer"
                                  },
                                  "queueNoBufferDrops": {
                                    "type": "integer"
                                  },
                                  "queueTotalDrops": {
                                    "type": "integer"
                                  },
                                  "refreshedAt": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "qosStatsCollection": {
                              "type": "string"
                            },
                            "qosStatsCollectionFailureReason": {
                              "type": "string"
                            },
                            "usedVlan": {
                              "type": "string"
                            },
                            "vrfName": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "virtualInterface": {
                          "items": {
                            "properties": {
                              "aclAnalysis": {
                                "properties": {
                                  "aclName": {
                                    "type": "string"
                                  },
                                  "matchingAces": {
                                    "items": {
                                      "properties": {
                                        "ace": {
                                          "type": "string"
                                        },
                                        "matchingPorts": {
                                          "items": {
                                            "properties": {
                                              "ports": {
                                                "items": {
                                                  "properties": {
                                                    "destPorts": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    },
                                                    "sourcePorts": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "protocol": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "result": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "result": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "type": "string"
                              },
                              "interfaceStatistics": {
                                "properties": {
                                  "adminStatus": {
                                    "type": "string"
                                  },
                                  "inputPackets": {
                                    "type": "integer"
                                  },
                                  "inputQueueCount": {
                                    "type": "integer"
                                  },
                                  "inputQueueDrops": {
                                    "type": "integer"
                                  },
                                  "inputQueueFlushes": {
                                    "type": "integer"
                                  },
                                  "inputQueueMaxDepth": {
                                    "type": "integer"
                                  },
                                  "inputRatebps": {
                                    "type": "integer"
                                  },
                                  "operationalStatus": {
                                    "type": "string"
                                  },
                                  "outputDrop": {
                                    "type": "integer"
                                  },
                                  "outputPackets": {
                                    "type": "integer"
                                  },
                                  "outputQueueCount": {
                                    "type": "integer"
                                  },
                                  "outputQueueDepth": {
                                    "type": "integer"
                                  },
                                  "outputRatebps": {
                                    "type": "integer"
                                  },
                                  "refreshedAt": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "interfaceStatsCollection": {
                                "type": "string"
                              },
                              "interfaceStatsCollectionFailureReason": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "pathOverlayInfo": {
                                "items": {
                                  "properties": {
                                    "controlPlane": {
                                      "type": "string"
                                    },
                                    "dataPacketEncapsulation": {
                                      "type": "string"
                                    },
                                    "destIp": {
                                      "type": "string"
                                    },
                                    "destPort": {
                                      "type": "string"
                                    },
                                    "protocol": {
                                      "type": "string"
                                    },
                                    "sourceIp": {
                                      "type": "string"
                                    },
                                    "sourcePort": {
                                      "type": "string"
                                    },
                                    "vxlanInfo": {
                                      "properties": {
                                        "dscp": {
                                          "type": "string"
                                        },
                                        "vnid": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "qosStatistics": {
                                "items": {
                                  "properties": {
                                    "classMapName": {
                                      "type": "string"
                                    },
                                    "dropRate": {
                                      "type": "integer"
                                    },
                                    "numBytes": {
                                      "type": "integer"
                                    },
                                    "numPackets": {
                                      "type": "integer"
                                    },
                                    "offeredRate": {
                                      "type": "integer"
                                    },
                                    "queueBandwidthbps": {
                                      "type": "string"
                                    },
                                    "queueDepth": {
                                      "type": "integer"
                                    },
                                    "queueNoBufferDrops": {
                                      "type": "integer"
                                    },
                                    "queueTotalDrops": {
                                      "type": "integer"
                                    },
                                    "refreshedAt": {
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "qosStatsCollection": {
                                "type": "string"
                              },
                              "qosStatsCollectionFailureReason": {
                                "type": "string"
                              },
                              "usedVlan": {
                                "type": "string"
                              },
                              "vrfName": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "flexConnect": {
                      "properties": {
                        "authentication": {
                          "enum": [
                            "LOCAL",
                            "CENTRAL"
                          ],
                          "type": "string"
                        },
                        "dataSwitching": {
                          "enum": [
                            "LOCAL",
                            "CENTRAL"
                          ],
                          "type": "string"
                        },
                        "egressAclAnalysis": {
                          "properties": {
                            "aclName": {
                              "type": "string"
                            },
                            "matchingAces": {
                              "items": {
                                "properties": {
                                  "ace": {
                                    "type": "string"
                                  },
                                  "matchingPorts": {
                                    "items": {
                                      "properties": {
                                        "ports": {
                                          "items": {
                                            "properties": {
                                              "destPorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "sourcePorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "protocol": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "result": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "result": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "ingressAclAnalysis": {
                          "properties": {
                            "aclName": {
                              "type": "string"
                            },
                            "matchingAces": {
                              "items": {
                                "properties": {
                                  "ace": {
                                    "type": "string"
                                  },
                                  "matchingPorts": {
                                    "items": {
                                      "properties": {
                                        "ports": {
                                          "items": {
                                            "properties": {
                                              "destPorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "sourcePorts": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "protocol": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "result": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "result": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "wirelessLanControllerId": {
                          "type": "string"
                        },
                        "wirelessLanControllerName": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "ingressInterface": {
                      "properties": {
                        "physicalInterface": {
                          "properties": {
                            "aclAnalysis": {
                              "properties": {
                                "aclName": {
                                  "type": "string"
                                },
                                "matchingAces": {
                                  "items": {
                                    "properties": {
                                      "ace": {
                                        "type": "string"
                                      },
                                      "matchingPorts": {
                                        "items": {
                                          "properties": {
                                            "ports": {
                                              "items": {
                                                "properties": {
                                                  "destPorts": {
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "sourcePorts": {
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "type": "array"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": "array"
                                            },
                                            "protocol": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "result": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "result": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "id": {
                              "type": "string"
                            },
                            "interfaceStatistics": {
                              "properties": {
                                "adminStatus": {
                                  "type": "string"
                                },
                                "inputPackets": {
                                  "type": "integer"
                                },
                                "inputQueueCount": {
                                  "type": "integer"
                                },
                                "inputQueueDrops": {
                                  "type": "integer"
                                },
                                "inputQueueFlushes": {
                                  "type": "integer"
                                },
                                "inputQueueMaxDepth": {
                                  "type": "integer"
                                },
                                "inputRatebps": {
                                  "type": "integer"
                                },
                                "operationalStatus": {
                                  "type": "string"
                                },
                                "outputDrop": {
                                  "type": "integer"
                                },
                                "outputPackets": {
                                  "type": "integer"
                                },
                                "outputQueueCount": {
                                  "type": "integer"
                                },
                                "outputQueueDepth": {
                                  "type": "integer"
                                },
                                "outputRatebps": {
                                  "type": "integer"
                                },
                                "refreshedAt": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "interfaceStatsCollection": {
                              "type": "string"
                            },
                            "interfaceStatsCollectionFailureReason": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "pathOverlayInfo": {
                              "items": {
                                "properties": {
                                  "controlPlane": {
                                    "type": "string"
                                  },
                                  "dataPacketEncapsulation": {
                                    "type": "string"
                                  },
                                  "destIp": {
                                    "type": "string"
                                  },
                                  "destPort": {
                                    "type": "string"
                                  },
                                  "protocol": {
                                    "type": "string"
                                  },
                                  "sourceIp": {
                                    "type": "string"
                                  },
                                  "sourcePort": {
                                    "type": "string"
                                  },
                                  "vxlanInfo": {
                                    "properties": {
                                      "dscp": {
                                        "type": "string"
                                      },
                                      "vnid": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "qosStatistics": {
                              "items": {
                                "properties": {
                                  "classMapName": {
                                    "type": "string"
                                  },
                                  "dropRate": {
                                    "type": "integer"
                                  },
                                  "numBytes": {
                                    "type": "integer"
                                  },
                                  "numPackets": {
                                    "type": "integer"
                                  },
                                  "offeredRate": {
                                    "type": "integer"
                                  },
                                  "queueBandwidthbps": {
                                    "type": "string"
                                  },
                                  "queueDepth": {
                                    "type": "integer"
                                  },
                                  "queueNoBufferDrops": {
                                    "type": "integer"
                                  },
                                  "queueTotalDrops": {
                                    "type": "integer"
                                  },
                                  "refreshedAt": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "qosStatsCollection": {
                              "type": "string"
                            },
                            "qosStatsCollectionFailureReason": {
                              "type": "string"
                            },
                            "usedVlan": {
                              "type": "string"
                            },
                            "vrfName": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "virtualInterface": {
                          "items": {
                            "properties": {
                              "aclAnalysis": {
                                "properties": {
                                  "aclName": {
                                    "type": "string"
                                  },
                                  "matchingAces": {
                                    "items": {
                                      "properties": {
                                        "ace": {
                                          "type": "string"
                                        },
                                        "matchingPorts": {
                                          "items": {
                                            "properties": {
                                              "ports": {
                                                "items": {
                                                  "properties": {
                                                    "destPorts": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    },
                                                    "sourcePorts": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "protocol": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "result": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "result": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "type": "string"
                              },
                              "interfaceStatistics": {
                                "properties": {
                                  "adminStatus": {
                                    "type": "string"
                                  },
                                  "inputPackets": {
                                    "type": "integer"
                                  },
                                  "inputQueueCount": {
                                    "type": "integer"
                                  },
                                  "inputQueueDrops": {
                                    "type": "integer"
                                  },
                                  "inputQueueFlushes": {
                                    "type": "integer"
                                  },
                                  "inputQueueMaxDepth": {
                                    "type": "integer"
                                  },
                                  "inputRatebps": {
                                    "type": "integer"
                                  },
                                  "operationalStatus": {
                                    "type": "string"
                                  },
                                  "outputDrop": {
                                    "type": "integer"
                                  },
                                  "outputPackets": {
                                    "type": "integer"
                                  },
                                  "outputQueueCount": {
                                    "type": "integer"
                                  },
                                  "outputQueueDepth": {
                                    "type": "integer"
                                  },
                                  "outputRatebps": {
                                    "type": "integer"
                                  },
                                  "refreshedAt": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "interfaceStatsCollection": {
                                "type": "string"
                              },
                              "interfaceStatsCollectionFailureReason": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "pathOverlayInfo": {
                                "items": {
                                  "properties": {
                                    "controlPlane": {
                                      "type": "string"
                                    },
                                    "dataPacketEncapsulation": {
                                      "type": "string"
                                    },
                                    "destIp": {
                                      "type": "string"
                                    },
                                    "destPort": {
                                      "type": "string"
                                    },
                                    "protocol": {
                                      "type": "string"
                                    },
                                    "sourceIp": {
                                      "type": "string"
                                    },
                                    "sourcePort": {
                                      "type": "string"
                                    },
                                    "vxlanInfo": {
                                      "properties": {
                                        "dscp": {
                                          "type": "string"
                                        },
                                        "vnid": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "qosStatistics": {
                                "items": {
                                  "properties": {
                                    "classMapName": {
                                      "type": "string"
                                    },
                                    "dropRate": {
                                      "type": "integer"
                                    },
                                    "numBytes": {
                                      "type": "integer"
                                    },
                                    "numPackets": {
                                      "type": "integer"
                                    },
                                    "offeredRate": {
                                      "type": "integer"
                                    },
                                    "queueBandwidthbps": {
                                      "type": "string"
                                    },
                                    "queueDepth": {
                                      "type": "integer"
                                    },
                                    "queueNoBufferDrops": {
                                      "type": "integer"
                                    },
                                    "queueTotalDrops": {
                                      "type": "integer"
                                    },
                                    "refreshedAt": {
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "qosStatsCollection": {
                                "type": "string"
                              },
                              "qosStatsCollectionFailureReason": {
                                "type": "string"
                              },
                              "usedVlan": {
                                "type": "string"
                              },
                              "vrfName": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "linkInformationSource": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "perfMonCollection": {
                      "type": "string"
                    },
                    "perfMonCollectionFailureReason": {
                      "type": "string"
                    },
                    "perfMonitorStatistics": {
                      "items": {
                        "properties": {
                          "byteRate": {
                            "type": "integer"
                          },
                          "destIpAddress": {
                            "type": "string"
                          },
                          "destPort": {
                            "type": "string"
                          },
                          "inputInterface": {
                            "type": "string"
                          },
                          "ipv4DSCP": {
                            "type": "string"
                          },
                          "ipv4TTL": {
                            "type": "integer"
                          },
                          "outputInterface": {
                            "type": "string"
                          },
                          "packetBytes": {
                            "type": "integer"
                          },
                          "packetCount": {
                            "type": "integer"
                          },
                          "packetLoss": {
                            "type": "integer"
                          },
                          "packetLossPercentage": {
                            "type": "number"
                          },
                          "protocol": {
                            "type": "string"
                          },
                          "refreshedAt": {
                            "type": "integer"
                          },
                          "rtpJitterMax": {
                            "type": "integer"
                          },
                          "rtpJitterMean": {
                            "type": "integer"
                          },
                          "rtpJitterMin": {
                            "type": "integer"
                          },
                          "sourceIpAddress": {
                            "type": "string"
                          },
                          "sourcePort": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "role": {
                      "type": "string"
                    },
                    "ssid": {
                      "type": "string"
                    },
                    "tunnels": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "type": {
                      "type": "string"
                    },
                    "wlanId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "properties": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "request": {
                "properties": {
                  "controlPath": {
                    "type": "boolean"
                  },
                  "createTime": {
                    "type": "integer"
                  },
                  "destIP": {
                    "type": "string"
                  },
                  "destPort": {
                    "type": "string"
                  },
                  "failureReason": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "inclusions": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "lastUpdateTime": {
                    "type": "integer"
                  },
                  "periodicRefresh": {
                    "type": "boolean"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "sourceIP": {
                    "type": "string"
                  },
                  "sourcePort": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PoeDetailsResultDTO": {
        "properties": {
          "response": {
            "properties": {
              "powerAllocated": {
                "type": "string"
              },
              "powerConsumed": {
                "type": "string"
              },
              "powerRemaining": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProfilingRule": {
        "properties": {
          "clusterId": {
            "type": "string"
          },
          "conditionGroups": {
            "properties": {
              "condition": {
                "properties": {
                  "attribute": {
                    "type": "string"
                  },
                  "attributeDictionary": {
                    "type": "string"
                  },
                  "operator": {
                    "enum": [
                      "equals",
                      "contains",
                      "startswith",
                      "matches"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "conditionGroup": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "operator": {
                "enum": [
                  "and",
                  "or"
                ],
                "type": "string"
              },
              "type": {
                "enum": [
                  "attr",
                  "classification"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedOn": {
            "type": "integer"
          },
          "pluginId": {
            "type": "string"
          },
          "rejected": {
            "type": "boolean"
          },
          "result": {
            "properties": {
              "deviceType": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "hardwareManufacturer": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "hardwareModel": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "operatingSystem": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "ruleId": {
            "type": "string"
          },
          "ruleName": {
            "type": "string"
          },
          "rulePriority": {
            "type": "integer"
          },
          "ruleType": {
            "enum": [
              "Cisco Default - Static",
              "Cisco Default - Dynamic",
              "Custom Rule",
              "ML Rule"
            ],
            "type": "string"
          },
          "ruleVersion": {
            "type": "integer"
          },
          "sourcePriority": {
            "type": "integer"
          },
          "usedAttributes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProfilingRules": {
        "properties": {
          "profilingRules": {
            "items": {
              "properties": {
                "clusterId": {
                  "type": "string"
                },
                "conditionGroups": {
                  "properties": {
                    "condition": {
                      "properties": {
                        "attribute": {
                          "type": "string"
                        },
                        "attributeDictionary": {
                          "type": "string"
                        },
                        "operator": {
                          "enum": [
                            "equals",
                            "contains",
                            "startswith",
                            "matches"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "conditionGroup": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "operator": {
                      "enum": [
                        "and",
                        "or"
                      ],
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "attr",
                        "classification"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "lastModifiedBy": {
                  "type": "string"
                },
                "lastModifiedOn": {
                  "type": "integer"
                },
                "pluginId": {
                  "type": "string"
                },
                "rejected": {
                  "type": "boolean"
                },
                "result": {
                  "properties": {
                    "deviceType": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "hardwareManufacturer": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "hardwareModel": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "operatingSystem": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "ruleId": {
                  "type": "string"
                },
                "ruleName": {
                  "type": "string"
                },
                "rulePriority": {
                  "type": "integer"
                },
                "ruleType": {
                  "enum": [
                    "Cisco Default - Static",
                    "Cisco Default - Dynamic",
                    "Custom Rule",
                    "ML Rule"
                  ],
                  "type": "string"
                },
                "ruleVersion": {
                  "type": "integer"
                },
                "sourcePriority": {
                  "type": "integer"
                },
                "usedAttributes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProjectDTO": {
        "properties": {
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "createTime": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "lastUpdateTime": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "templates": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "ProvisionNFVRequest": {
        "properties": {
          "provisioning": {
            "items": {
              "properties": {
                "device": {
                  "items": {
                    "properties": {
                      "customNetworks": {
                        "items": {
                          "properties": {
                            "ipAddressPool": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "port": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "deviceSerialNumber": {
                        "type": "string"
                      },
                      "ip": {
                        "type": "string"
                      },
                      "serviceProviders": {
                        "items": {
                          "properties": {
                            "serviceProvider": {
                              "type": "string"
                            },
                            "wanInterface": {
                              "properties": {
                                "bandwidth": {
                                  "type": "string"
                                },
                                "gateway": {
                                  "type": "string"
                                },
                                "interfaceName": {
                                  "type": "string"
                                },
                                "ipAddress": {
                                  "type": "string"
                                },
                                "subnetmask": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "services": {
                        "items": {
                          "properties": {
                            "adminPasswordHash": {
                              "type": "string"
                            },
                            "centralManagerIP": {
                              "type": "string"
                            },
                            "centralRegistrationKey": {
                              "type": "string"
                            },
                            "commonKey": {
                              "type": "string"
                            },
                            "disk": {
                              "type": "string"
                            },
                            "mode": {
                              "type": "string"
                            },
                            "systemIp": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "subPools": {
                        "items": {
                          "properties": {
                            "gateway": {
                              "type": "string"
                            },
                            "ipSubnet": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "parentPoolName": {
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "Lan",
                                "Management",
                                "Service",
                                "Wan",
                                "Generic"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "tagName": {
                        "type": "string"
                      },
                      "templateParam": {
                        "properties": {
                          "asav": {
                            "properties": {
                              "var1": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "nfvis": {
                            "properties": {
                              "var1": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "vlan": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "interfaces": {
                              "type": "string"
                            },
                            "network": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "site": {
                  "properties": {
                    "area": {
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "parentName": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "building": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "latitude": {
                          "type": "number"
                        },
                        "longitude": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "parentName": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "floor": {
                      "properties": {
                        "height": {
                          "type": "number"
                        },
                        "length": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "parentName": {
                          "type": "string"
                        },
                        "rfModel": {
                          "type": "string"
                        },
                        "width": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "siteProfileName": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "siteProfile": {
            "items": {
              "properties": {
                "device": {
                  "items": {
                    "properties": {
                      "customNetworks": {
                        "items": {
                          "properties": {
                            "connectionType": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "networkMode": {
                              "type": "string"
                            },
                            "servicesToConnect": {
                              "items": {
                                "properties": {
                                  "service": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "vlan": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "customServices": {
                        "items": {
                          "properties": {
                            "applicationType": {
                              "type": "string"
                            },
                            "imageName": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "profile": {
                              "type": "string"
                            },
                            "topology": {
                              "properties": {
                                "assignIp": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "customTemplate": {
                        "items": {
                          "properties": {
                            "deviceType": {
                              "enum": [
                                "NFVIS",
                                "ASAv"
                              ],
                              "type": "string"
                            },
                            "template": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "deviceType": {
                        "enum": [
                          "ENCS5100",
                          "ENCS5400"
                        ],
                        "type": "string"
                      },
                      "dia": {
                        "type": "boolean"
                      },
                      "serviceProviders": {
                        "items": {
                          "properties": {
                            "connect": {
                              "type": "boolean"
                            },
                            "defaultGateway": {
                              "type": "boolean"
                            },
                            "linkType": {
                              "enum": [
                                "GigabitEthernet"
                              ],
                              "type": "string"
                            },
                            "serviceProvider": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "services": {
                        "items": {
                          "properties": {
                            "imageName": {
                              "type": "string"
                            },
                            "mode": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "profile": {
                              "type": "string"
                            },
                            "topology": {
                              "properties": {
                                "assignIp": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "enum": [
                                "isr",
                                "vedge",
                                "waas",
                                "asa",
                                "ngfw",
                                "paloalto",
                                "fortinet",
                                "checkpoint",
                                "riverbed",
                                "silverpeak"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "tagName": {
                        "type": "string"
                      },
                      "vlan": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "siteProfileName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProvisionNFVResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProvisionRequest": {
        "items": {
          "properties": {
            "deviceName": {
              "type": "string"
            },
            "dynamicInterfaces": {
              "items": {
                "properties": {
                  "interfaceGateway": {
                    "type": "string"
                  },
                  "interfaceIPAddress": {
                    "type": "string"
                  },
                  "interfaceName": {
                    "type": "string"
                  },
                  "interfaceNetmaskInCIDR": {
                    "type": "integer"
                  },
                  "lagOrPortNumber": {
                    "type": "integer"
                  },
                  "vlanId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "managedAPLocations": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "site": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "ProvisionResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionUrl": {
            "type": "string"
          },
          "provisioningTasks": {
            "properties": {
              "failed": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "success": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "ProvisionUpdateRequest": {
        "items": {
          "properties": {
            "deviceName": {
              "type": "string"
            },
            "dynamicInterfaces": {
              "items": {
                "properties": {
                  "interfaceGateway": {
                    "type": "string"
                  },
                  "interfaceIPAddress": {
                    "type": "string"
                  },
                  "interfaceName": {
                    "type": "string"
                  },
                  "interfaceNetmaskInCIDR": {
                    "type": "integer"
                  },
                  "lagOrPortNumber": {
                    "type": "integer"
                  },
                  "vlanId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "managedAPLocations": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "ProvisionUpdateResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionUrl": {
            "type": "string"
          },
          "provisioningTasks": {
            "properties": {
              "failed": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "success": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "ProvisionWiredDeviceRequest": {
        "properties": {
          "deviceManagementIpAddress": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProvisionWiredDeviceResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RawCliInfoNIOListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "attributeInfo": {
                  "properties": {},
                  "type": "object"
                },
                "cdpNeighbors": {
                  "type": "string"
                },
                "healthMonitor": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "intfDescription": {
                  "type": "string"
                },
                "inventory": {
                  "type": "string"
                },
                "ipIntfBrief": {
                  "type": "string"
                },
                "macAddressTable": {
                  "type": "string"
                },
                "runningConfig": {
                  "type": "string"
                },
                "snmp": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReProvisionWiredDeviceRequest": {
        "properties": {
          "deviceManagementIpAddress": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReProvisionWiredDeviceResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RebootAccessPointsRequest": {
        "properties": {
          "apMacAddresses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RebootAccessPointsResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RegisterNetworkDeviceResult": {
        "properties": {
          "response": {
            "properties": {
              "macAddress": {
                "type": "string"
              },
              "modelNumber": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "serialNumber": {
                "type": "string"
              },
              "tenantId": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReleaseReserveIPSubpoolResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RemoveAllowedMacAddressResponse": {
        "properties": {
          "error": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RemoveUserDefinedFieldFromDeviceResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RemoveWLCFromFabricDomainRequest": {
        "properties": {
          "deviceName": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RemoveWLCFromFabricDomainResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReserveIPSubpoolRequest": {
        "properties": {
          "ipv4DhcpServers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ipv4DnsServers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ipv4GateWay": {
            "type": "string"
          },
          "ipv4GlobalPool": {
            "type": "string"
          },
          "ipv4Prefix": {
            "type": "boolean"
          },
          "ipv4PrefixLength": {
            "type": "integer"
          },
          "ipv4Subnet": {
            "type": "string"
          },
          "ipv4TotalHost": {
            "type": "integer"
          },
          "ipv6AddressSpace": {
            "type": "boolean"
          },
          "ipv6DhcpServers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ipv6DnsServers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ipv6GateWay": {
            "type": "string"
          },
          "ipv6GlobalPool": {
            "type": "string"
          },
          "ipv6Prefix": {
            "type": "boolean"
          },
          "ipv6PrefixLength": {
            "type": "integer"
          },
          "ipv6Subnet": {
            "type": "string"
          },
          "ipv6TotalHost": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "slaacSupport": {
            "type": "boolean"
          },
          "type": {
            "enum": [
              "Generic",
              "LAN",
              "WAN",
              "management",
              "service"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReserveIPSubpoolResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResetDeviceResponse": {
        "properties": {
          "jsonArrayResponse": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "jsonResponse": {
            "properties": {},
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "ResetRequest": {
        "properties": {
          "deviceResetList": {
            "items": {
              "properties": {
                "configList": {
                  "items": {
                    "properties": {
                      "configId": {
                        "type": "string"
                      },
                      "configParameters": {
                        "items": {
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "deviceId": {
                  "type": "string"
                },
                "licenseLevel": {
                  "type": "string"
                },
                "licenseType": {
                  "type": "string"
                },
                "topOfStackSerialNumber": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "projectId": {
            "type": "string"
          },
          "workflowId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RetrieveRFProfilesResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "aRadioChannels": {
                  "type": "string"
                },
                "bRadioChannels": {
                  "type": "string"
                },
                "cRadioChannels": {
                  "type": "string"
                },
                "channelWidth": {
                  "type": "string"
                },
                "dataRatesA": {
                  "type": "string"
                },
                "dataRatesB": {
                  "type": "string"
                },
                "dataRatesC": {
                  "type": "string"
                },
                "defaultRfProfile": {
                  "type": "boolean"
                },
                "enableARadioType": {
                  "type": "boolean"
                },
                "enableBRadioType": {
                  "type": "boolean"
                },
                "enableBrownField": {
                  "type": "boolean"
                },
                "enableCRadioType": {
                  "type": "boolean"
                },
                "enableCustom": {
                  "type": "boolean"
                },
                "mandatoryDataRatesA": {
                  "type": "string"
                },
                "mandatoryDataRatesB": {
                  "type": "string"
                },
                "mandatoryDataRatesC": {
                  "type": "string"
                },
                "maxPowerLevelA": {
                  "type": "string"
                },
                "maxPowerLevelB": {
                  "type": "string"
                },
                "minPowerLevelA": {
                  "type": "string"
                },
                "minPowerLevelB": {
                  "type": "string"
                },
                "minPowerLevelC": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "parentProfileA": {
                  "type": "string"
                },
                "parentProfileB": {
                  "type": "string"
                },
                "powerThresholdV1A": {
                  "type": "integer"
                },
                "powerThresholdV1B": {
                  "type": "integer"
                },
                "powerThresholdV1C": {
                  "type": "integer"
                },
                "rxSopThresholdA": {
                  "type": "string"
                },
                "rxSopThresholdB": {
                  "type": "string"
                },
                "rxSopThresholdC": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RetryIntegrationEventsRequest": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "RetryIntegrationEventsResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReturnPowerSupplyFanDetailsForTheGivenDeviceResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "operationalStateCode": {
                  "type": "string"
                },
                "productId": {
                  "type": "string"
                },
                "serialNumber": {
                  "type": "string"
                },
                "vendorEquipmentType": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReturnsDevicesAddedToCiscoDNACenterWithSnmpVDESResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "family": {
                  "type": "string"
                },
                "hostname": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "lastUpdated": {
                  "type": "string"
                },
                "managementIpAddress": {
                  "type": "string"
                },
                "reachabilityStatus": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "upTime": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RogueAdditionalDetailCountRequest": {
        "properties": {
          "endTime": {
            "type": "number"
          },
          "siteId": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "startTime": {
            "type": "number"
          },
          "threatLevel": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "threatType": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RogueAdditionalDetailCountResponse": {
        "properties": {
          "response": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RogueAdditionalDetailsRequest": {
        "properties": {
          "endTime": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          },
          "siteId": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "startTime": {
            "type": "number"
          },
          "threatLevel": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "threatType": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RogueAdditionalDetailsResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "apName": {
                  "type": "string"
                },
                "channelNumber": {
                  "type": "string"
                },
                "containment": {
                  "type": "string"
                },
                "controllerIp": {
                  "type": "string"
                },
                "controllerName": {
                  "type": "string"
                },
                "createdTime": {
                  "type": "integer"
                },
                "detectingAPMac": {
                  "type": "string"
                },
                "encryption": {
                  "type": "string"
                },
                "macAddress": {
                  "type": "string"
                },
                "portDescription": {
                  "type": "string"
                },
                "radioType": {
                  "type": "string"
                },
                "siteNameHierarchy": {
                  "type": "string"
                },
                "ssid": {
                  "type": "string"
                },
                "switchIp": {
                  "type": "string"
                },
                "switchName": {
                  "type": "string"
                },
                "threatLevel": {
                  "type": "string"
                },
                "threatType": {
                  "type": "string"
                },
                "updatedTime": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "totalCount": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunComplianceResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "properties": {},
                "type": "object"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunNowSensorTestRequest": {
        "properties": {
          "templateName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SAVAMapping": {
        "properties": {
          "autoSyncPeriod": {
            "type": "integer"
          },
          "ccoUser": {
            "type": "string"
          },
          "expiry": {
            "type": "integer"
          },
          "lastSync": {
            "type": "integer"
          },
          "profile": {
            "properties": {
              "addressFqdn": {
                "type": "string"
              },
              "addressIpV4": {
                "type": "string"
              },
              "cert": {
                "type": "string"
              },
              "makeDefault": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "port": {
                "type": "integer"
              },
              "profileId": {
                "type": "string"
              },
              "proxy": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "smartAccountId": {
            "type": "string"
          },
          "syncResult": {
            "properties": {
              "syncList": {
                "items": {
                  "properties": {
                    "deviceSnList": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "syncType": {
                      "enum": [
                        "Add",
                        "Update",
                        "Delete",
                        "MismatchError"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "syncMsg": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "syncResultStr": {
            "type": "string"
          },
          "syncStartTime": {
            "type": "integer"
          },
          "syncStatus": {
            "enum": [
              "NOT_SYNCED",
              "SYNCING",
              "SUCCESS",
              "FAILURE"
            ],
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "virtualAccountId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SNMPvCredentialDTO": {
        "items": {
          "properties": {
            "authPassword": {
              "type": "string"
            },
            "authType": {
              "enum": [
                "SHA",
                "MD5"
              ],
              "type": "string"
            },
            "comments": {
              "type": "string"
            },
            "credentialType": {
              "enum": [
                "GLOBAL",
                "APP"
              ],
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "instanceTenantId": {
              "type": "string"
            },
            "instanceUuid": {
              "type": "string"
            },
            "privacyPassword": {
              "type": "string"
            },
            "privacyType": {
              "enum": [
                "DES",
                "AES128"
              ],
              "type": "string"
            },
            "snmpMode": {
              "enum": [
                "AUTHPRIV",
                "AUTHNOPRIV",
                "NOAUTHNOPRIV"
              ],
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "SNMPvReadCommunityDTO": {
        "items": {
          "properties": {
            "comments": {
              "type": "string"
            },
            "credentialType": {
              "enum": [
                "GLOBAL",
                "APP"
              ],
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "readCommunity": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "SNMPvWriteCommunityDTO": {
        "items": {
          "properties": {
            "comments": {
              "type": "string"
            },
            "credentialType": {
              "enum": [
                "GLOBAL",
                "APP"
              ],
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "writeCommunity": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "SensorTestResultsResponse": {
        "properties": {
          "failureStats": {
            "items": {
              "properties": {
                "errorCode": {
                  "type": "integer"
                },
                "errorTitle": {
                  "type": "string"
                },
                "testCategory": {
                  "type": "string"
                },
                "testType": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "summary": {
            "properties": {
              "APP_CONNECTIVITY": {
                "properties": {
                  "FILETRANSFER": {
                    "properties": {
                      "failCount": {
                        "type": "integer"
                      },
                      "passCount": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "HOST_REACHABILITY": {
                    "properties": {
                      "failCount": {
                        "type": "number"
                      },
                      "passCount": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "WEBSERVER": {
                    "properties": {
                      "failCount": {
                        "type": "integer"
                      },
                      "passCount": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "EMAIL": {
                "properties": {
                  "MAILSERVER": {
                    "properties": {
                      "failCount": {
                        "type": "integer"
                      },
                      "passCount": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "NETWORK_SERVICES": {
                "properties": {
                  "DNS": {
                    "properties": {
                      "failCount": {
                        "type": "number"
                      },
                      "passCount": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "ONBOARDING": {
                "properties": {
                  "ASSOC": {
                    "properties": {
                      "failCount": {
                        "type": "integer"
                      },
                      "passCount": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "AUTH": {
                    "properties": {
                      "failCount": {
                        "type": "integer"
                      },
                      "passCount": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "DHCP": {
                    "properties": {
                      "failCount": {
                        "type": "number"
                      },
                      "passCount": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "PERFORMANCE": {
                "properties": {
                  "IPSLASENDER": {
                    "properties": {
                      "failCount": {
                        "type": "integer"
                      },
                      "passCount": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "RF_ASSESSMENT": {
                "properties": {
                  "DATA_RATE": {
                    "properties": {
                      "failCount": {
                        "type": "integer"
                      },
                      "passCount": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "SNR": {
                    "properties": {
                      "failCount": {
                        "type": "number"
                      },
                      "passCount": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "totalTestCount": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "SensorsResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "backhaulType": {
                  "type": "string"
                },
                "ethernetMacAddress": {
                  "type": "string"
                },
                "ipAddress": {
                  "type": "string"
                },
                "isLEDEnabled": {
                  "type": "boolean"
                },
                "lastSeen": {
                  "type": "integer"
                },
                "location": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "radioMacAddress": {
                  "type": "string"
                },
                "serialNumber": {
                  "type": "string"
                },
                "sshConfig": {
                  "properties": {
                    "enablePassword": {
                      "type": "string"
                    },
                    "sshPassword": {
                      "type": "string"
                    },
                    "sshState": {
                      "type": "string"
                    },
                    "sshUserName": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Settings": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "aaaCredentials": {
            "properties": {
              "password": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "acceptEula": {
            "type": "boolean"
          },
          "defaultProfile": {
            "properties": {
              "cert": {
                "type": "string"
              },
              "fqdnAddresses": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "ipAddresses": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "port": {
                "type": "integer"
              },
              "proxy": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "savaMappingList": {
            "items": {
              "properties": {
                "autoSyncPeriod": {
                  "type": "integer"
                },
                "ccoUser": {
                  "type": "string"
                },
                "expiry": {
                  "type": "integer"
                },
                "lastSync": {
                  "type": "integer"
                },
                "profile": {
                  "properties": {
                    "addressFqdn": {
                      "type": "string"
                    },
                    "addressIpV4": {
                      "type": "string"
                    },
                    "cert": {
                      "type": "string"
                    },
                    "makeDefault": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "profileId": {
                      "type": "string"
                    },
                    "proxy": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "smartAccountId": {
                  "type": "string"
                },
                "syncResult": {
                  "properties": {
                    "syncList": {
                      "items": {
                        "properties": {
                          "deviceSnList": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "syncType": {
                            "enum": [
                              "Add",
                              "Update",
                              "Delete",
                              "MismatchError"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "syncMsg": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "syncResultStr": {
                  "type": "string"
                },
                "syncStartTime": {
                  "type": "integer"
                },
                "syncStatus": {
                  "enum": [
                    "NOT_SYNCED",
                    "SYNCING",
                    "SUCCESS",
                    "FAILURE"
                  ],
                  "type": "string"
                },
                "tenantId": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                },
                "virtualAccountId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "taskTimeOuts": {
            "properties": {
              "configTimeOut": {
                "type": "integer"
              },
              "generalTimeOut": {
                "type": "integer"
              },
              "imageDownloadTimeOut": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "tenantId": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SiteClaimResponse": {
        "properties": {
          "response": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SiteProvisionRequest": {
        "properties": {
          "deviceId": {
            "type": "string"
          },
          "siteId": {
            "type": "string"
          },
          "type": {
            "enum": [
              "Default",
              "AccessPoint",
              "StackSwitch",
              "Sensor",
              "MobilityExpress"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "SiteResult": {
        "properties": {
          "response": {
            "properties": {
              "sites": {
                "items": {
                  "properties": {
                    "displayName": {
                      "type": "string"
                    },
                    "groupNameHierarchy": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "latitude": {
                      "type": "string"
                    },
                    "locationAddress": {
                      "type": "string"
                    },
                    "locationCountry": {
                      "type": "string"
                    },
                    "locationType": {
                      "type": "string"
                    },
                    "longitude": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "parentId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SitesInfoDTO": {
        "properties": {
          "siteUuids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SmartAccountDetailsResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "domain": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "is_active_smart_account": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "StackDTOResult": {
        "properties": {
          "response": {
            "properties": {
              "deviceId": {
                "type": "string"
              },
              "stackPortInfo": {
                "items": {
                  "properties": {
                    "isSynchOk": {
                      "type": "string"
                    },
                    "linkActive": {
                      "type": "boolean"
                    },
                    "linkOk": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "neighborPort": {
                      "type": "string"
                    },
                    "nrLinkOkChanges": {
                      "type": "integer"
                    },
                    "stackCableLengthInfo": {
                      "enum": [
                        "NO_CABLE",
                        "_50_CM",
                        "_1_M",
                        "_3_M",
                        "UNKNOWN"
                      ],
                      "type": "string"
                    },
                    "stackPortOperStatusInfo": {
                      "enum": [
                        "OK",
                        "UP",
                        "DOWN",
                        "FORCEDDOWN",
                        "ABSENT",
                        "UNKNOWN"
                      ],
                      "type": "string"
                    },
                    "switchPort": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "stackSwitchInfo": {
                "items": {
                  "properties": {
                    "entPhysicalIndex": {
                      "type": "string"
                    },
                    "hwPriority": {
                      "type": "integer"
                    },
                    "macAddress": {
                      "type": "string"
                    },
                    "numNextReload": {
                      "type": "integer"
                    },
                    "platformId": {
                      "type": "string"
                    },
                    "role": {
                      "enum": [
                        "MASTER",
                        "MEMBER",
                        "NOTMEMBER",
                        "STANDBY",
                        "UNKNOWN"
                      ],
                      "type": "string"
                    },
                    "serialNumber": {
                      "type": "string"
                    },
                    "softwareImage": {
                      "type": "string"
                    },
                    "stackMemberNumber": {
                      "type": "integer"
                    },
                    "state": {
                      "enum": [
                        "WAITING",
                        "PROGRESSING",
                        "ADDED",
                        "READY",
                        "SDMMISMATCH",
                        "VERMISMATCH",
                        "FEATUREMISMATCH",
                        "NEWMASTERINIT",
                        "PROVISIONED",
                        "INVALID",
                        "UNKNOWN"
                      ],
                      "type": "string"
                    },
                    "switchPriority": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "svlSwitchInfo": {
                "items": {
                  "properties": {
                    "dadProtocol": {
                      "enum": [
                        "NONE",
                        "PAGP",
                        "UNKNOWN"
                      ],
                      "type": "string"
                    },
                    "dadRecoveryReloadEnabled": {
                      "type": "boolean"
                    },
                    "domainNumber": {
                      "type": "integer"
                    },
                    "inDadRecoveryMode": {
                      "type": "boolean"
                    },
                    "swVirtualStatus": {
                      "type": "string"
                    },
                    "switchMembers": {
                      "items": {
                        "properties": {
                          "bandwidth": {
                            "type": "string"
                          },
                          "svlMemberEndPoints": {
                            "items": {
                              "properties": {
                                "svlMemberEndPointPorts": {
                                  "items": {
                                    "properties": {
                                      "svlProtocolStatus": {
                                        "enum": [
                                          "SUSPENDED",
                                          "PENDING",
                                          "ERROR",
                                          "TIMEOUT",
                                          "READY",
                                          "UNKNOWN"
                                        ],
                                        "type": "string"
                                      },
                                      "swLocalInterface": {
                                        "type": "string"
                                      },
                                      "swRemoteInterface": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "svlNumber": {
                                  "type": "integer"
                                },
                                "svlStatus": {
                                  "enum": [
                                    "UP",
                                    "DOWN",
                                    "UNKNOWN"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "svlMemberNumber": {
                            "type": "integer"
                          },
                          "svlMemberPepSettings": {
                            "items": {
                              "properties": {
                                "dadEnabled": {
                                  "type": "boolean"
                                },
                                "dadInterfaceName": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "StartWirelessRogueAPContainmentRequest": {
        "properties": {
          "macAddress": {
            "type": "string"
          },
          "type": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "StartWirelessRogueAPContainmentResponse": {
        "properties": {
          "response": {
            "properties": {
              "initiatedOnBssid": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "initiatedOnWlcIp": {
                "type": "string"
              },
              "macAddress": {
                "type": "string"
              },
              "taskId": {
                "type": "string"
              },
              "taskType": {
                "type": "string"
              },
              "type": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "StopWirelessRogueAPContainmentRequest": {
        "properties": {
          "macAddress": {
            "type": "string"
          },
          "type": {
            "type": "integer"
          },
          "wlcIp": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "StopWirelessRogueAPContainmentResponse": {
        "properties": {
          "response": {
            "properties": {
              "initiatedOnBssid": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "initiatedOnWlcIp": {
                "type": "string"
              },
              "macAddress": {
                "type": "string"
              },
              "taskId": {
                "type": "string"
              },
              "taskType": {
                "type": "string"
              },
              "type": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SuccessResult": {
        "properties": {
          "response": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SuccessResultList": {
        "properties": {
          "response": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SwimGoldenTagDTO": {
        "properties": {
          "deviceFamilyIdentifier": {
            "type": "string"
          },
          "deviceRole": {
            "type": "string"
          },
          "imageId": {
            "type": "string"
          },
          "siteId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SyncDevicesRequest": {
        "items": {
          "type": "object"
        },
        "type": "array"
      },
      "SyncVirtualAccountDevicesResponse": {
        "properties": {
          "autoSyncPeriod": {
            "type": "number"
          },
          "ccoUser": {
            "type": "string"
          },
          "expiry": {
            "type": "number"
          },
          "lastSync": {
            "type": "number"
          },
          "profile": {
            "properties": {
              "addressFqdn": {
                "type": "string"
              },
              "addressIpV4": {
                "type": "string"
              },
              "cert": {
                "type": "string"
              },
              "makeDefault": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "port": {
                "type": "number"
              },
              "profileId": {
                "type": "string"
              },
              "proxy": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "smartAccountId": {
            "type": "string"
          },
          "syncResult": {
            "properties": {
              "syncList": {
                "items": {
                  "properties": {
                    "deviceSnList": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "syncType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "syncMsg": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "syncResultStr": {
            "type": "string"
          },
          "syncStartTime": {
            "type": "number"
          },
          "syncStatus": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "virtualAccountId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SystemHealthAPIResponse": {
        "properties": {
          "cimcaddress": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "healthEvents": {
            "items": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "domain": {
                  "type": "string"
                },
                "hostname": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                },
                "severity": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "subDomain": {
                  "type": "string"
                },
                "timestamp": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "hostName": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SystemHealthCountAPIResponse": {
        "properties": {
          "count": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "SystemPerformanceAPIResponse": {
        "properties": {
          "hostName": {
            "type": "string"
          },
          "kpis": {
            "properties": {
              "cpu": {
                "properties": {
                  "units": {
                    "type": "string"
                  },
                  "utilization": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "memory": {
                "properties": {
                  "units": {
                    "type": "string"
                  },
                  "utilization": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "network rx_rate": {
                "properties": {
                  "units": {
                    "type": "string"
                  },
                  "utilization": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "network tx_rate": {
                "properties": {
                  "units": {
                    "type": "string"
                  },
                  "utilization": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SystemPerformanceHistoricalAPIResponse": {
        "properties": {
          "hostName": {
            "type": "string"
          },
          "kpis": {
            "properties": {
              "data": {
                "properties": {
                  "t1": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "legends": {
                "properties": {
                  "cpu": {
                    "properties": {
                      "units": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "memory": {
                    "properties": {
                      "units": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "network rx_rate": {
                    "properties": {
                      "units": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "network tx_rate": {
                    "properties": {
                      "units": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SystemPropertyListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "instanceUuid": {
                  "type": "string"
                },
                "intValue": {
                  "type": "integer"
                },
                "systemPropertyName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SystemPropertyNameAndIntValueDTO": {
        "items": {
          "properties": {
            "id": {
              "type": "string"
            },
            "instanceTenantId": {
              "type": "string"
            },
            "instanceUuid": {
              "type": "string"
            },
            "intValue": {
              "type": "integer"
            },
            "systemPropertyName": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "TagDTO": {
        "properties": {
          "description": {
            "type": "string"
          },
          "dynamicRules": {
            "items": {
              "properties": {
                "memberType": {
                  "type": "string"
                },
                "rules": {
                  "properties": {
                    "items": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "values": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "instanceTenantId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "systemTag": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "TagListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "dynamicRules": {
                  "items": {
                    "properties": {
                      "memberType": {
                        "type": "string"
                      },
                      "rules": {
                        "properties": {
                          "items": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "name": {
                            "type": "string"
                          },
                          "operation": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "values": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "systemTag": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TagMemberDTO": {
        "properties": {
          "memberToTags": {
            "items": {
              "properties": {
                "key": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "memberType": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TagMembersResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "instanceUuid": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TagResult": {
        "properties": {
          "response": {
            "properties": {
              "description": {
                "type": "string"
              },
              "dynamicRules": {
                "items": {
                  "properties": {
                    "memberType": {
                      "type": "string"
                    },
                    "rules": {
                      "properties": {
                        "items": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "name": {
                          "type": "string"
                        },
                        "operation": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "values": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "id": {
                "type": "string"
              },
              "instanceTenantId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "systemTag": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TagTypesResult": {
        "properties": {
          "response": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Task": {
        "properties": {
          "additionalInfo": {
            "properties": {},
            "type": "object"
          },
          "createdBy": {
            "type": "string"
          },
          "createdOn": {
            "type": "integer"
          },
          "errors": {
            "items": {
              "properties": {
                "code": {
                  "type": "integer"
                },
                "details": {
                  "type": "string"
                },
                "index": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "lastUpdatedOn": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "enum": [
              "IN_PROGRESS",
              "COMPLETED",
              "PARTIALLY_FAILED",
              "FAILED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "TaskDTOListResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "additionalStatusURL": {
                  "type": "string"
                },
                "data": {
                  "type": "string"
                },
                "endTime": {
                  "type": "string"
                },
                "errorCode": {
                  "type": "string"
                },
                "errorKey": {
                  "type": "string"
                },
                "failureReason": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "instanceTenantId": {
                  "type": "string"
                },
                "isError": {
                  "type": "boolean"
                },
                "lastUpdate": {
                  "type": "string"
                },
                "operationIdList": {
                  "type": "object"
                },
                "parentId": {
                  "type": "string"
                },
                "progress": {
                  "type": "string"
                },
                "rootId": {
                  "type": "string"
                },
                "serviceType": {
                  "type": "string"
                },
                "startTime": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "version": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TaskDTOResponse": {
        "properties": {
          "response": {
            "properties": {
              "additionalStatusURL": {
                "type": "string"
              },
              "data": {
                "type": "string"
              },
              "endTime": {
                "type": "string"
              },
              "errorCode": {
                "type": "string"
              },
              "errorKey": {
                "type": "string"
              },
              "failureReason": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "instanceTenantId": {
                "type": "string"
              },
              "isError": {
                "type": "boolean"
              },
              "lastUpdate": {
                "type": "string"
              },
              "operationIdList": {
                "type": "object"
              },
              "parentId": {
                "type": "string"
              },
              "progress": {
                "type": "string"
              },
              "rootId": {
                "type": "string"
              },
              "serviceType": {
                "type": "string"
              },
              "startTime": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "version": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TaskIdResult": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "object"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TemplateDTO": {
        "properties": {
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "author": {
            "type": "string"
          },
          "composite": {
            "type": "boolean"
          },
          "containingTemplates": {
            "items": {
              "properties": {
                "tags": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "composite": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "deviceTypes": {
                  "items": {
                    "properties": {
                      "productFamily": {
                        "type": "string"
                      },
                      "productSeries": {
                        "type": "string"
                      },
                      "productType": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "type": "string"
                },
                "language": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "projectName": {
                  "type": "string"
                },
                "rollbackTemplateParams": {
                  "items": {
                    "properties": {
                      "binding": {
                        "type": "string"
                      },
                      "customOrder": {
                        "type": "integer"
                      },
                      "dataType": {
                        "enum": [
                          "STRING",
                          "INTEGER",
                          "IPADDRESS",
                          "MACADDRESS",
                          "SECTIONDIVIDER"
                        ],
                        "type": "string"
                      },
                      "defaultValue": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string"
                      },
                      "group": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "instructionText": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "notParam": {
                        "type": "boolean"
                      },
                      "order": {
                        "type": "integer"
                      },
                      "paramArray": {
                        "type": "boolean"
                      },
                      "parameterName": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "range": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "maxValue": {
                              "type": "integer"
                            },
                            "minValue": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "selection": {
                        "properties": {
                          "defaultSelectedValues": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "id": {
                            "type": "string"
                          },
                          "selectionType": {
                            "enum": [
                              "SINGLE_SELECT",
                              "MULTI_SELECT"
                            ],
                            "type": "string"
                          },
                          "selectionValues": {
                            "properties": {},
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "templateContent": {
                  "type": "string"
                },
                "templateParams": {
                  "items": {
                    "properties": {
                      "binding": {
                        "type": "string"
                      },
                      "customOrder": {
                        "type": "integer"
                      },
                      "dataType": {
                        "enum": [
                          "STRING",
                          "INTEGER",
                          "IPADDRESS",
                          "MACADDRESS",
                          "SECTIONDIVIDER"
                        ],
                        "type": "string"
                      },
                      "defaultValue": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string"
                      },
                      "group": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "instructionText": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "notParam": {
                        "type": "boolean"
                      },
                      "order": {
                        "type": "integer"
                      },
                      "paramArray": {
                        "type": "boolean"
                      },
                      "parameterName": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "range": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "maxValue": {
                              "type": "integer"
                            },
                            "minValue": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "selection": {
                        "properties": {
                          "defaultSelectedValues": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "id": {
                            "type": "string"
                          },
                          "selectionType": {
                            "enum": [
                              "SINGLE_SELECT",
                              "MULTI_SELECT"
                            ],
                            "type": "string"
                          },
                          "selectionValues": {
                            "properties": {},
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "createTime": {
            "type": "integer"
          },
          "customParamsOrder": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "deviceTypes": {
            "items": {
              "properties": {
                "productFamily": {
                  "type": "string"
                },
                "productSeries": {
                  "type": "string"
                },
                "productType": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "failurePolicy": {
            "enum": [
              "ABORT_ON_ERROR",
              "CONTINUE_ON_ERROR",
              "ROLLBACK_ON_ERROR",
              "ROLLBACK_TARGET_ON_ERROR",
              "ABORT_TARGET_ON_ERROR"
            ],
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "lastUpdateTime": {
            "type": "integer"
          },
          "latestVersionTime": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "parentTemplateId": {
            "type": "string"
          },
          "projectAssociated": {
            "type": "boolean"
          },
          "projectId": {
            "type": "string"
          },
          "projectName": {
            "type": "string"
          },
          "rollbackTemplateContent": {
            "type": "string"
          },
          "rollbackTemplateParams": {
            "items": {
              "properties": {
                "binding": {
                  "type": "string"
                },
                "customOrder": {
                  "type": "integer"
                },
                "dataType": {
                  "enum": [
                    "STRING",
                    "INTEGER",
                    "IPADDRESS",
                    "MACADDRESS",
                    "SECTIONDIVIDER"
                  ],
                  "type": "string"
                },
                "defaultValue": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "group": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "instructionText": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "notParam": {
                  "type": "boolean"
                },
                "order": {
                  "type": "integer"
                },
                "paramArray": {
                  "type": "boolean"
                },
                "parameterName": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "range": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "maxValue": {
                        "type": "integer"
                      },
                      "minValue": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "required": {
                  "type": "boolean"
                },
                "selection": {
                  "properties": {
                    "defaultSelectedValues": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "id": {
                      "type": "string"
                    },
                    "selectionType": {
                      "enum": [
                        "SINGLE_SELECT",
                        "MULTI_SELECT"
                      ],
                      "type": "string"
                    },
                    "selectionValues": {
                      "properties": {},
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "softwareType": {
            "type": "string"
          },
          "softwareVariant": {
            "type": "string"
          },
          "softwareVersion": {
            "type": "string"
          },
          "templateContent": {
            "type": "string"
          },
          "templateParams": {
            "items": {
              "properties": {
                "binding": {
                  "type": "string"
                },
                "customOrder": {
                  "type": "integer"
                },
                "dataType": {
                  "enum": [
                    "STRING",
                    "INTEGER",
                    "IPADDRESS",
                    "MACADDRESS",
                    "SECTIONDIVIDER"
                  ],
                  "type": "string"
                },
                "defaultValue": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "group": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "instructionText": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "notParam": {
                  "type": "boolean"
                },
                "order": {
                  "type": "integer"
                },
                "paramArray": {
                  "type": "boolean"
                },
                "parameterName": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "range": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "maxValue": {
                        "type": "integer"
                      },
                      "minValue": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "required": {
                  "type": "boolean"
                },
                "selection": {
                  "properties": {
                    "defaultSelectedValues": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "id": {
                      "type": "string"
                    },
                    "selectionType": {
                      "enum": [
                        "SINGLE_SELECT",
                        "MULTI_SELECT"
                      ],
                      "type": "string"
                    },
                    "selectionValues": {
                      "properties": {},
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "validationErrors": {
            "properties": {
              "rollbackTemplateErrors": {
                "type": "object"
              },
              "templateErrors": {
                "type": "object"
              },
              "templateId": {
                "type": "string"
              },
              "templateVersion": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          },
          "versionsInfo": {
            "items": {
              "properties": {
                "author": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                },
                "versionComment": {
                  "type": "string"
                },
                "versionTime": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TemplateDeploymentInfo": {
        "properties": {
          "forcePushTemplate": {
            "type": "boolean"
          },
          "isComposite": {
            "type": "boolean"
          },
          "mainTemplateId": {
            "type": "string"
          },
          "memberTemplateDeploymentInfo": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "targetInfo": {
            "items": {
              "properties": {
                "hostName": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "params": {
                  "properties": {},
                  "type": "object"
                },
                "resourceParams": {
                  "type": "object"
                },
                "type": {
                  "enum": [
                    "MANAGED_DEVICE_IP",
                    "MANAGED_DEVICE_UUID",
                    "PRE_PROVISIONED_SERIAL",
                    "PRE_PROVISIONED_MAC",
                    "DEFAULT",
                    "MANAGED_DEVICE_HOSTNAME"
                  ],
                  "type": "string"
                },
                "versionedTemplateId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "templateId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TemplateDeploymentStatusDTO": {
        "properties": {
          "deploymentId": {
            "type": "string"
          },
          "deploymentName": {
            "type": "string"
          },
          "devices": {
            "items": {
              "properties": {
                "detailedStatusMessage": {
                  "type": "string"
                },
                "deviceId": {
                  "type": "string"
                },
                "duration": {
                  "type": "string"
                },
                "endTime": {
                  "type": "string"
                },
                "identifier": {
                  "type": "string"
                },
                "ipAddress": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "startTime": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "targetType": {
                  "enum": [
                    "MANAGED_DEVICE_IP",
                    "MANAGED_DEVICE_UUID",
                    "PRE_PROVISIONED_SERIAL",
                    "PRE_PROVISIONED_MAC",
                    "DEFAULT",
                    "MANAGED_DEVICE_HOSTNAME"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "duration": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "projectName": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusMessage": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          },
          "templateVersion": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TemplateInfo": {
        "items": {
          "properties": {
            "composite": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "projectId": {
              "type": "string"
            },
            "projectName": {
              "type": "string"
            },
            "templateId": {
              "type": "string"
            },
            "versionsInfo": {
              "items": {
                "properties": {
                  "author": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "versionComment": {
                    "type": "string"
                  },
                  "versionTime": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "TemplatePreviewRequestDTO": {
        "properties": {
          "deviceId": {
            "type": "string"
          },
          "params": {
            "properties": {},
            "type": "object"
          },
          "resourceParams": {
            "type": "object"
          },
          "templateId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TemplatePreviewResponseDTO": {
        "properties": {
          "cliPreview": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "validationErrors": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "TemplateVersionRequestDTO": {
        "properties": {
          "comments": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ThreatDetailCountRequest": {
        "properties": {
          "endTime": {
            "type": "integer"
          },
          "isNewThreat": {
            "type": "boolean"
          },
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "siteId": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "startTime": {
            "type": "integer"
          },
          "threatLevel": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "threatType": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ThreatDetailCountResponse": {
        "properties": {
          "response": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ThreatDetails": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "apName": {
                  "type": "string"
                },
                "containment": {
                  "type": "string"
                },
                "detectingAPMac": {
                  "type": "string"
                },
                "macAddress": {
                  "type": "string"
                },
                "rssi": {
                  "type": "string"
                },
                "siteId": {
                  "type": "string"
                },
                "siteNameHierarchy": {
                  "type": "string"
                },
                "ssid": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "threatLevel": {
                  "type": "string"
                },
                "threatType": {
                  "type": "string"
                },
                "updatedTime": {
                  "type": "integer"
                },
                "vendor": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "totalCount": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ThreatParameters": {
        "properties": {
          "endTime": {
            "type": "integer"
          },
          "siteId": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "startTime": {
            "type": "integer"
          },
          "threatLevel": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "threatType": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ThreatResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "threatData": {
                  "items": {
                    "properties": {
                      "threatCount": {
                        "type": "integer"
                      },
                      "threatLevel": {
                        "type": "string"
                      },
                      "threatType": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "timestamp": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopologyResult": {
        "properties": {
          "response": {
            "properties": {
              "id": {
                "type": "string"
              },
              "links": {
                "items": {
                  "properties": {
                    "additionalInfo": {
                      "properties": {},
                      "type": "object"
                    },
                    "endPortID": {
                      "type": "string"
                    },
                    "endPortIpv4Address": {
                      "type": "string"
                    },
                    "endPortIpv4Mask": {
                      "type": "string"
                    },
                    "endPortName": {
                      "type": "string"
                    },
                    "endPortSpeed": {
                      "type": "string"
                    },
                    "greyOut": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "linkStatus": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "startPortID": {
                      "type": "string"
                    },
                    "startPortIpv4Address": {
                      "type": "string"
                    },
                    "startPortIpv4Mask": {
                      "type": "string"
                    },
                    "startPortName": {
                      "type": "string"
                    },
                    "startPortSpeed": {
                      "type": "string"
                    },
                    "tag": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "nodes": {
                "items": {
                  "properties": {
                    "tags": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "aclApplied": {
                      "type": "boolean"
                    },
                    "additionalInfo": {
                      "properties": {},
                      "type": "object"
                    },
                    "customParam": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        },
                        "parentNodeId": {
                          "type": "string"
                        },
                        "x": {
                          "type": "integer"
                        },
                        "y": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "dataPathId": {
                      "type": "string"
                    },
                    "deviceType": {
                      "type": "string"
                    },
                    "family": {
                      "type": "string"
                    },
                    "fixed": {
                      "type": "boolean"
                    },
                    "greyOut": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "networkType": {
                      "type": "string"
                    },
                    "nodeType": {
                      "type": "string"
                    },
                    "order": {
                      "type": "integer"
                    },
                    "osType": {
                      "type": "string"
                    },
                    "platformId": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "roleSource": {
                      "type": "string"
                    },
                    "softwareVersion": {
                      "type": "string"
                    },
                    "upperNode": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "vlanId": {
                      "type": "string"
                    },
                    "x": {
                      "type": "integer"
                    },
                    "y": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UnClaimDeviceResponse": {
        "properties": {
          "jsonArrayResponse": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "jsonResponse": {
            "properties": {},
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "UnclaimRequest": {
        "properties": {
          "deviceIdList": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateApplicationPolicyQueuingProfileRequest": {
        "items": {
          "properties": {
            "clause": {
              "items": {
                "properties": {
                  "instanceId": {
                    "type": "integer"
                  },
                  "interfaceSpeedBandwidthClauses": {
                    "items": {
                      "properties": {
                        "instanceId": {
                          "type": "integer"
                        },
                        "interfaceSpeed": {
                          "enum": [
                            "ALL",
                            "HUNDRED_GBPS",
                            "TEN_GBPS",
                            "ONE_GBPS",
                            "HUNDRED_MBPS",
                            "TEN_MBPS",
                            "ONE_MBPS"
                          ],
                          "type": "string"
                        },
                        "tcBandwidthSettings": {
                          "items": {
                            "properties": {
                              "bandwidthPercentage": {
                                "type": "integer"
                              },
                              "instanceId": {
                                "type": "integer"
                              },
                              "trafficClass": {
                                "enum": [
                                  "BROADCAST_VIDEO",
                                  "REAL_TIME_INTERACTIVE",
                                  "VOIP_TELEPHONY",
                                  "SCAVENGER",
                                  "TRANSACTIONAL_DATA",
                                  "MULTIMEDIA_CONFERENCING",
                                  "NETWORK_CONTROL",
                                  "MULTIMEDIA_STREAMING",
                                  "BEST_EFFORT",
                                  "SIGNALING",
                                  "BULK_DATA",
                                  "OPS_ADMIN_MGMT"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "isCommonBetweenAllInterfaceSpeeds": {
                    "type": "boolean"
                  },
                  "tcDscpSettings": {
                    "items": {
                      "properties": {
                        "dscp": {
                          "type": "string"
                        },
                        "instanceId": {
                          "type": "integer"
                        },
                        "trafficClass": {
                          "enum": [
                            "BROADCAST_VIDEO",
                            "REAL_TIME_INTERACTIVE",
                            "VOIP_TELEPHONY",
                            "SCAVENGER",
                            "TRANSACTIONAL_DATA",
                            "MULTIMEDIA_CONFERENCING",
                            "NETWORK_CONTROL",
                            "MULTIMEDIA_STREAMING",
                            "BEST_EFFORT",
                            "SIGNALING",
                            "BULK_DATA",
                            "OPS_ADMIN_MGMT"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "type": {
                    "enum": [
                      "BANDWIDTH",
                      "DSCP_CUSTOMIZATION"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "description": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "UpdateApplicationPolicyQueuingProfileResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateDefaultAuthenticationProfileInSDAFabricRequest": {
        "items": {
          "properties": {
            "authenticateTemplateName": {
              "enum": [
                "Open Authentication",
                "Closed Authentication",
                "Low  Impact"
              ],
              "type": "string"
            },
            "authenticationOrder": {
              "enum": [
                "dot1x ",
                "mac"
              ],
              "type": "string"
            },
            "dot1xToMabFallbackTimeout": {
              "type": "string"
            },
            "numberOfHosts": {
              "enum": [
                "Unlimited",
                "Single"
              ],
              "type": "string"
            },
            "siteNameHierarchy": {
              "type": "string"
            },
            "wakeOnLan": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "UpdateDefaultAuthenticationProfileInSDAFabricResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateDeviceCredentialsRequest": {
        "properties": {
          "settings": {
            "properties": {
              "cliCredential": {
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "enablePassword": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "httpsRead": {
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "port": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "httpsWrite": {
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "port": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "snmpV2cRead": {
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "readCommunity": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "snmpV2cWrite": {
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "writeCommunity": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "snmpV3": {
                "properties": {
                  "authPassword": {
                    "type": "string"
                  },
                  "authType": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "privacyPassword": {
                    "type": "string"
                  },
                  "privacyType": {
                    "type": "string"
                  },
                  "snmpMode": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UpdateDeviceCredentialsResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateDeviceResponse": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "dayZeroConfig": {
            "properties": {
              "config": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dayZeroConfigPreview": {
            "properties": {},
            "type": "object"
          },
          "deviceInfo": {
            "properties": {
              "tags": {
                "properties": {},
                "type": "object"
              },
              "aaaCredentials": {
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "addedOn": {
                "type": "number"
              },
              "addnMacAddrs": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "agentType": {
                "type": "string"
              },
              "authStatus": {
                "type": "string"
              },
              "authenticatedMicNumber": {
                "type": "string"
              },
              "authenticatedSudiSerialNo": {
                "type": "string"
              },
              "capabilitiesSupported": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cmState": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "deviceSudiSerialNos": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "deviceType": {
                "type": "string"
              },
              "featuresSupported": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "fileSystemList": {
                "items": {
                  "properties": {
                    "freespace": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "readable": {
                      "type": "boolean"
                    },
                    "size": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "writeable": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "firstContact": {
                "type": "number"
              },
              "hostname": {
                "type": "string"
              },
              "httpHeaders": {
                "items": {
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "imageFile": {
                "type": "string"
              },
              "imageVersion": {
                "type": "string"
              },
              "ipInterfaces": {
                "items": {
                  "properties": {
                    "ipv4Address": {
                      "properties": {},
                      "type": "object"
                    },
                    "ipv6AddressList": {
                      "items": {
                        "properties": {},
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "macAddress": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "lastContact": {
                "type": "number"
              },
              "lastSyncTime": {
                "type": "number"
              },
              "lastUpdateOn": {
                "type": "number"
              },
              "location": {
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "altitude": {
                    "type": "string"
                  },
                  "latitude": {
                    "type": "string"
                  },
                  "longitude": {
                    "type": "string"
                  },
                  "siteId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "macAddress": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "neighborLinks": {
                "items": {
                  "properties": {
                    "localInterfaceName": {
                      "type": "string"
                    },
                    "localMacAddress": {
                      "type": "string"
                    },
                    "localShortInterfaceName": {
                      "type": "string"
                    },
                    "remoteDeviceName": {
                      "type": "string"
                    },
                    "remoteInterfaceName": {
                      "type": "string"
                    },
                    "remoteMacAddress": {
                      "type": "string"
                    },
                    "remotePlatform": {
                      "type": "string"
                    },
                    "remoteShortInterfaceName": {
                      "type": "string"
                    },
                    "remoteVersion": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "onbState": {
                "type": "string"
              },
              "pid": {
                "type": "string"
              },
              "pnpProfileList": {
                "items": {
                  "properties": {
                    "createdBy": {
                      "type": "string"
                    },
                    "discoveryCreated": {
                      "type": "boolean"
                    },
                    "primaryEndpoint": {
                      "properties": {
                        "certificate": {
                          "type": "string"
                        },
                        "fqdn": {
                          "type": "string"
                        },
                        "ipv4Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "ipv6Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "port": {
                          "type": "number"
                        },
                        "protocol": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "profileName": {
                      "type": "string"
                    },
                    "secondaryEndpoint": {
                      "properties": {
                        "certificate": {
                          "type": "string"
                        },
                        "fqdn": {
                          "type": "string"
                        },
                        "ipv4Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "ipv6Address": {
                          "properties": {},
                          "type": "object"
                        },
                        "port": {
                          "type": "number"
                        },
                        "protocol": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "populateInventory": {
                "type": "boolean"
              },
              "preWorkflowCliOuputs": {
                "items": {
                  "properties": {
                    "cli": {
                      "type": "string"
                    },
                    "cliOutput": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "projectId": {
                "type": "string"
              },
              "projectName": {
                "type": "string"
              },
              "reloadRequested": {
                "type": "boolean"
              },
              "serialNumber": {
                "type": "string"
              },
              "siteId": {
                "type": "string"
              },
              "siteName": {
                "type": "string"
              },
              "smartAccountId": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "stack": {
                "type": "boolean"
              },
              "stackInfo": {
                "properties": {
                  "isFullRing": {
                    "type": "boolean"
                  },
                  "stackMemberList": {
                    "items": {
                      "properties": {
                        "hardwareVersion": {
                          "type": "string"
                        },
                        "licenseLevel": {
                          "type": "string"
                        },
                        "licenseType": {
                          "type": "string"
                        },
                        "macAddress": {
                          "type": "string"
                        },
                        "pid": {
                          "type": "string"
                        },
                        "priority": {
                          "type": "number"
                        },
                        "role": {
                          "type": "string"
                        },
                        "serialNumber": {
                          "type": "string"
                        },
                        "softwareVersion": {
                          "type": "string"
                        },
                        "stackNumber": {
                          "type": "number"
                        },
                        "state": {
                          "type": "string"
                        },
                        "sudiSerialNumber": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "stackRingProtocol": {
                    "type": "string"
                  },
                  "supportsStackWorkflows": {
                    "type": "boolean"
                  },
                  "totalMemberCount": {
                    "type": "number"
                  },
                  "validLicenseLevels": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "state": {
                "type": "string"
              },
              "sudiRequired": {
                "type": "boolean"
              },
              "userMicNumbers": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "userSudiSerialNos": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "virtualAccountId": {
                "type": "string"
              },
              "workflowId": {
                "type": "string"
              },
              "workflowName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "runSummaryList": {
            "items": {
              "properties": {
                "details": {
                  "type": "string"
                },
                "errorFlag": {
                  "type": "boolean"
                },
                "historyTaskInfo": {
                  "properties": {
                    "addnDetails": {
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "type": "string"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "timestamp": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "systemResetWorkflow": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "addToInventory": {
                "type": "boolean"
              },
              "addedOn": {
                "type": "number"
              },
              "configId": {
                "type": "string"
              },
              "currTaskIdx": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "endTime": {
                "type": "number"
              },
              "execTime": {
                "type": "number"
              },
              "imageId": {
                "type": "string"
              },
              "instanceType": {
                "type": "string"
              },
              "lastupdateOn": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "tasks": {
                "items": {
                  "properties": {
                    "currWorkItemIdx": {
                      "type": "number"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "taskSeqNo": {
                      "type": "number"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "tenantId": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "useState": {
                "type": "string"
              },
              "version": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "systemWorkflow": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "addToInventory": {
                "type": "boolean"
              },
              "addedOn": {
                "type": "number"
              },
              "configId": {
                "type": "string"
              },
              "currTaskIdx": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "endTime": {
                "type": "number"
              },
              "execTime": {
                "type": "number"
              },
              "imageId": {
                "type": "string"
              },
              "instanceType": {
                "type": "string"
              },
              "lastupdateOn": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "tasks": {
                "items": {
                  "properties": {
                    "currWorkItemIdx": {
                      "type": "number"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "taskSeqNo": {
                      "type": "number"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "tenantId": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "useState": {
                "type": "string"
              },
              "version": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "tenantId": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "workflow": {
            "properties": {
              "_id": {
                "type": "string"
              },
              "addToInventory": {
                "type": "boolean"
              },
              "addedOn": {
                "type": "number"
              },
              "configId": {
                "type": "string"
              },
              "currTaskIdx": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "endTime": {
                "type": "number"
              },
              "execTime": {
                "type": "number"
              },
              "imageId": {
                "type": "string"
              },
              "instanceType": {
                "type": "string"
              },
              "lastupdateOn": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "tasks": {
                "items": {
                  "properties": {
                    "currWorkItemIdx": {
                      "type": "number"
                    },
                    "endTime": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string"
                    },
                    "taskSeqNo": {
                      "type": "number"
                    },
                    "timeTaken": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "workItemList": {
                      "items": {
                        "properties": {
                          "command": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "number"
                          },
                          "outputStr": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string"
                          },
                          "timeTaken": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "tenantId": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "useState": {
                "type": "string"
              },
              "version": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "workflowParameters": {
            "properties": {
              "configList": {
                "items": {
                  "properties": {
                    "configId": {
                      "type": "string"
                    },
                    "configParameters": {
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "licenseLevel": {
                "type": "string"
              },
              "licenseType": {
                "type": "string"
              },
              "topOfStackSerialNumber": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UpdateEmailConfiguration": {
        "properties": {
          "emailConfigId": {
            "type": "string"
          },
          "fromEmail": {
            "type": "string"
          },
          "primarySMTPConfig": {
            "properties": {
              "hostName": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "userName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "secondarySMTPConfig": {
            "properties": {
              "hostName": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "userName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "subject": {
            "type": "string"
          },
          "toEmail": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateEmailDestinationResponse": {
        "properties": {
          "statusUri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateEmailEventSubscription": {
        "items": {
          "properties": {
            "description": {
              "type": "string"
            },
            "filter": {
              "properties": {
                "categories": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "domainsSubdomains": {
                  "items": {
                    "properties": {
                      "domain": {
                        "type": "string"
                      },
                      "subDomains": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "eventIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "severities": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "siteIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sources": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "subscriptionEndpoints": {
              "items": {
                "properties": {
                  "instanceId": {
                    "type": "string"
                  },
                  "subscriptionDetails": {
                    "properties": {
                      "connectorType": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "fromEmailAddress": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "subject": {
                        "type": "string"
                      },
                      "toEmailAddresses": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "subscriptionId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "UpdateEmailEventSubscriptionResponse": {
        "properties": {
          "statusUri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateEnterpriseSSIDRequest": {
        "properties": {
          "aaaOverride": {
            "type": "boolean"
          },
          "basicServiceSetClientIdleTimeout": {
            "type": "integer"
          },
          "clientExclusionTimeout": {
            "type": "integer"
          },
          "clientRateLimit": {
            "type": "number"
          },
          "coverageHoleDetectionEnable": {
            "type": "boolean"
          },
          "enableBasicServiceSetMaxIdle": {
            "type": "boolean"
          },
          "enableBroadcastSSID": {
            "type": "boolean"
          },
          "enableClientExclusion": {
            "type": "boolean"
          },
          "enableDirectedMulticastService": {
            "type": "boolean"
          },
          "enableFastLane": {
            "type": "boolean"
          },
          "enableMACFiltering": {
            "type": "boolean"
          },
          "enableNeighborList": {
            "type": "boolean"
          },
          "enableSessionTimeOut": {
            "type": "boolean"
          },
          "fastTransition": {
            "enum": [
              "Adaptive",
              "Enable",
              "Disable"
            ],
            "type": "string"
          },
          "mfpClientProtection": {
            "enum": [
              "Optional",
              "Disabled",
              "Required"
            ],
            "type": "string"
          },
          "multiPSKSettings": {
            "items": {
              "properties": {
                "passphrase": {
                  "type": "string"
                },
                "passphraseType": {
                  "enum": [
                    "ASCII",
                    "HEX"
                  ],
                  "type": "string"
                },
                "priority": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "nasOptions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "passphrase": {
            "type": "string"
          },
          "policyProfileName": {
            "type": "string"
          },
          "profileName": {
            "type": "string"
          },
          "protectedManagementFrame": {
            "enum": [
              "Optional",
              "Disabled",
              "Required"
            ],
            "type": "string"
          },
          "radioPolicy": {
            "enum": [
              "Triple band operation (2.4GHz, 5GHz and 6GHz)",
              "Triple band operation with band select",
              "5GHz only",
              "2.4GHz only",
              "6GHz only"
            ],
            "type": "string"
          },
          "securityLevel": {
            "enum": [
              "WPA2_ENTERPRISE",
              "WPA2_PERSONAL",
              "OPEN",
              "WPA3_ENTERPRISE",
              "WPA3_PERSONAL",
              "WPA2_WPA3_PERSONAL",
              "WPA2_WPA3_ENTERPRISE"
            ],
            "type": "string"
          },
          "sessionTimeOut": {
            "type": "integer"
          },
          "trafficType": {
            "enum": [
              "voicedata",
              "data"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateEnterpriseSSIDResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateEventSubscriptionsRequest": {
        "items": {
          "properties": {
            "description": {
              "type": "string"
            },
            "filter": {
              "properties": {
                "categories": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "domainsSubdomains": {
                  "items": {
                    "properties": {
                      "domain": {
                        "type": "string"
                      },
                      "subDomains": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "eventIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "severities": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "siteIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sources": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "subscriptionEndpoints": {
              "items": {
                "properties": {
                  "instanceId": {
                    "type": "string"
                  },
                  "subscriptionDetails": {
                    "properties": {
                      "connectorType": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "subscriptionId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "UpdateEventSubscriptionsResponse": {
        "properties": {
          "statusUri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateGlobalCredentialsVRequest": {
        "properties": {
          "cliCredential": {
            "properties": {
              "description": {
                "type": "string"
              },
              "enablePassword": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "httpsRead": {
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "httpsWrite": {
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "snmpV2cRead": {
            "properties": {
              "description": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "readCommunity": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "snmpV2cWrite": {
            "properties": {
              "description": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "writeCommunity": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "snmpV3": {
            "properties": {
              "authPassword": {
                "type": "string"
              },
              "authType": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "privacyPassword": {
                "type": "string"
              },
              "privacyType": {
                "type": "string"
              },
              "snmpMode": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UpdateGlobalCredentialsVResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateGlobalPoolRequest": {
        "properties": {
          "settings": {
            "properties": {
              "ippool": {
                "items": {
                  "properties": {
                    "dhcpServerIps": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "dnsServerIps": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "gateway": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "ipPoolName": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UpdateGlobalPoolResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateITSMIntegrationSettingRequest": {
        "properties": {
          "data": {
            "properties": {
              "ConnectionSettings": {
                "properties": {
                  "Auth_Password": {
                    "type": "string"
                  },
                  "Auth_UserName": {
                    "type": "string"
                  },
                  "Url": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "dypName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateITSMIntegrationSettingResponse": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "data": {
            "properties": {
              "ConnectionSettings": {
                "properties": {
                  "Auth_Password": {
                    "type": "string"
                  },
                  "Auth_UserName": {
                    "type": "string"
                  },
                  "Url": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "dypId": {
            "type": "string"
          },
          "dypMajorVersion": {
            "type": "integer"
          },
          "dypName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "uniqueKey": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UpdateInterfaceDetailsRequest": {
        "properties": {
          "adminStatus": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "vlanId": {
            "type": "integer"
          },
          "voiceVlanId": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UpdateInterfaceDetailsResponse": {
        "properties": {
          "response": {
            "properties": {
              "properties": {
                "properties": {
                  "taskId": {
                    "properties": {
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "url": {
                    "properties": {
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "required": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "properties": {
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UpdateNFVProfileRequest": {
        "properties": {
          "device": {
            "items": {
              "properties": {
                "currentDeviceTag": {
                  "type": "string"
                },
                "customNetworks": {
                  "items": {
                    "properties": {
                      "connectionType": {
                        "enum": [
                          "wan-net",
                          "wan2-net",
                          "lan-net",
                          "mgmt-net",
                          "service-net",
                          "GEO-2-1",
                          "GEO-2-2",
                          "GEO-3-1",
                          "GEO-3-2",
                          "SRIOV-1",
                          "SRIOV-2",
                          "SRIOV-3",
                          "SRIOV-4",
                          "SRIOV-5",
                          "SRIOV-6"
                        ],
                        "type": "string"
                      },
                      "networkName": {
                        "type": "string"
                      },
                      "servicesToConnect": {
                        "items": {
                          "properties": {
                            "serviceName": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "vlanId": {
                        "type": "number"
                      },
                      "vlanMode": {
                        "enum": [
                          "trunk",
                          "Access"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "customTemplate": {
                  "items": {
                    "properties": {
                      "deviceType": {
                        "enum": [
                          "Cisco 5400 Enterprise Network Compute System",
                          "Cisco Integrated Services Virtual Router",
                          "Cisco Adaptive Security Virtual Appliance (ASAv)",
                          "NFVIS",
                          "ASAV"
                        ],
                        "type": "string"
                      },
                      "template": {
                        "type": "string"
                      },
                      "templateType": {
                        "enum": [
                          "Onboarding Template(s)",
                          "Day-N-Template(s)"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "deviceTag": {
                  "type": "string"
                },
                "directInternetAccessForFirewall": {
                  "type": "boolean"
                },
                "services": {
                  "items": {
                    "properties": {
                      "firewallMode": {
                        "enum": [
                          "routed",
                          "transparent"
                        ],
                        "type": "string"
                      },
                      "imageName": {
                        "type": "string"
                      },
                      "profileType": {
                        "enum": [
                          "ASAv5",
                          "ASAv30",
                          "ISRv-mini",
                          "ISRv-medium",
                          "ISRv-small",
                          "riverbed-small",
                          "sp-small",
                          "rehel7-medium",
                          "vEdge-samll",
                          "vwaas-200-original",
                          "vwaas-150-original",
                          "vWASS-6000R-Resized",
                          "vWASS-1300-Original",
                          "vWASS-50000-Original",
                          "vCM-100",
                          "vWASS-6000R-Original",
                          "vWASS-750-Original",
                          "vWASS-1300-Resized",
                          "vWASS-2500-Original",
                          "vCM-500",
                          "vCM-2000",
                          "vWASS-6000-Resized",
                          "vWASS-6000-Original",
                          "vCM-1000",
                          "vWASS-750-Resized",
                          "vWASS-200-Resized",
                          "vWASS-12000-Original",
                          "vWASS-150-Resized",
                          "vWASS-12000-Resized",
                          "vWASS-2500-Resized",
                          "vWASS-50000-Resized"
                        ],
                        "type": "string"
                      },
                      "serviceName": {
                        "type": "string"
                      },
                      "serviceType": {
                        "enum": [
                          "isr",
                          "vedge",
                          "waas",
                          "asa",
                          "ngfw",
                          "paloalto",
                          "fortinet",
                          "checkpoint",
                          "riverbed",
                          "silverpeak",
                          "linux"
                        ],
                        "type": "string"
                      },
                      "vNicMapping": {
                        "items": {
                          "properties": {
                            "assignIpAddressToNetwork": {
                              "type": "string"
                            },
                            "networkType": {
                              "enum": [
                                "wan-net",
                                "wan2-net",
                                "lan-net",
                                "mgmt-net",
                                "service-net",
                                "GEO-0",
                                "GEO-1",
                                "GEO-2-1",
                                "GEO-2-2",
                                "GEO-3-1",
                                "GEO-3-2",
                                "SRIOV-1",
                                "SRIOV-2",
                                "SRIOV-3",
                                "SRIOV-4",
                                "SRIOV-5",
                                "SRIOV-6"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "vlanForL2": {
                  "items": {
                    "properties": {
                      "vlanDescription": {
                        "type": "string"
                      },
                      "vlanId": {
                        "type": "number"
                      },
                      "vlanType": {
                        "enum": [
                          "access",
                          "trunk"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateNFVProfileResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateNetworkRequest": {
        "properties": {
          "settings": {
            "properties": {
              "clientAndEndpoint_aaa": {
                "properties": {
                  "servers": {
                    "type": "string"
                  },
                  "ipAddress": {
                    "enum": [
                      "Mandatory for ISE servers."
                    ],
                    "type": "string"
                  },
                  "network": {
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "sharedSecret": {
                    "enum": [
                      "Supported only by ISE servers"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "dhcpServer": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "dnsServer": {
                "properties": {
                  "domainName": {
                    "enum": [
                      "can only contain alphanumeric characters or hyphen"
                    ],
                    "type": "string"
                  },
                  "primaryIpAddress": {
                    "enum": [
                      "valid range : 1.0.0.0 - 223.255.255.255"
                    ],
                    "type": "string"
                  },
                  "secondaryIpAddress": {
                    "enum": [
                      "valid range : 1.0.0.0 - 223.255.255.255"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "messageOfTheday": {
                "properties": {
                  "bannerMessage": {
                    "type": "string"
                  },
                  "retainExistingBanner": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "netflowcollector": {
                "properties": {
                  "ipAddress": {
                    "type": "string"
                  },
                  "port": {
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "network_aaa": {
                "properties": {
                  "servers": {
                    "enum": [
                      "Server type supported by ISE and AAA"
                    ],
                    "type": "string"
                  },
                  "ipAddress": {
                    "enum": [
                      "Mandatory for ISE servers and for AAA consider this as additional IP."
                    ],
                    "type": "string"
                  },
                  "network": {
                    "enum": [
                      "For AAA server consider it as primary IP and For ISE consider as Network"
                    ],
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "sharedSecret": {
                    "enum": [
                      "Supported only by ISE Servers"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "ntpServer": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "snmpServer": {
                "properties": {
                  "configureDnacIP": {
                    "type": "boolean"
                  },
                  "ipAddresses": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "syslogServer": {
                "properties": {
                  "configureDnacIP": {
                    "type": "boolean"
                  },
                  "ipAddresses": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "timezone": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UpdateNetworkResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateNetworkVRequest": {
        "properties": {
          "settings": {
            "properties": {
              "clientAndEndpoint_aaa": {
                "properties": {
                  "servers": {
                    "type": "string"
                  },
                  "ipAddress": {
                    "enum": [
                      "Mandatory for ISE servers."
                    ],
                    "type": "string"
                  },
                  "network": {
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "sharedSecret": {
                    "enum": [
                      "Supported only by ISE servers"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "dhcpServer": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "dnsServer": {
                "properties": {
                  "domainName": {
                    "enum": [
                      "can only contain alphanumeric characters or hyphen"
                    ],
                    "type": "string"
                  },
                  "primaryIpAddress": {
                    "enum": [
                      "valid range : 1.0.0.0 - 223.255.255.255"
                    ],
                    "type": "string"
                  },
                  "secondaryIpAddress": {
                    "enum": [
                      "valid range : 1.0.0.0 - 223.255.255.255"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "messageOfTheday": {
                "properties": {
                  "bannerMessage": {
                    "type": "string"
                  },
                  "retainExistingBanner": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "netflowcollector": {
                "properties": {
                  "ipAddress": {
                    "type": "string"
                  },
                  "port": {
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "network_aaa": {
                "properties": {
                  "servers": {
                    "enum": [
                      "Server type supported by ISE and AAA"
                    ],
                    "type": "string"
                  },
                  "ipAddress": {
                    "enum": [
                      "Mandatory for ISE servers and for AAA consider this as additional IP."
                    ],
                    "type": "string"
                  },
                  "network": {
                    "enum": [
                      "For AAA server consider it as primary IP and For ISE consider as Network"
                    ],
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "sharedSecret": {
                    "enum": [
                      "Supported only by ISE Servers"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "ntpServer": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "snmpServer": {
                "properties": {
                  "configureDnacIP": {
                    "type": "boolean"
                  },
                  "ipAddresses": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "syslogServer": {
                "properties": {
                  "configureDnacIP": {
                    "type": "boolean"
                  },
                  "ipAddresses": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "timezone": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UpdateNetworkVResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdatePnPGlobalSettingsResponse": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "aaaCredentials": {
            "properties": {
              "password": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "acceptEula": {
            "type": "boolean"
          },
          "defaultProfile": {
            "properties": {
              "cert": {
                "type": "string"
              },
              "fqdnAddresses": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "ipAddresses": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "port": {
                "type": "number"
              },
              "proxy": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "savaMappingList": {
            "items": {
              "properties": {
                "autoSyncPeriod": {
                  "type": "number"
                },
                "ccoUser": {
                  "type": "string"
                },
                "expiry": {
                  "type": "number"
                },
                "lastSync": {
                  "type": "number"
                },
                "profile": {
                  "properties": {
                    "addressFqdn": {
                      "type": "string"
                    },
                    "addressIpV4": {
                      "type": "string"
                    },
                    "cert": {
                      "type": "string"
                    },
                    "makeDefault": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "port": {
                      "type": "number"
                    },
                    "profileId": {
                      "type": "string"
                    },
                    "proxy": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "smartAccountId": {
                  "type": "string"
                },
                "syncResult": {
                  "properties": {
                    "syncList": {
                      "items": {
                        "properties": {
                          "deviceSnList": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "syncType": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "syncMsg": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "syncResultStr": {
                  "type": "string"
                },
                "syncStartTime": {
                  "type": "number"
                },
                "syncStatus": {
                  "type": "string"
                },
                "tenantId": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                },
                "virtualAccountId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "taskTimeOuts": {
            "properties": {
              "configTimeOut": {
                "type": "number"
              },
              "generalTimeOut": {
                "type": "number"
              },
              "imageDownloadTimeOut": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "tenantId": {
            "type": "string"
          },
          "version": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "UpdatePnPServerProfileResponse": {
        "properties": {
          "autoSyncPeriod": {
            "type": "number"
          },
          "ccoUser": {
            "type": "string"
          },
          "expiry": {
            "type": "number"
          },
          "lastSync": {
            "type": "number"
          },
          "profile": {
            "properties": {
              "addressFqdn": {
                "type": "string"
              },
              "addressIpV4": {
                "type": "string"
              },
              "cert": {
                "type": "string"
              },
              "makeDefault": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "port": {
                "type": "number"
              },
              "profileId": {
                "type": "string"
              },
              "proxy": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "smartAccountId": {
            "type": "string"
          },
          "syncResult": {
            "properties": {
              "syncList": {
                "items": {
                  "properties": {
                    "deviceSnList": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "syncType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "syncMsg": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "syncResultStr": {
            "type": "string"
          },
          "syncStartTime": {
            "type": "number"
          },
          "syncStatus": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "virtualAccountId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateQosDeviceInterfaceInfoRequest": {
        "items": {
          "properties": {
            "excludedInterfaces": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "networkDeviceId": {
              "type": "string"
            },
            "qosDeviceInterfaceInfo": {
              "items": {
                "properties": {
                  "dmvpnRemoteSitesBw": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "instanceId": {
                    "type": "integer"
                  },
                  "interfaceId": {
                    "type": "string"
                  },
                  "interfaceName": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  },
                  "role": {
                    "enum": [
                      "WAN",
                      "DMVPN_HUB",
                      "DMVPN_SPOKE"
                    ],
                    "type": "string"
                  },
                  "uploadBW": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "UpdateQosDeviceInterfaceInfoResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateReserveIPSubpoolRequest": {
        "properties": {
          "ipv4DhcpServers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ipv4DnsServers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ipv4GateWay": {
            "type": "string"
          },
          "ipv6AddressSpace": {
            "type": "boolean"
          },
          "ipv6DhcpServers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ipv6DnsServers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ipv6GateWay": {
            "type": "string"
          },
          "ipv6GlobalPool": {
            "type": "string"
          },
          "ipv6Prefix": {
            "type": "boolean"
          },
          "ipv6PrefixLength": {
            "type": "integer"
          },
          "ipv6Subnet": {
            "type": "string"
          },
          "ipv6TotalHost": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "slaacSupport": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UpdateReserveIPSubpoolResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateRestWebhookEventSubscription": {
        "items": {
          "properties": {
            "description": {
              "type": "string"
            },
            "filter": {
              "properties": {
                "categories": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "domainsSubdomains": {
                  "items": {
                    "properties": {
                      "domain": {
                        "type": "string"
                      },
                      "subDomains": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "eventIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "severities": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "siteIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sources": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "subscriptionEndpoints": {
              "items": {
                "properties": {
                  "instanceId": {
                    "type": "string"
                  },
                  "subscriptionDetails": {
                    "properties": {
                      "connectorType": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "subscriptionId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "UpdateRestWebhookEventSubscriptionResponse": {
        "properties": {
          "statusUri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSPProfileRequest": {
        "properties": {
          "settings": {
            "properties": {
              "qos": {
                "items": {
                  "properties": {
                    "model": {
                      "type": "string"
                    },
                    "oldProfileName": {
                      "type": "string"
                    },
                    "profileName": {
                      "type": "string"
                    },
                    "wanProvider": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UpdateSPProfileResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSPProfileVRequest": {
        "properties": {
          "settings": {
            "properties": {
              "qos": {
                "items": {
                  "properties": {
                    "model": {
                      "type": "string"
                    },
                    "oldProfileName": {
                      "type": "string"
                    },
                    "profileName": {
                      "type": "string"
                    },
                    "wanProvider": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UpdateSPProfileVResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSSIDToIPPoolMappingRequest": {
        "properties": {
          "scalableGroupName": {
            "type": "string"
          },
          "siteNameHierarchy": {
            "type": "string"
          },
          "ssidNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "vlanName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSSIDToIPPoolMappingResponse": {
        "items": {
          "properties": {
            "executionId": {
              "type": "string"
            },
            "executionStatusURL": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "UpdateSiteRequest": {
        "properties": {
          "site": {
            "properties": {
              "area": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "parentName": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "building": {
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "parentName": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "floor": {
                "properties": {
                  "height": {
                    "type": "number"
                  },
                  "length": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "rfModel": {
                    "enum": [
                      "Cubes And Walled Offices",
                      "Drywall Office Only",
                      "Indoor High Ceiling",
                      "Outdoor Open Space"
                    ],
                    "type": "string"
                  },
                  "width": {
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": {
            "enum": [
              "area",
              "building",
              "floor"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSiteResponse": {
        "properties": {
          "response": {
            "properties": {
              "data": {
                "type": "string"
              },
              "endTime": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "instanceTenantId": {
                "type": "string"
              },
              "isError": {
                "type": "string"
              },
              "operationIdList": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "progress": {
                "type": "string"
              },
              "rootId": {
                "type": "string"
              },
              "serviceType": {
                "type": "string"
              },
              "startTime": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "result": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSyslogConfiguration": {
        "properties": {
          "host": {
            "type": "string"
          },
          "configId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "port": {
            "type": "string"
          },
          "protocol": {
            "enum": [
              "UDP",
              "TCP"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSyslogDestinationResponse": {
        "properties": {
          "apiStatus": {
            "type": "string"
          },
          "errorMessage": {
            "properties": {
              "errors": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "statusMessage": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSyslogEventSubscription": {
        "items": {
          "properties": {
            "description": {
              "type": "string"
            },
            "filter": {
              "properties": {
                "categories": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "domainsSubdomains": {
                  "items": {
                    "properties": {
                      "domain": {
                        "type": "string"
                      },
                      "subDomains": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "eventIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "severities": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "siteIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sources": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "types": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "subscriptionEndpoints": {
              "items": {
                "properties": {
                  "instanceId": {
                    "type": "string"
                  },
                  "subscriptionDetails": {
                    "properties": {
                      "connectorType": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "subscriptionId": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "UpdateSyslogEventSubscriptionResponse": {
        "properties": {
          "statusUri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateUserAPIRequest": {
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "roleList": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "userId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateUserAPIResponse": {
        "properties": {
          "response": {
            "properties": {
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UpdateUserDefinedFieldRequest": {
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateUserDefinedFieldResponse": {
        "properties": {
          "response": {
            "properties": {
              "taskId": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateVirtualNetworkWithScalableGroupsRequest": {
        "properties": {
          "isGuestVirtualNetwork": {
            "type": "boolean"
          },
          "scalableGroupNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "vManageVpnId": {
            "type": "string"
          },
          "virtualNetworkName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateVirtualNetworkWithScalableGroupsResponse": {
        "properties": {
          "description": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "pending",
              ""
            ],
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskStatusUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateWebhookDestinationResponse": {
        "properties": {
          "apiStatus": {
            "type": "string"
          },
          "errorMessage": {
            "properties": {
              "errors": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "statusMessage": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateWirelessProfileRequest": {
        "properties": {
          "profileDetails": {
            "properties": {
              "name": {
                "type": "string"
              },
              "sites": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "ssidDetails": {
                "items": {
                  "properties": {
                    "enableFabric": {
                      "type": "boolean"
                    },
                    "flexConnect": {
                      "properties": {
                        "enableFlexConnect": {
                          "type": "boolean"
                        },
                        "localToVlan": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "interfaceName": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "policyProfileName": {
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "Guest",
                        "Enterprise"
                      ],
                      "type": "string"
                    },
                    "wlanProfileName": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UpdateWirelessProfileResponse": {
        "properties": {
          "executionId": {
            "type": "string"
          },
          "executionStatusUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateWorkflowResponse": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "addToInventory": {
            "type": "boolean"
          },
          "addedOn": {
            "type": "number"
          },
          "configId": {
            "type": "string"
          },
          "currTaskIdx": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "endTime": {
            "type": "number"
          },
          "execTime": {
            "type": "number"
          },
          "imageId": {
            "type": "string"
          },
          "instanceType": {
            "type": "string"
          },
          "lastupdateOn": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "startTime": {
            "type": "number"
          },
          "state": {
            "type": "string"
          },
          "tasks": {
            "items": {
              "properties": {
                "currWorkItemIdx": {
                  "type": "number"
                },
                "endTime": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "startTime": {
                  "type": "number"
                },
                "state": {
                  "type": "string"
                },
                "taskSeqNo": {
                  "type": "number"
                },
                "timeTaken": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "workItemList": {
                  "items": {
                    "properties": {
                      "command": {
                        "type": "string"
                      },
                      "endTime": {
                        "type": "number"
                      },
                      "outputStr": {
                        "type": "string"
                      },
                      "startTime": {
                        "type": "number"
                      },
                      "state": {
                        "type": "string"
                      },
                      "timeTaken": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "tenantId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "useState": {
            "type": "string"
          },
          "version": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "UpdatewebhookConfiguration": {
        "properties": {
          "description": {
            "type": "string"
          },
          "headers": {
            "items": {
              "properties": {
                "defaultValue": {
                  "type": "string"
                },
                "encrypt": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "method": {
            "enum": [
              "POST",
              "PUT"
            ],
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "trustCert": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "webhookId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UploadFileResponse": {
        "type": "object"
      },
      "VirtualAccountDetailsResponse": {
        "properties": {
          "smart_account_id": {
            "type": "string"
          },
          "smart_account_name": {
            "type": "string"
          },
          "virtual_account_details": {
            "items": {
              "properties": {
                "virtual_account_id": {
                  "type": "string"
                },
                "virtual_account_name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "VlanListResult": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "interfaceName": {
                  "type": "string"
                },
                "ipAddress": {
                  "type": "string"
                },
                "mask": {
                  "type": "integer"
                },
                "networkAddress": {
                  "type": "string"
                },
                "numberOfIPs": {
                  "type": "integer"
                },
                "prefix": {
                  "type": "string"
                },
                "vlanNumber": {
                  "type": "integer"
                },
                "vlanType": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "VlanNamesResult": {
        "properties": {
          "response": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "WirelessInfoResult": {
        "properties": {
          "response": {
            "properties": {
              "adminEnabledPorts": {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              "apGroupName": {
                "type": "string"
              },
              "deviceId": {
                "type": "string"
              },
              "ethMacAddress": {
                "type": "string"
              },
              "flexGroupName": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "instanceTenantId": {
                "type": "string"
              },
              "instanceUuid": {
                "type": "string"
              },
              "lagModeEnabled": {
                "type": "boolean"
              },
              "netconfEnabled": {
                "type": "boolean"
              },
              "wirelessLicenseInfo": {
                "enum": [
                  "ADVANTAGE",
                  "ESSENTIALS"
                ],
                "type": "string"
              },
              "wirelessPackageInstalled": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "WirelessRogueAPContainmentStatusResponse": {
        "properties": {
          "response": {
            "items": {
              "properties": {
                "bssidContainmentStatus": {
                  "items": {
                    "properties": {
                      "bssid": {
                        "type": "string"
                      },
                      "containedByWlcIp": {
                        "type": "string"
                      },
                      "containmentStatus": {
                        "type": "string"
                      },
                      "isAdhoc": {
                        "type": "boolean"
                      },
                      "radioType": {
                        "type": "string"
                      },
                      "ssid": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "classification": {
                  "type": "string"
                },
                "containedByWlcIp": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "containmentStatus": {
                  "type": "string"
                },
                "lastSeen": {
                  "type": "integer"
                },
                "lastTaskDetail": {
                  "properties": {
                    "initiatedOnBssid": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "initiatedOnWlcIp": {
                      "type": "string"
                    },
                    "taskId": {
                      "type": "string"
                    },
                    "taskStartTime": {
                      "type": "integer"
                    },
                    "taskState": {
                      "type": "string"
                    },
                    "taskType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "macAddress": {
                  "type": "string"
                },
                "strongestDetectingWlcIp": {
                  "type": "string"
                },
                "type": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Workflow": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "addToInventory": {
            "type": "boolean"
          },
          "addedOn": {
            "type": "integer"
          },
          "configId": {
            "type": "string"
          },
          "currTaskIdx": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "endTime": {
            "type": "integer"
          },
          "execTime": {
            "type": "integer"
          },
          "imageId": {
            "type": "string"
          },
          "instanceType": {
            "enum": [
              "SystemWorkflow",
              "UserWorkflow",
              "SystemResetWorkflow"
            ],
            "type": "string"
          },
          "lastupdateOn": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "startTime": {
            "type": "integer"
          },
          "state": {
            "type": "string"
          },
          "tasks": {
            "items": {
              "properties": {
                "currWorkItemIdx": {
                  "type": "integer"
                },
                "endTime": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "startTime": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                },
                "taskSeqNo": {
                  "type": "integer"
                },
                "timeTaken": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "workItemList": {
                  "items": {
                    "properties": {
                      "command": {
                        "type": "string"
                      },
                      "endTime": {
                        "type": "integer"
                      },
                      "outputStr": {
                        "type": "string"
                      },
                      "startTime": {
                        "type": "integer"
                      },
                      "state": {
                        "type": "string"
                      },
                      "timeTaken": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "tenantId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "useState": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "dnacsystemrole": {
        "properties": {
          "response": {
            "properties": {
              "roles": {
                "items": {
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "meta": {
                      "properties": {
                        "created": {
                          "type": "string"
                        },
                        "createdBy": {
                          "type": "string"
                        },
                        "lastModified": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "resourceTypes": {
                      "items": {
                        "properties": {
                          "operations": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "roleId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "exportDeviceDTO": {
        "properties": {
          "deviceId": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "password": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "report": {
        "properties": {
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dataCategory": {
            "type": "string"
          },
          "deliveries": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "executionCount": {
            "type": "integer"
          },
          "executions": {
            "items": {
              "properties": {
                "endTime": {
                  "type": "integer"
                },
                "errors": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "executionId": {
                  "type": "string"
                },
                "processStatus": {
                  "type": "string"
                },
                "requestStatus": {
                  "type": "string"
                },
                "startTime": {
                  "type": "integer"
                },
                "warnings": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "reportId": {
            "type": "string"
          },
          "reportWasExecuted": {
            "type": "boolean"
          },
          "schedule": {
            "type": "object"
          },
          "view": {
            "properties": {
              "description": {
                "type": "string"
              },
              "fieldGroups": {
                "items": {
                  "properties": {
                    "fieldGroupDisplayName": {
                      "type": "string"
                    },
                    "fieldGroupName": {
                      "type": "string"
                    },
                    "fields": {
                      "items": {
                        "properties": {
                          "displayName": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "filters": {
                "items": {
                  "properties": {
                    "displayName": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "value": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "format": {
                "properties": {
                  "default": {
                    "type": "boolean"
                  },
                  "formatType": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "name": {
                "type": "string"
              },
              "viewId": {
                "type": "string"
              },
              "viewInfo": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "viewGroupId": {
            "type": "string"
          },
          "viewGroupVersion": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "reportAPIBody": {
        "properties": {
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "deliveries": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "schedule": {
            "type": "object"
          },
          "view": {
            "properties": {
              "fieldGroups": {
                "items": {
                  "properties": {
                    "fieldGroupDisplayName": {
                      "type": "string"
                    },
                    "fieldGroupName": {
                      "type": "string"
                    },
                    "fields": {
                      "items": {
                        "properties": {
                          "displayName": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "filters": {
                "items": {
                  "properties": {
                    "displayName": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "value": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "format": {
                "properties": {
                  "formatType": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "name": {
                "type": "string"
              },
              "viewId": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "viewGroupId": {
            "type": "string"
          },
          "viewGroupVersion": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "reportExecutions": {
        "properties": {
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dataCategory": {
            "type": "string"
          },
          "deliveries": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "executionCount": {
            "type": "integer"
          },
          "executions": {
            "items": {
              "properties": {
                "endTime": {
                  "type": "integer"
                },
                "errors": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "executionId": {
                  "type": "string"
                },
                "processStatus": {
                  "type": "string"
                },
                "requestStatus": {
                  "type": "string"
                },
                "startTime": {
                  "type": "integer"
                },
                "warnings": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "reportId": {
            "type": "string"
          },
          "reportWasExecuted": {
            "type": "boolean"
          },
          "schedule": {
            "type": "object"
          },
          "view": {
            "properties": {
              "description": {
                "type": "string"
              },
              "fieldGroups": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "filters": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "format": {
                "type": "object"
              },
              "name": {
                "type": "string"
              },
              "viewId": {
                "type": "string"
              },
              "viewInfo": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "viewGroupId": {
            "type": "string"
          },
          "viewGroupVersion": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "view": {
        "properties": {
          "deliveries": {
            "items": {
              "properties": {
                "default": {
                  "type": "boolean"
                },
                "type": {
                  "enum": [
                    "EMAIL",
                    "WEBHOOK",
                    "DOWNLOAD"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "description": {
            "type": "string"
          },
          "fieldGroups": {
            "items": {
              "properties": {
                "fieldGroupDisplayName": {
                  "type": "string"
                },
                "fieldGroupName": {
                  "type": "string"
                },
                "fields": {
                  "items": {
                    "properties": {
                      "displayName": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "tableId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "filters": {
            "items": {
              "properties": {
                "additionalInfo": {
                  "properties": {},
                  "type": "object"
                },
                "cacheFilter": {
                  "type": "boolean"
                },
                "dataType": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "filterSource": {
                  "properties": {
                    "dataSource": {
                      "type": "object"
                    },
                    "displayValuePath": {
                      "type": "string"
                    },
                    "rootPath": {
                      "type": "string"
                    },
                    "valuePath": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "required": {
                  "type": "boolean"
                },
                "timeOptions": {
                  "items": {
                    "properties": {
                      "info": {
                        "type": "string"
                      },
                      "maxValue": {
                        "type": "integer"
                      },
                      "minValue": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "formats": {
            "items": {
              "properties": {
                "default": {
                  "type": "boolean"
                },
                "format": {
                  "enum": [
                    "CSV",
                    "TDE",
                    "JSON",
                    "PDF"
                  ],
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "template": {
                  "properties": {
                    "jsTemplateId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "schedules": {
            "items": {
              "properties": {
                "default": {
                  "type": "boolean"
                },
                "type": {
                  "enum": [
                    "SCHEDULE_NOW",
                    "SCHEDULE_LATER",
                    "SCHEDULE_RECURRENCE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "viewId": {
            "type": "string"
          },
          "viewInfo": {
            "type": "string"
          },
          "viewName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "viewgroupsummary": {
        "items": {
          "properties": {
            "category": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "viewGroupId": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "viewgroupwithviews": {
        "properties": {
          "viewGroupId": {
            "type": "string"
          },
          "views": {
            "items": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "viewId": {
                  "type": "string"
                },
                "viewName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "tags": []
}
